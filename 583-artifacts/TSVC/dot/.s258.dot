digraph "CFG for 's258' function" {
	label="CFG for 's258' function";

	Node0x564c93af3260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s258, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c93af3260 -> Node0x564c93af3700;
	Node0x564c93af3700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond2.preheader:                              \l  %nl.048 = phi i32 [ 0, %entry ], [ %inc27, %for.cond.cleanup4 ]\l  br label %for.body5\l}"];
	Node0x564c93af3700 -> Node0x564c93af3930;
	Node0x564c93af39f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call29 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call30 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s258, i64 0, i64 0)) #11\l  ret float %call30\l}"];
	Node0x564c93af3820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond.cleanup4:                                \l  %call25 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc27 = add nuw nsw i32 %nl.048, 1\l  %exitcond.not = icmp eq i32 %inc27, 100000\l  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !2\l|{<s0>T|<s1>F}}"];
	Node0x564c93af3820:s0 -> Node0x564c93af39f0;
	Node0x564c93af3820:s1 -> Node0x564c93af3700;
	Node0x564c93af3930 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body5:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next.7,\l... %for.body5 ]\l  %s.046 = phi float [ 0.000000e+00, %for.cond2.preheader ], [ %s.1.7,\l... %for.body5 ]\l  %arrayidx = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64\l... 0, i64 %indvars.iv\l  %0 = load float, float* %arrayidx, align 32, !tbaa !4\l  %cmp6 = fcmp ogt float %0, 0.000000e+00\l  %arrayidx9 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv\l  %1 = load float, float* %arrayidx9, align 32, !tbaa !4\l  %mul = fmul float %1, %1\l  %s.1 = select i1 %cmp6, float %mul, float %s.046\l  %arrayidx13 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv\l  %2 = load float, float* %arrayidx13, align 32, !tbaa !4\l  %mul14 = fmul float %s.1, %2\l  %add = fadd float %mul14, %1\l  %arrayidx18 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv\l  store float %add, float* %arrayidx18, align 32, !tbaa !4\l  %add19 = fadd float %s.1, 1.000000e+00\l  %arrayidx21 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 0, i64 %indvars.iv\l  %3 = load float, float* %arrayidx21, align 32, !tbaa !4\l  %mul22 = fmul float %add19, %3\l  %arrayidx24 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv\l  store float %mul22, float* %arrayidx24, align 32, !tbaa !4\l  %indvars.iv.next = or i64 %indvars.iv, 1\l  %arrayidx.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next\l  %4 = load float, float* %arrayidx.1, align 4, !tbaa !4\l  %cmp6.1 = fcmp ogt float %4, 0.000000e+00\l  %arrayidx9.1 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next\l  %5 = load float, float* %arrayidx9.1, align 4, !tbaa !4\l  %mul.1 = fmul float %5, %5\l  %.pre56 = fadd float %mul.1, 1.000000e+00\l  %add19.1.pre-phi = select i1 %cmp6.1, float %.pre56, float %add19\l  %s.1.1 = select i1 %cmp6.1, float %mul.1, float %s.1\l  %arrayidx13.1 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next\l  %6 = load float, float* %arrayidx13.1, align 4, !tbaa !4\l  %mul14.1 = fmul float %s.1.1, %6\l  %add.1 = fadd float %mul14.1, %5\l  %arrayidx18.1 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next\l  store float %add.1, float* %arrayidx18.1, align 4, !tbaa !4\l  %arrayidx21.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 0, i64 %indvars.iv.next\l  %7 = load float, float* %arrayidx21.1, align 4, !tbaa !4\l  %mul22.1 = fmul float %add19.1.pre-phi, %7\l  %arrayidx24.1 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next\l  store float %mul22.1, float* %arrayidx24.1, align 4, !tbaa !4\l  %indvars.iv.next.1 = or i64 %indvars.iv, 2\l  %arrayidx.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.1\l  %8 = load float, float* %arrayidx.2, align 8, !tbaa !4\l  %cmp6.2 = fcmp ogt float %8, 0.000000e+00\l  %arrayidx9.2 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.1\l  %9 = load float, float* %arrayidx9.2, align 8, !tbaa !4\l  %mul.2 = fmul float %9, %9\l  %.pre57 = fadd float %mul.2, 1.000000e+00\l  %add19.2.pre-phi = select i1 %cmp6.2, float %.pre57, float %add19.1.pre-phi\l  %s.1.2 = select i1 %cmp6.2, float %mul.2, float %s.1.1\l  %arrayidx13.2 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.1\l  %10 = load float, float* %arrayidx13.2, align 8, !tbaa !4\l  %mul14.2 = fmul float %s.1.2, %10\l  %add.2 = fadd float %mul14.2, %9\l  %arrayidx18.2 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.1\l  store float %add.2, float* %arrayidx18.2, align 8, !tbaa !4\l  %arrayidx21.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 0, i64 %indvars.iv.next.1\l  %11 = load float, float* %arrayidx21.2, align 8, !tbaa !4\l  %mul22.2 = fmul float %add19.2.pre-phi, %11\l  %arrayidx24.2 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.1\l  store float %mul22.2, float* %arrayidx24.2, align 8, !tbaa !4\l  %indvars.iv.next.2 = or i64 %indvars.iv, 3\l  %arrayidx.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.2\l  %12 = load float, float* %arrayidx.3, align 4, !tbaa !4\l  %cmp6.3 = fcmp ogt float %12, 0.000000e+00\l  %arrayidx9.3 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.2\l  %13 = load float, float* %arrayidx9.3, align 4, !tbaa !4\l  %mul.3 = fmul float %13, %13\l  %.pre58 = fadd float %mul.3, 1.000000e+00\l  %add19.3.pre-phi = select i1 %cmp6.3, float %.pre58, float %add19.2.pre-phi\l  %s.1.3 = select i1 %cmp6.3, float %mul.3, float %s.1.2\l  %arrayidx13.3 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.2\l  %14 = load float, float* %arrayidx13.3, align 4, !tbaa !4\l  %mul14.3 = fmul float %s.1.3, %14\l  %add.3 = fadd float %mul14.3, %13\l  %arrayidx18.3 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.2\l  store float %add.3, float* %arrayidx18.3, align 4, !tbaa !4\l  %arrayidx21.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 0, i64 %indvars.iv.next.2\l  %15 = load float, float* %arrayidx21.3, align 4, !tbaa !4\l  %mul22.3 = fmul float %add19.3.pre-phi, %15\l  %arrayidx24.3 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.2\l  store float %mul22.3, float* %arrayidx24.3, align 4, !tbaa !4\l  %indvars.iv.next.3 = or i64 %indvars.iv, 4\l  %arrayidx.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.3\l  %16 = load float, float* %arrayidx.4, align 16, !tbaa !4\l  %cmp6.4 = fcmp ogt float %16, 0.000000e+00\l  %arrayidx9.4 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.3\l  %17 = load float, float* %arrayidx9.4, align 16, !tbaa !4\l  %mul.4 = fmul float %17, %17\l  %.pre59 = fadd float %mul.4, 1.000000e+00\l  %add19.4.pre-phi = select i1 %cmp6.4, float %.pre59, float %add19.3.pre-phi\l  %s.1.4 = select i1 %cmp6.4, float %mul.4, float %s.1.3\l  %arrayidx13.4 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.3\l  %18 = load float, float* %arrayidx13.4, align 16, !tbaa !4\l  %mul14.4 = fmul float %s.1.4, %18\l  %add.4 = fadd float %mul14.4, %17\l  %arrayidx18.4 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.3\l  store float %add.4, float* %arrayidx18.4, align 16, !tbaa !4\l  %arrayidx21.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 0, i64 %indvars.iv.next.3\l  %19 = load float, float* %arrayidx21.4, align 16, !tbaa !4\l  %mul22.4 = fmul float %add19.4.pre-phi, %19\l  %arrayidx24.4 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.3\l  store float %mul22.4, float* %arrayidx24.4, align 16, !tbaa !4\l  %indvars.iv.next.4 = or i64 %indvars.iv, 5\l  %arrayidx.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.4\l  %20 = load float, float* %arrayidx.5, align 4, !tbaa !4\l  %cmp6.5 = fcmp ogt float %20, 0.000000e+00\l  %arrayidx9.5 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.4\l  %21 = load float, float* %arrayidx9.5, align 4, !tbaa !4\l  %mul.5 = fmul float %21, %21\l  %.pre60 = fadd float %mul.5, 1.000000e+00\l  %add19.5.pre-phi = select i1 %cmp6.5, float %.pre60, float %add19.4.pre-phi\l  %s.1.5 = select i1 %cmp6.5, float %mul.5, float %s.1.4\l  %arrayidx13.5 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.4\l  %22 = load float, float* %arrayidx13.5, align 4, !tbaa !4\l  %mul14.5 = fmul float %s.1.5, %22\l  %add.5 = fadd float %mul14.5, %21\l  %arrayidx18.5 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.4\l  store float %add.5, float* %arrayidx18.5, align 4, !tbaa !4\l  %arrayidx21.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 0, i64 %indvars.iv.next.4\l  %23 = load float, float* %arrayidx21.5, align 4, !tbaa !4\l  %mul22.5 = fmul float %add19.5.pre-phi, %23\l  %arrayidx24.5 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.4\l  store float %mul22.5, float* %arrayidx24.5, align 4, !tbaa !4\l  %indvars.iv.next.5 = or i64 %indvars.iv, 6\l  %arrayidx.6 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.5\l  %24 = load float, float* %arrayidx.6, align 8, !tbaa !4\l  %cmp6.6 = fcmp ogt float %24, 0.000000e+00\l  %arrayidx9.6 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.5\l  %25 = load float, float* %arrayidx9.6, align 8, !tbaa !4\l  %mul.6 = fmul float %25, %25\l  %.pre61 = fadd float %mul.6, 1.000000e+00\l  %add19.6.pre-phi = select i1 %cmp6.6, float %.pre61, float %add19.5.pre-phi\l  %s.1.6 = select i1 %cmp6.6, float %mul.6, float %s.1.5\l  %arrayidx13.6 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.5\l  %26 = load float, float* %arrayidx13.6, align 8, !tbaa !4\l  %mul14.6 = fmul float %s.1.6, %26\l  %add.6 = fadd float %mul14.6, %25\l  %arrayidx18.6 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.5\l  store float %add.6, float* %arrayidx18.6, align 8, !tbaa !4\l  %arrayidx21.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 0, i64 %indvars.iv.next.5\l  %27 = load float, float* %arrayidx21.6, align 8, !tbaa !4\l  %mul22.6 = fmul float %add19.6.pre-phi, %27\l  %arrayidx24.6 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.5\l  store float %mul22.6, float* %arrayidx24.6, align 8, !tbaa !4\l  %indvars.iv.next.6 = or i64 %indvars.iv, 7\l  %arrayidx.7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.6\l  %28 = load float, float* %arrayidx.7, align 4, !tbaa !4\l  %cmp6.7 = fcmp ogt float %28, 0.000000e+00\l  %arrayidx9.7 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.6\l  %29 = load float, float* %arrayidx9.7, align 4, !tbaa !4\l  %mul.7 = fmul float %29, %29\l  %.pre62 = fadd float %mul.7, 1.000000e+00\l  %add19.7.pre-phi = select i1 %cmp6.7, float %.pre62, float %add19.6.pre-phi\l  %s.1.7 = select i1 %cmp6.7, float %mul.7, float %s.1.6\l  %arrayidx13.7 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.6\l  %30 = load float, float* %arrayidx13.7, align 4, !tbaa !4\l  %mul14.7 = fmul float %s.1.7, %30\l  %add.7 = fadd float %mul14.7, %29\l  %arrayidx18.7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.6\l  store float %add.7, float* %arrayidx18.7, align 4, !tbaa !4\l  %arrayidx21.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 0, i64 %indvars.iv.next.6\l  %31 = load float, float* %arrayidx21.7, align 4, !tbaa !4\l  %mul22.7 = fmul float %add19.7.pre-phi, %31\l  %arrayidx24.7 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.6\l  store float %mul22.7, float* %arrayidx24.7, align 4, !tbaa !4\l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  %exitcond.7.not = icmp eq i64 %indvars.iv.next.7, 256\l  br i1 %exitcond.7.not, label %for.cond.cleanup4, label %for.body5,\l... !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x564c93af3930:s0 -> Node0x564c93af3820;
	Node0x564c93af3930:s1 -> Node0x564c93af3930;
}
