digraph "CFG for 's172' function" {
	label="CFG for 's172' function";

	Node0x564c93a3b5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{entry:\l  %arg_info = getelementptr inbounds %struct.args_t, %struct.args_t*\l... %func_args, i64 0, i32 2\l  %0 = bitcast i8** %arg_info to %struct.anon.0**\l  %1 = load %struct.anon.0*, %struct.anon.0** %0, align 8, !tbaa !2\l  %a = getelementptr inbounds %struct.anon.0, %struct.anon.0* %1, i64 0, i32 0\l  %2 = load i32, i32* %a, align 4, !tbaa !9\l  %b = getelementptr inbounds %struct.anon.0, %struct.anon.0* %1, i64 0, i32 1\l  %3 = load i32, i32* %b, align 4, !tbaa !12\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s172, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  %cmp326 = icmp slt i32 %2, 32001\l  %4 = add i32 %2, -1\l  %5 = sext i32 %4 to i64\l  %6 = sext i32 %3 to i64\l  %7 = add i32 %2, %3\l  %8 = add i32 %7, -1\l  %9 = icmp sgt i32 %8, 32000\l  %smax = select i1 %9, i32 %8, i32 32000\l  %10 = sub i32 %smax, %2\l  br label %for.body\l}"];
	Node0x564c93a3b5f0 -> Node0x564c93a3cc70;
	Node0x564c93a3d1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call12 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call13 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s172, i64 0, i64 0)) #11\l  ret float %call13\l}"];
	Node0x564c93a3cc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{for.body:                                         \l  %nl.028 = phi i32 [ 0, %entry ], [ %inc, %for.cond.cleanup4 ]\l  br i1 %cmp326, label %for.body5.preheader, label %for.cond.cleanup4\l|{<s0>T|<s1>F}}"];
	Node0x564c93a3cc70:s0 -> Node0x564c93a3d8d0;
	Node0x564c93a3cc70:s1 -> Node0x564c93a3d7c0;
	Node0x564c93a3d8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.body5.preheader:                              \l  %11 = udiv i32 %10, %3\l  %12 = add i32 %11, 1\l  %xtraiter = and i32 %12, 7\l  %lcmp.mod.not = icmp eq i32 %xtraiter, 0\l  br i1 %lcmp.mod.not, label %for.body5.prol.loopexit, label %for.body5.prol\l|{<s0>T|<s1>F}}"];
	Node0x564c93a3d8d0:s0 -> Node0x564c93a3dd50;
	Node0x564c93a3d8d0:s1 -> Node0x564c93a3ddd0;
	Node0x564c93a3ddd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body5.prol:                                   \l  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %for.body5.prol ], [ %5,\l... %for.body5.preheader ]\l  %prol.iter = phi i32 [ %prol.iter.sub, %for.body5.prol ], [ %xtraiter,\l... %for.body5.preheader ]\l  %arrayidx.prol = getelementptr inbounds [32000 x float], [32000 x float]*\l... @b, i64 0, i64 %indvars.iv.prol\l  %13 = load float, float* %arrayidx.prol, align 4, !tbaa !13\l  %arrayidx7.prol = getelementptr inbounds [32000 x float], [32000 x float]*\l... @a, i64 0, i64 %indvars.iv.prol\l  %14 = load float, float* %arrayidx7.prol, align 4, !tbaa !13\l  %add.prol = fadd float %13, %14\l  store float %add.prol, float* %arrayidx7.prol, align 4, !tbaa !13\l  %indvars.iv.next.prol = add i64 %indvars.iv.prol, %6\l  %prol.iter.sub = add i32 %prol.iter, -1\l  %prol.iter.cmp.not = icmp eq i32 %prol.iter.sub, 0\l  br i1 %prol.iter.cmp.not, label %for.body5.prol.loopexit, label\l... %for.body5.prol, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x564c93a3ddd0:s0 -> Node0x564c93a3dd50;
	Node0x564c93a3ddd0:s1 -> Node0x564c93a3ddd0;
	Node0x564c93a3dd50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.body5.prol.loopexit:                          \l  %indvars.iv.unr = phi i64 [ %5, %for.body5.preheader ], [\l... %indvars.iv.next.prol, %for.body5.prol ]\l  %15 = icmp ult i32 %11, 7\l  br i1 %15, label %for.cond.cleanup4, label %for.body5\l|{<s0>T|<s1>F}}"];
	Node0x564c93a3dd50:s0 -> Node0x564c93a3d7c0;
	Node0x564c93a3dd50:s1 -> Node0x564c93a3ee10;
	Node0x564c93a3d7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{for.cond.cleanup4:                                \l  %call9 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc = add nuw nsw i32 %nl.028, 1\l  %exitcond.not = icmp eq i32 %inc, 100000\l  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x564c93a3d7c0:s0 -> Node0x564c93a3d1b0;
	Node0x564c93a3d7c0:s1 -> Node0x564c93a3cc70;
	Node0x564c93a3ee10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{for.body5:                                        \l  %indvars.iv = phi i64 [ %indvars.iv.next.7, %for.body5 ], [ %indvars.iv.unr,\l... %for.body5.prol.loopexit ]\l  %arrayidx = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64\l... 0, i64 %indvars.iv\l  %16 = load float, float* %arrayidx, align 4, !tbaa !13\l  %arrayidx7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv\l  %17 = load float, float* %arrayidx7, align 4, !tbaa !13\l  %add = fadd float %16, %17\l  store float %add, float* %arrayidx7, align 4, !tbaa !13\l  %indvars.iv.next = add i64 %indvars.iv, %6\l  %arrayidx.1 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next\l  %18 = load float, float* %arrayidx.1, align 4, !tbaa !13\l  %arrayidx7.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next\l  %19 = load float, float* %arrayidx7.1, align 4, !tbaa !13\l  %add.1 = fadd float %18, %19\l  store float %add.1, float* %arrayidx7.1, align 4, !tbaa !13\l  %indvars.iv.next.1 = add i64 %indvars.iv.next, %6\l  %arrayidx.2 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.1\l  %20 = load float, float* %arrayidx.2, align 4, !tbaa !13\l  %arrayidx7.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.1\l  %21 = load float, float* %arrayidx7.2, align 4, !tbaa !13\l  %add.2 = fadd float %20, %21\l  store float %add.2, float* %arrayidx7.2, align 4, !tbaa !13\l  %indvars.iv.next.2 = add i64 %indvars.iv.next.1, %6\l  %arrayidx.3 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.2\l  %22 = load float, float* %arrayidx.3, align 4, !tbaa !13\l  %arrayidx7.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.2\l  %23 = load float, float* %arrayidx7.3, align 4, !tbaa !13\l  %add.3 = fadd float %22, %23\l  store float %add.3, float* %arrayidx7.3, align 4, !tbaa !13\l  %indvars.iv.next.3 = add i64 %indvars.iv.next.2, %6\l  %arrayidx.4 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.3\l  %24 = load float, float* %arrayidx.4, align 4, !tbaa !13\l  %arrayidx7.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.3\l  %25 = load float, float* %arrayidx7.4, align 4, !tbaa !13\l  %add.4 = fadd float %24, %25\l  store float %add.4, float* %arrayidx7.4, align 4, !tbaa !13\l  %indvars.iv.next.4 = add i64 %indvars.iv.next.3, %6\l  %arrayidx.5 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.4\l  %26 = load float, float* %arrayidx.5, align 4, !tbaa !13\l  %arrayidx7.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.4\l  %27 = load float, float* %arrayidx7.5, align 4, !tbaa !13\l  %add.5 = fadd float %26, %27\l  store float %add.5, float* %arrayidx7.5, align 4, !tbaa !13\l  %indvars.iv.next.5 = add i64 %indvars.iv.next.4, %6\l  %arrayidx.6 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.5\l  %28 = load float, float* %arrayidx.6, align 4, !tbaa !13\l  %arrayidx7.6 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.5\l  %29 = load float, float* %arrayidx7.6, align 4, !tbaa !13\l  %add.6 = fadd float %28, %29\l  store float %add.6, float* %arrayidx7.6, align 4, !tbaa !13\l  %indvars.iv.next.6 = add i64 %indvars.iv.next.5, %6\l  %arrayidx.7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.6\l  %30 = load float, float* %arrayidx.7, align 4, !tbaa !13\l  %arrayidx7.7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.6\l  %31 = load float, float* %arrayidx7.7, align 4, !tbaa !13\l  %add.7 = fadd float %30, %31\l  store float %add.7, float* %arrayidx7.7, align 4, !tbaa !13\l  %indvars.iv.next.7 = add i64 %indvars.iv.next.6, %6\l  %cmp3.7 = icmp slt i64 %indvars.iv.next.7, 32000\l  br i1 %cmp3.7, label %for.body5, label %for.cond.cleanup4, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x564c93a3ee10:s0 -> Node0x564c93a3ee10;
	Node0x564c93a3ee10:s1 -> Node0x564c93a3d7c0;
}
