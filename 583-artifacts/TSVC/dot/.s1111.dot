digraph "CFG for 's1111' function" {
	label="CFG for 's1111' function";

	Node0x564c93955d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @__func__.s1111, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c93955d90 -> Node0x564c93956230;
	Node0x564c93956230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond2.preheader:                              \l  %nl.057 = phi i32 [ 0, %entry ], [ %inc36, %for.cond.cleanup4 ]\l  br label %for.body5\l}"];
	Node0x564c93956230 -> Node0x564c93956460;
	Node0x564c93956580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call38 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call39 = tail call float @calc_checksum(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @__func__.s1111, i64 0, i64 0)) #11\l  ret float %call39\l}"];
	Node0x564c93956350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond.cleanup4:                                \l  %call34 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc36 = add nuw nsw i32 %nl.057, 1\l  %exitcond.not = icmp eq i32 %inc36, 200000\l  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !2\l|{<s0>T|<s1>F}}"];
	Node0x564c93956350:s0 -> Node0x564c93956580;
	Node0x564c93956350:s1 -> Node0x564c93956230;
	Node0x564c93956460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body5:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next.7,\l... %for.body5 ]\l  %arrayidx = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64\l... 0, i64 %indvars.iv\l  %0 = load float, float* %arrayidx, align 32, !tbaa !4\l  %arrayidx7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv\l  %1 = load float, float* %arrayidx7, align 32, !tbaa !4\l  %mul = fmul float %0, %1\l  %arrayidx9 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv\l  %2 = load float, float* %arrayidx9, align 32, !tbaa !4\l  %mul12 = fmul float %1, %2\l  %add = fadd float %mul, %mul12\l  %mul17 = fmul float %0, %0\l  %add18 = fadd float %mul17, %add\l  %add24 = fadd float %mul12, %add18\l  %mul29 = fmul float %0, %2\l  %add30 = fadd float %mul29, %add24\l  %3 = shl nuw nsw i64 %indvars.iv, 1\l  %arrayidx33 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %3\l  store float %add30, float* %arrayidx33, align 64, !tbaa !4\l  %indvars.iv.next = or i64 %indvars.iv, 1\l  %arrayidx.1 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next\l  %4 = load float, float* %arrayidx.1, align 4, !tbaa !4\l  %arrayidx7.1 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next\l  %5 = load float, float* %arrayidx7.1, align 4, !tbaa !4\l  %mul.1 = fmul float %4, %5\l  %arrayidx9.1 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next\l  %6 = load float, float* %arrayidx9.1, align 4, !tbaa !4\l  %mul12.1 = fmul float %5, %6\l  %add.1 = fadd float %mul.1, %mul12.1\l  %mul17.1 = fmul float %4, %4\l  %add18.1 = fadd float %mul17.1, %add.1\l  %add24.1 = fadd float %mul12.1, %add18.1\l  %mul29.1 = fmul float %4, %6\l  %add30.1 = fadd float %mul29.1, %add24.1\l  %7 = shl nuw nsw i64 %indvars.iv.next, 1\l  %arrayidx33.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %7\l  store float %add30.1, float* %arrayidx33.1, align 8, !tbaa !4\l  %indvars.iv.next.1 = or i64 %indvars.iv, 2\l  %arrayidx.2 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.1\l  %8 = load float, float* %arrayidx.2, align 8, !tbaa !4\l  %arrayidx7.2 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.1\l  %9 = load float, float* %arrayidx7.2, align 8, !tbaa !4\l  %mul.2 = fmul float %8, %9\l  %arrayidx9.2 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.1\l  %10 = load float, float* %arrayidx9.2, align 8, !tbaa !4\l  %mul12.2 = fmul float %9, %10\l  %add.2 = fadd float %mul.2, %mul12.2\l  %mul17.2 = fmul float %8, %8\l  %add18.2 = fadd float %mul17.2, %add.2\l  %add24.2 = fadd float %mul12.2, %add18.2\l  %mul29.2 = fmul float %8, %10\l  %add30.2 = fadd float %mul29.2, %add24.2\l  %11 = shl nuw nsw i64 %indvars.iv.next.1, 1\l  %arrayidx33.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %11\l  store float %add30.2, float* %arrayidx33.2, align 16, !tbaa !4\l  %indvars.iv.next.2 = or i64 %indvars.iv, 3\l  %arrayidx.3 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.2\l  %12 = load float, float* %arrayidx.3, align 4, !tbaa !4\l  %arrayidx7.3 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.2\l  %13 = load float, float* %arrayidx7.3, align 4, !tbaa !4\l  %mul.3 = fmul float %12, %13\l  %arrayidx9.3 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.2\l  %14 = load float, float* %arrayidx9.3, align 4, !tbaa !4\l  %mul12.3 = fmul float %13, %14\l  %add.3 = fadd float %mul.3, %mul12.3\l  %mul17.3 = fmul float %12, %12\l  %add18.3 = fadd float %mul17.3, %add.3\l  %add24.3 = fadd float %mul12.3, %add18.3\l  %mul29.3 = fmul float %12, %14\l  %add30.3 = fadd float %mul29.3, %add24.3\l  %15 = shl nuw nsw i64 %indvars.iv.next.2, 1\l  %arrayidx33.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %15\l  store float %add30.3, float* %arrayidx33.3, align 8, !tbaa !4\l  %indvars.iv.next.3 = or i64 %indvars.iv, 4\l  %arrayidx.4 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.3\l  %16 = load float, float* %arrayidx.4, align 16, !tbaa !4\l  %arrayidx7.4 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.3\l  %17 = load float, float* %arrayidx7.4, align 16, !tbaa !4\l  %mul.4 = fmul float %16, %17\l  %arrayidx9.4 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.3\l  %18 = load float, float* %arrayidx9.4, align 16, !tbaa !4\l  %mul12.4 = fmul float %17, %18\l  %add.4 = fadd float %mul.4, %mul12.4\l  %mul17.4 = fmul float %16, %16\l  %add18.4 = fadd float %mul17.4, %add.4\l  %add24.4 = fadd float %mul12.4, %add18.4\l  %mul29.4 = fmul float %16, %18\l  %add30.4 = fadd float %mul29.4, %add24.4\l  %19 = shl nuw nsw i64 %indvars.iv.next.3, 1\l  %arrayidx33.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %19\l  store float %add30.4, float* %arrayidx33.4, align 32, !tbaa !4\l  %indvars.iv.next.4 = or i64 %indvars.iv, 5\l  %arrayidx.5 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.4\l  %20 = load float, float* %arrayidx.5, align 4, !tbaa !4\l  %arrayidx7.5 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.4\l  %21 = load float, float* %arrayidx7.5, align 4, !tbaa !4\l  %mul.5 = fmul float %20, %21\l  %arrayidx9.5 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.4\l  %22 = load float, float* %arrayidx9.5, align 4, !tbaa !4\l  %mul12.5 = fmul float %21, %22\l  %add.5 = fadd float %mul.5, %mul12.5\l  %mul17.5 = fmul float %20, %20\l  %add18.5 = fadd float %mul17.5, %add.5\l  %add24.5 = fadd float %mul12.5, %add18.5\l  %mul29.5 = fmul float %20, %22\l  %add30.5 = fadd float %mul29.5, %add24.5\l  %23 = shl nuw nsw i64 %indvars.iv.next.4, 1\l  %arrayidx33.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %23\l  store float %add30.5, float* %arrayidx33.5, align 8, !tbaa !4\l  %indvars.iv.next.5 = or i64 %indvars.iv, 6\l  %arrayidx.6 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.5\l  %24 = load float, float* %arrayidx.6, align 8, !tbaa !4\l  %arrayidx7.6 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.5\l  %25 = load float, float* %arrayidx7.6, align 8, !tbaa !4\l  %mul.6 = fmul float %24, %25\l  %arrayidx9.6 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.5\l  %26 = load float, float* %arrayidx9.6, align 8, !tbaa !4\l  %mul12.6 = fmul float %25, %26\l  %add.6 = fadd float %mul.6, %mul12.6\l  %mul17.6 = fmul float %24, %24\l  %add18.6 = fadd float %mul17.6, %add.6\l  %add24.6 = fadd float %mul12.6, %add18.6\l  %mul29.6 = fmul float %24, %26\l  %add30.6 = fadd float %mul29.6, %add24.6\l  %27 = shl nuw nsw i64 %indvars.iv.next.5, 1\l  %arrayidx33.6 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %27\l  store float %add30.6, float* %arrayidx33.6, align 16, !tbaa !4\l  %indvars.iv.next.6 = or i64 %indvars.iv, 7\l  %arrayidx.7 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.6\l  %28 = load float, float* %arrayidx.7, align 4, !tbaa !4\l  %arrayidx7.7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.6\l  %29 = load float, float* %arrayidx7.7, align 4, !tbaa !4\l  %mul.7 = fmul float %28, %29\l  %arrayidx9.7 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.6\l  %30 = load float, float* %arrayidx9.7, align 4, !tbaa !4\l  %mul12.7 = fmul float %29, %30\l  %add.7 = fadd float %mul.7, %mul12.7\l  %mul17.7 = fmul float %28, %28\l  %add18.7 = fadd float %mul17.7, %add.7\l  %add24.7 = fadd float %mul12.7, %add18.7\l  %mul29.7 = fmul float %28, %30\l  %add30.7 = fadd float %mul29.7, %add24.7\l  %31 = shl nuw nsw i64 %indvars.iv.next.6, 1\l  %arrayidx33.7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %31\l  store float %add30.7, float* %arrayidx33.7, align 8, !tbaa !4\l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  %exitcond.7.not = icmp eq i64 %indvars.iv.next.7, 16000\l  br i1 %exitcond.7.not, label %for.cond.cleanup4, label %for.body5,\l... !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x564c93956460:s0 -> Node0x564c93956350;
	Node0x564c93956460:s1 -> Node0x564c93956460;
}
