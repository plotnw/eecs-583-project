digraph "CFG for 's274' function" {
	label="CFG for 's274' function";

	Node0x564c93b21f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s274, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c93b21f30 -> Node0x564c93b223d0;
	Node0x564c93b223d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond2.preheader:                              \l  %nl.052 = phi i32 [ 0, %entry ], [ %inc31, %for.cond.cleanup4 ]\l  br label %for.body5\l}"];
	Node0x564c93b223d0 -> Node0x564c93b22600;
	Node0x564c93b226c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call33 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call34 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s274, i64 0, i64 0)) #11\l  ret float %call34\l}"];
	Node0x564c93b224f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond.cleanup4:                                \l  %call29 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc31 = add nuw nsw i32 %nl.052, 1\l  %exitcond.not = icmp eq i32 %inc31, 100000\l  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !2\l|{<s0>T|<s1>F}}"];
	Node0x564c93b224f0:s0 -> Node0x564c93b226c0;
	Node0x564c93b224f0:s1 -> Node0x564c93b223d0;
	Node0x564c93b22600 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body5:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next.7,\l... %for.inc.7 ]\l  %arrayidx = getelementptr inbounds [32000 x float], [32000 x float]* @c, i64\l... 0, i64 %indvars.iv\l  %0 = load float, float* %arrayidx, align 32, !tbaa !4\l  %arrayidx7 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv\l  %1 = load float, float* %arrayidx7, align 32, !tbaa !4\l  %arrayidx9 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv\l  %2 = load float, float* %arrayidx9, align 32, !tbaa !4\l  %mul = fmul float %1, %2\l  %add = fadd float %0, %mul\l  %arrayidx11 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv\l  store float %add, float* %arrayidx11, align 32, !tbaa !4\l  %cmp14 = fcmp ogt float %add, 0.000000e+00\l  br i1 %cmp14, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x564c93b22600:s0 -> Node0x564c93b23cd0;
	Node0x564c93b22600:s1 -> Node0x564c93b23d40;
	Node0x564c93b23cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then:                                          \l  %arrayidx18 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv\l  %3 = load float, float* %arrayidx18, align 32, !tbaa !4\l  %add19 = fadd float %add, %3\l  store float %add19, float* %arrayidx18, align 32, !tbaa !4\l  br label %for.inc\l}"];
	Node0x564c93b23cd0 -> Node0x564c93b24160;
	Node0x564c93b23d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.else:                                          \l  store float %mul, float* %arrayidx11, align 32, !tbaa !4\l  br label %for.inc\l}"];
	Node0x564c93b23d40 -> Node0x564c93b24160;
	Node0x564c93b24160 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc:                                          \l  %indvars.iv.next = or i64 %indvars.iv, 1\l  %arrayidx.1 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next\l  %4 = load float, float* %arrayidx.1, align 4, !tbaa !4\l  %arrayidx7.1 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next\l  %5 = load float, float* %arrayidx7.1, align 4, !tbaa !4\l  %arrayidx9.1 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next\l  %6 = load float, float* %arrayidx9.1, align 4, !tbaa !4\l  %mul.1 = fmul float %5, %6\l  %add.1 = fadd float %4, %mul.1\l  %arrayidx11.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next\l  store float %add.1, float* %arrayidx11.1, align 4, !tbaa !4\l  %cmp14.1 = fcmp ogt float %add.1, 0.000000e+00\l  br i1 %cmp14.1, label %if.then.1, label %if.else.1\l|{<s0>T|<s1>F}}"];
	Node0x564c93b24160:s0 -> Node0x564c93b24bd0;
	Node0x564c93b24160:s1 -> Node0x564c93b24c50;
	Node0x564c93b24c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.else.1:                                        \l  store float %mul.1, float* %arrayidx11.1, align 4, !tbaa !4\l  br label %for.inc.1\l}"];
	Node0x564c93b24c50 -> Node0x564c93b24e10;
	Node0x564c93b24bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then.1:                                        \l  %arrayidx18.1 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next\l  %7 = load float, float* %arrayidx18.1, align 4, !tbaa !4\l  %add19.1 = fadd float %add.1, %7\l  store float %add19.1, float* %arrayidx18.1, align 4, !tbaa !4\l  br label %for.inc.1\l}"];
	Node0x564c93b24bd0 -> Node0x564c93b24e10;
	Node0x564c93b24e10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.1:                                        \l  %indvars.iv.next.1 = or i64 %indvars.iv, 2\l  %arrayidx.2 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.1\l  %8 = load float, float* %arrayidx.2, align 8, !tbaa !4\l  %arrayidx7.2 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.1\l  %9 = load float, float* %arrayidx7.2, align 8, !tbaa !4\l  %arrayidx9.2 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.1\l  %10 = load float, float* %arrayidx9.2, align 8, !tbaa !4\l  %mul.2 = fmul float %9, %10\l  %add.2 = fadd float %8, %mul.2\l  %arrayidx11.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.1\l  store float %add.2, float* %arrayidx11.2, align 8, !tbaa !4\l  %cmp14.2 = fcmp ogt float %add.2, 0.000000e+00\l  br i1 %cmp14.2, label %if.then.2, label %if.else.2\l|{<s0>T|<s1>F}}"];
	Node0x564c93b24e10:s0 -> Node0x564c93b24560;
	Node0x564c93b24e10:s1 -> Node0x564c93b23be0;
	Node0x564c93b23be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.else.2:                                        \l  store float %mul.2, float* %arrayidx11.2, align 8, !tbaa !4\l  br label %for.inc.2\l}"];
	Node0x564c93b23be0 -> Node0x564c93b23c60;
	Node0x564c93b24560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then.2:                                        \l  %arrayidx18.2 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.1\l  %11 = load float, float* %arrayidx18.2, align 8, !tbaa !4\l  %add19.2 = fadd float %add.2, %11\l  store float %add19.2, float* %arrayidx18.2, align 8, !tbaa !4\l  br label %for.inc.2\l}"];
	Node0x564c93b24560 -> Node0x564c93b23c60;
	Node0x564c93b23c60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.2:                                        \l  %indvars.iv.next.2 = or i64 %indvars.iv, 3\l  %arrayidx.3 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.2\l  %12 = load float, float* %arrayidx.3, align 4, !tbaa !4\l  %arrayidx7.3 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.2\l  %13 = load float, float* %arrayidx7.3, align 4, !tbaa !4\l  %arrayidx9.3 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.2\l  %14 = load float, float* %arrayidx9.3, align 4, !tbaa !4\l  %mul.3 = fmul float %13, %14\l  %add.3 = fadd float %12, %mul.3\l  %arrayidx11.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.2\l  store float %add.3, float* %arrayidx11.3, align 4, !tbaa !4\l  %cmp14.3 = fcmp ogt float %add.3, 0.000000e+00\l  br i1 %cmp14.3, label %if.then.3, label %if.else.3\l|{<s0>T|<s1>F}}"];
	Node0x564c93b23c60:s0 -> Node0x564c93b26cd0;
	Node0x564c93b23c60:s1 -> Node0x564c93b26d20;
	Node0x564c93b26d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.else.3:                                        \l  store float %mul.3, float* %arrayidx11.3, align 4, !tbaa !4\l  br label %for.inc.3\l}"];
	Node0x564c93b26d20 -> Node0x564c93b26ee0;
	Node0x564c93b26cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then.3:                                        \l  %arrayidx18.3 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.2\l  %15 = load float, float* %arrayidx18.3, align 4, !tbaa !4\l  %add19.3 = fadd float %add.3, %15\l  store float %add19.3, float* %arrayidx18.3, align 4, !tbaa !4\l  br label %for.inc.3\l}"];
	Node0x564c93b26cd0 -> Node0x564c93b26ee0;
	Node0x564c93b26ee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.3:                                        \l  %indvars.iv.next.3 = or i64 %indvars.iv, 4\l  %arrayidx.4 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.3\l  %16 = load float, float* %arrayidx.4, align 16, !tbaa !4\l  %arrayidx7.4 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.3\l  %17 = load float, float* %arrayidx7.4, align 16, !tbaa !4\l  %arrayidx9.4 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.3\l  %18 = load float, float* %arrayidx9.4, align 16, !tbaa !4\l  %mul.4 = fmul float %17, %18\l  %add.4 = fadd float %16, %mul.4\l  %arrayidx11.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.3\l  store float %add.4, float* %arrayidx11.4, align 16, !tbaa !4\l  %cmp14.4 = fcmp ogt float %add.4, 0.000000e+00\l  br i1 %cmp14.4, label %if.then.4, label %if.else.4\l|{<s0>T|<s1>F}}"];
	Node0x564c93b26ee0:s0 -> Node0x564c93b27af0;
	Node0x564c93b26ee0:s1 -> Node0x564c93b27b40;
	Node0x564c93b27b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.else.4:                                        \l  store float %mul.4, float* %arrayidx11.4, align 16, !tbaa !4\l  br label %for.inc.4\l}"];
	Node0x564c93b27b40 -> Node0x564c93b27d00;
	Node0x564c93b27af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then.4:                                        \l  %arrayidx18.4 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.3\l  %19 = load float, float* %arrayidx18.4, align 16, !tbaa !4\l  %add19.4 = fadd float %add.4, %19\l  store float %add19.4, float* %arrayidx18.4, align 16, !tbaa !4\l  br label %for.inc.4\l}"];
	Node0x564c93b27af0 -> Node0x564c93b27d00;
	Node0x564c93b27d00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.4:                                        \l  %indvars.iv.next.4 = or i64 %indvars.iv, 5\l  %arrayidx.5 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.4\l  %20 = load float, float* %arrayidx.5, align 4, !tbaa !4\l  %arrayidx7.5 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.4\l  %21 = load float, float* %arrayidx7.5, align 4, !tbaa !4\l  %arrayidx9.5 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.4\l  %22 = load float, float* %arrayidx9.5, align 4, !tbaa !4\l  %mul.5 = fmul float %21, %22\l  %add.5 = fadd float %20, %mul.5\l  %arrayidx11.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.4\l  store float %add.5, float* %arrayidx11.5, align 4, !tbaa !4\l  %cmp14.5 = fcmp ogt float %add.5, 0.000000e+00\l  br i1 %cmp14.5, label %if.then.5, label %if.else.5\l|{<s0>T|<s1>F}}"];
	Node0x564c93b27d00:s0 -> Node0x564c93b289a0;
	Node0x564c93b27d00:s1 -> Node0x564c93b289f0;
	Node0x564c93b289f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.else.5:                                        \l  store float %mul.5, float* %arrayidx11.5, align 4, !tbaa !4\l  br label %for.inc.5\l}"];
	Node0x564c93b289f0 -> Node0x564c93b28bb0;
	Node0x564c93b289a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then.5:                                        \l  %arrayidx18.5 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.4\l  %23 = load float, float* %arrayidx18.5, align 4, !tbaa !4\l  %add19.5 = fadd float %add.5, %23\l  store float %add19.5, float* %arrayidx18.5, align 4, !tbaa !4\l  br label %for.inc.5\l}"];
	Node0x564c93b289a0 -> Node0x564c93b28bb0;
	Node0x564c93b28bb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.5:                                        \l  %indvars.iv.next.5 = or i64 %indvars.iv, 6\l  %arrayidx.6 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.5\l  %24 = load float, float* %arrayidx.6, align 8, !tbaa !4\l  %arrayidx7.6 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.5\l  %25 = load float, float* %arrayidx7.6, align 8, !tbaa !4\l  %arrayidx9.6 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.5\l  %26 = load float, float* %arrayidx9.6, align 8, !tbaa !4\l  %mul.6 = fmul float %25, %26\l  %add.6 = fadd float %24, %mul.6\l  %arrayidx11.6 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.5\l  store float %add.6, float* %arrayidx11.6, align 8, !tbaa !4\l  %cmp14.6 = fcmp ogt float %add.6, 0.000000e+00\l  br i1 %cmp14.6, label %if.then.6, label %if.else.6\l|{<s0>T|<s1>F}}"];
	Node0x564c93b28bb0:s0 -> Node0x564c93b29e60;
	Node0x564c93b28bb0:s1 -> Node0x564c93b29eb0;
	Node0x564c93b29eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.else.6:                                        \l  store float %mul.6, float* %arrayidx11.6, align 8, !tbaa !4\l  br label %for.inc.6\l}"];
	Node0x564c93b29eb0 -> Node0x564c93b2a070;
	Node0x564c93b29e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then.6:                                        \l  %arrayidx18.6 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.5\l  %27 = load float, float* %arrayidx18.6, align 8, !tbaa !4\l  %add19.6 = fadd float %add.6, %27\l  store float %add19.6, float* %arrayidx18.6, align 8, !tbaa !4\l  br label %for.inc.6\l}"];
	Node0x564c93b29e60 -> Node0x564c93b2a070;
	Node0x564c93b2a070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.6:                                        \l  %indvars.iv.next.6 = or i64 %indvars.iv, 7\l  %arrayidx.7 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.6\l  %28 = load float, float* %arrayidx.7, align 4, !tbaa !4\l  %arrayidx7.7 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.6\l  %29 = load float, float* %arrayidx7.7, align 4, !tbaa !4\l  %arrayidx9.7 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.6\l  %30 = load float, float* %arrayidx9.7, align 4, !tbaa !4\l  %mul.7 = fmul float %29, %30\l  %add.7 = fadd float %28, %mul.7\l  %arrayidx11.7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.6\l  store float %add.7, float* %arrayidx11.7, align 4, !tbaa !4\l  %cmp14.7 = fcmp ogt float %add.7, 0.000000e+00\l  br i1 %cmp14.7, label %if.then.7, label %if.else.7\l|{<s0>T|<s1>F}}"];
	Node0x564c93b2a070:s0 -> Node0x564c93b2ad10;
	Node0x564c93b2a070:s1 -> Node0x564c93b2ad60;
	Node0x564c93b2ad60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.else.7:                                        \l  store float %mul.7, float* %arrayidx11.7, align 4, !tbaa !4\l  br label %for.inc.7\l}"];
	Node0x564c93b2ad60 -> Node0x564c93b23100;
	Node0x564c93b2ad10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then.7:                                        \l  %arrayidx18.7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.6\l  %31 = load float, float* %arrayidx18.7, align 4, !tbaa !4\l  %add19.7 = fadd float %add.7, %31\l  store float %add19.7, float* %arrayidx18.7, align 4, !tbaa !4\l  br label %for.inc.7\l}"];
	Node0x564c93b2ad10 -> Node0x564c93b23100;
	Node0x564c93b23100 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.7:                                        \l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  %exitcond.7.not = icmp eq i64 %indvars.iv.next.7, 32000\l  br i1 %exitcond.7.not, label %for.cond.cleanup4, label %for.body5,\l... !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x564c93b23100:s0 -> Node0x564c93b224f0;
	Node0x564c93b23100:s1 -> Node0x564c93b22600;
}
