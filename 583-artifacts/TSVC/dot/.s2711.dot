digraph "CFG for 's2711' function" {
	label="CFG for 's2711' function";

	Node0x564c93b898a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @__func__.s2711, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c93b898a0 -> Node0x564c93b89d40;
	Node0x564c93b89d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond2.preheader:                              \l  %nl.029 = phi i32 [ 0, %entry ], [ %inc15, %for.cond.cleanup4 ]\l  br label %for.body5\l}"];
	Node0x564c93b89d40 -> Node0x564c93b89f70;
	Node0x564c93b8a030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call17 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call18 = tail call float @calc_checksum(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @__func__.s2711, i64 0, i64 0)) #11\l  ret float %call18\l}"];
	Node0x564c93b89e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond.cleanup4:                                \l  %call13 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc15 = add nuw nsw i32 %nl.029, 1\l  %exitcond.not = icmp eq i32 %inc15, 400000\l  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !2\l|{<s0>T|<s1>F}}"];
	Node0x564c93b89e60:s0 -> Node0x564c93b8a030;
	Node0x564c93b89e60:s1 -> Node0x564c93b89d40;
	Node0x564c93b89f70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body5:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next.7,\l... %for.inc.7 ]\l  %arrayidx = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64\l... 0, i64 %indvars.iv\l  %0 = load float, float* %arrayidx, align 32, !tbaa !4\l  %cmp6 = fcmp une float %0, 0.000000e+00\l  br i1 %cmp6, label %if.then, label %for.inc\l|{<s0>T|<s1>F}}"];
	Node0x564c93b89f70:s0 -> Node0x564c93b8ad10;
	Node0x564c93b89f70:s1 -> Node0x564c93b8ad80;
	Node0x564c93b8ad10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{if.then:                                          \l  %arrayidx10 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv\l  %1 = load float, float* %arrayidx10, align 32, !tbaa !4\l  %mul = fmul float %0, %1\l  %arrayidx12 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv\l  %2 = load float, float* %arrayidx12, align 32, !tbaa !4\l  %add = fadd float %2, %mul\l  store float %add, float* %arrayidx12, align 32, !tbaa !4\l  br label %for.inc\l}"];
	Node0x564c93b8ad10 -> Node0x564c93b8ad80;
	Node0x564c93b8ad80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc:                                          \l  %indvars.iv.next = or i64 %indvars.iv, 1\l  %arrayidx.1 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next\l  %3 = load float, float* %arrayidx.1, align 4, !tbaa !4\l  %cmp6.1 = fcmp une float %3, 0.000000e+00\l  br i1 %cmp6.1, label %if.then.1, label %for.inc.1\l|{<s0>T|<s1>F}}"];
	Node0x564c93b8ad80:s0 -> Node0x564c93b8ba20;
	Node0x564c93b8ad80:s1 -> Node0x564c93b8baa0;
	Node0x564c93b8ba20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{if.then.1:                                        \l  %arrayidx10.1 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next\l  %4 = load float, float* %arrayidx10.1, align 4, !tbaa !4\l  %mul.1 = fmul float %3, %4\l  %arrayidx12.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next\l  %5 = load float, float* %arrayidx12.1, align 4, !tbaa !4\l  %add.1 = fadd float %5, %mul.1\l  store float %add.1, float* %arrayidx12.1, align 4, !tbaa !4\l  br label %for.inc.1\l}"];
	Node0x564c93b8ba20 -> Node0x564c93b8baa0;
	Node0x564c93b8baa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.1:                                        \l  %indvars.iv.next.1 = or i64 %indvars.iv, 2\l  %arrayidx.2 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.1\l  %6 = load float, float* %arrayidx.2, align 8, !tbaa !4\l  %cmp6.2 = fcmp une float %6, 0.000000e+00\l  br i1 %cmp6.2, label %if.then.2, label %for.inc.2\l|{<s0>T|<s1>F}}"];
	Node0x564c93b8baa0:s0 -> Node0x564c93b8c440;
	Node0x564c93b8baa0:s1 -> Node0x564c93b8c490;
	Node0x564c93b8c440 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{if.then.2:                                        \l  %arrayidx10.2 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.1\l  %7 = load float, float* %arrayidx10.2, align 8, !tbaa !4\l  %mul.2 = fmul float %6, %7\l  %arrayidx12.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.1\l  %8 = load float, float* %arrayidx12.2, align 8, !tbaa !4\l  %add.2 = fadd float %8, %mul.2\l  store float %add.2, float* %arrayidx12.2, align 8, !tbaa !4\l  br label %for.inc.2\l}"];
	Node0x564c93b8c440 -> Node0x564c93b8c490;
	Node0x564c93b8c490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.2:                                        \l  %indvars.iv.next.2 = or i64 %indvars.iv, 3\l  %arrayidx.3 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.2\l  %9 = load float, float* %arrayidx.3, align 4, !tbaa !4\l  %cmp6.3 = fcmp une float %9, 0.000000e+00\l  br i1 %cmp6.3, label %if.then.3, label %for.inc.3\l|{<s0>T|<s1>F}}"];
	Node0x564c93b8c490:s0 -> Node0x564c93b8bd30;
	Node0x564c93b8c490:s1 -> Node0x564c93b8ce70;
	Node0x564c93b8bd30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{if.then.3:                                        \l  %arrayidx10.3 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.2\l  %10 = load float, float* %arrayidx10.3, align 4, !tbaa !4\l  %mul.3 = fmul float %9, %10\l  %arrayidx12.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.2\l  %11 = load float, float* %arrayidx12.3, align 4, !tbaa !4\l  %add.3 = fadd float %11, %mul.3\l  store float %add.3, float* %arrayidx12.3, align 4, !tbaa !4\l  br label %for.inc.3\l}"];
	Node0x564c93b8bd30 -> Node0x564c93b8ce70;
	Node0x564c93b8ce70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.3:                                        \l  %indvars.iv.next.3 = or i64 %indvars.iv, 4\l  %arrayidx.4 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.3\l  %12 = load float, float* %arrayidx.4, align 16, !tbaa !4\l  %cmp6.4 = fcmp une float %12, 0.000000e+00\l  br i1 %cmp6.4, label %if.then.4, label %for.inc.4\l|{<s0>T|<s1>F}}"];
	Node0x564c93b8ce70:s0 -> Node0x564c93b8dad0;
	Node0x564c93b8ce70:s1 -> Node0x564c93b8db20;
	Node0x564c93b8dad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{if.then.4:                                        \l  %arrayidx10.4 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.3\l  %13 = load float, float* %arrayidx10.4, align 16, !tbaa !4\l  %mul.4 = fmul float %12, %13\l  %arrayidx12.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.3\l  %14 = load float, float* %arrayidx12.4, align 16, !tbaa !4\l  %add.4 = fadd float %14, %mul.4\l  store float %add.4, float* %arrayidx12.4, align 16, !tbaa !4\l  br label %for.inc.4\l}"];
	Node0x564c93b8dad0 -> Node0x564c93b8db20;
	Node0x564c93b8db20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.4:                                        \l  %indvars.iv.next.4 = or i64 %indvars.iv, 5\l  %arrayidx.5 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.4\l  %15 = load float, float* %arrayidx.5, align 4, !tbaa !4\l  %cmp6.5 = fcmp une float %15, 0.000000e+00\l  br i1 %cmp6.5, label %if.then.5, label %for.inc.5\l|{<s0>T|<s1>F}}"];
	Node0x564c93b8db20:s0 -> Node0x564c93b8e470;
	Node0x564c93b8db20:s1 -> Node0x564c93b8e4c0;
	Node0x564c93b8e470 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{if.then.5:                                        \l  %arrayidx10.5 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.4\l  %16 = load float, float* %arrayidx10.5, align 4, !tbaa !4\l  %mul.5 = fmul float %15, %16\l  %arrayidx12.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.4\l  %17 = load float, float* %arrayidx12.5, align 4, !tbaa !4\l  %add.5 = fadd float %17, %mul.5\l  store float %add.5, float* %arrayidx12.5, align 4, !tbaa !4\l  br label %for.inc.5\l}"];
	Node0x564c93b8e470 -> Node0x564c93b8e4c0;
	Node0x564c93b8e4c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.5:                                        \l  %indvars.iv.next.5 = or i64 %indvars.iv, 6\l  %arrayidx.6 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.5\l  %18 = load float, float* %arrayidx.6, align 8, !tbaa !4\l  %cmp6.6 = fcmp une float %18, 0.000000e+00\l  br i1 %cmp6.6, label %if.then.6, label %for.inc.6\l|{<s0>T|<s1>F}}"];
	Node0x564c93b8e4c0:s0 -> Node0x564c93b8ed80;
	Node0x564c93b8e4c0:s1 -> Node0x564c93b8edd0;
	Node0x564c93b8ed80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{if.then.6:                                        \l  %arrayidx10.6 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.5\l  %19 = load float, float* %arrayidx10.6, align 8, !tbaa !4\l  %mul.6 = fmul float %18, %19\l  %arrayidx12.6 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.5\l  %20 = load float, float* %arrayidx12.6, align 8, !tbaa !4\l  %add.6 = fadd float %20, %mul.6\l  store float %add.6, float* %arrayidx12.6, align 8, !tbaa !4\l  br label %for.inc.6\l}"];
	Node0x564c93b8ed80 -> Node0x564c93b8edd0;
	Node0x564c93b8edd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.6:                                        \l  %indvars.iv.next.6 = or i64 %indvars.iv, 7\l  %arrayidx.7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.6\l  %21 = load float, float* %arrayidx.7, align 4, !tbaa !4\l  %cmp6.7 = fcmp une float %21, 0.000000e+00\l  br i1 %cmp6.7, label %if.then.7, label %for.inc.7\l|{<s0>T|<s1>F}}"];
	Node0x564c93b8edd0:s0 -> Node0x564c93b8f720;
	Node0x564c93b8edd0:s1 -> Node0x564c93b8aa10;
	Node0x564c93b8f720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{if.then.7:                                        \l  %arrayidx10.7 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.6\l  %22 = load float, float* %arrayidx10.7, align 4, !tbaa !4\l  %mul.7 = fmul float %21, %22\l  %arrayidx12.7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.6\l  %23 = load float, float* %arrayidx12.7, align 4, !tbaa !4\l  %add.7 = fadd float %23, %mul.7\l  store float %add.7, float* %arrayidx12.7, align 4, !tbaa !4\l  br label %for.inc.7\l}"];
	Node0x564c93b8f720 -> Node0x564c93b8aa10;
	Node0x564c93b8aa10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.7:                                        \l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  %exitcond.7.not = icmp eq i64 %indvars.iv.next.7, 32000\l  br i1 %exitcond.7.not, label %for.cond.cleanup4, label %for.body5,\l... !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x564c93b8aa10:s0 -> Node0x564c93b89e60;
	Node0x564c93b8aa10:s1 -> Node0x564c93b89f70;
}
