digraph "CFG for 's276' function" {
	label="CFG for 's276' function";

	Node0x564c93b37440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s276, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c93b37440 -> Node0x564c93b378e0;
	Node0x564c93b378e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond2.preheader:                              \l  %nl.040 = phi i32 [ 0, %entry ], [ %inc22, %for.cond.cleanup4 ]\l  br label %for.body5\l}"];
	Node0x564c93b378e0 -> Node0x564c93b37b10;
	Node0x564c93b37bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call24 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call25 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s276, i64 0, i64 0)) #11\l  ret float %call25\l}"];
	Node0x564c93b37a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond.cleanup4:                                \l  %call20 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc22 = add nuw nsw i32 %nl.040, 1\l  %exitcond.not = icmp eq i32 %inc22, 400000\l  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !2\l|{<s0>T|<s1>F}}"];
	Node0x564c93b37a00:s0 -> Node0x564c93b37bd0;
	Node0x564c93b37a00:s1 -> Node0x564c93b378e0;
	Node0x564c93b37b10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body5:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next.7,\l... %for.inc.6 ]\l  %indvars.iv.next = or i64 %indvars.iv, 1\l  %cmp6 = icmp ult i64 %indvars.iv, 15999\l  %arrayidx = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64\l... 0, i64 %indvars.iv\l  %0 = load float, float* %arrayidx, align 32, !tbaa !4\l  br i1 %cmp6, label %for.inc, label %for.inc.thread\l|{<s0>T|<s1>F}}"];
	Node0x564c93b37b10:s0 -> Node0x564c93b389d0;
	Node0x564c93b37b10:s1 -> Node0x564c93b38a40;
	Node0x564c93b38a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{for.inc.thread:                                   \l  %arrayidx15 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv\l  %1 = load float, float* %arrayidx15, align 32, !tbaa !4\l  %mul16 = fmul float %0, %1\l  %arrayidx18 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv\l  %2 = load float, float* %arrayidx18, align 32, !tbaa !4\l  %add19 = fadd float %2, %mul16\l  store float %add19, float* %arrayidx18, align 32, !tbaa !4\l  %indvars.iv.next.141 = or i64 %indvars.iv, 2\l  %arrayidx13.1 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next\l  %3 = load float, float* %arrayidx13.1, align 4, !tbaa !4\l  %arrayidx15.1 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next\l  %4 = load float, float* %arrayidx15.1, align 4, !tbaa !4\l  %mul16.1 = fmul float %3, %4\l  %arrayidx18.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next\l  %5 = load float, float* %arrayidx18.1, align 4, !tbaa !4\l  %add19.1 = fadd float %5, %mul16.1\l  store float %add19.1, float* %arrayidx18.1, align 4, !tbaa !4\l  %indvars.iv.next.246 = or i64 %indvars.iv, 3\l  br label %for.inc.2.thread\l}"];
	Node0x564c93b38a40 -> Node0x564c93b39bc0;
	Node0x564c93b389d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{for.inc:                                          \l  %arrayidx8 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv\l  %6 = load float, float* %arrayidx8, align 32, !tbaa !4\l  %mul = fmul float %0, %6\l  %arrayidx10 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv\l  %7 = load float, float* %arrayidx10, align 32, !tbaa !4\l  %add11 = fadd float %7, %mul\l  store float %add11, float* %arrayidx10, align 32, !tbaa !4\l  %indvars.iv.next.1 = or i64 %indvars.iv, 2\l  %arrayidx.1 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next\l  %8 = load float, float* %arrayidx.1, align 4, !tbaa !4\l  %arrayidx8.1 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next\l  %9 = load float, float* %arrayidx8.1, align 4, !tbaa !4\l  %mul.1 = fmul float %8, %9\l  %arrayidx10.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next\l  %10 = load float, float* %arrayidx10.1, align 4, !tbaa !4\l  %add11.1 = fadd float %10, %mul.1\l  store float %add11.1, float* %arrayidx10.1, align 4, !tbaa !4\l  %indvars.iv.next.2 = or i64 %indvars.iv, 3\l  %cmp6.2 = icmp ult i64 %indvars.iv, 15997\l  br i1 %cmp6.2, label %for.inc.2, label %for.inc.2.thread\l|{<s0>T|<s1>F}}"];
	Node0x564c93b389d0:s0 -> Node0x564c93b39760;
	Node0x564c93b389d0:s1 -> Node0x564c93b39bc0;
	Node0x564c93b39bc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{for.inc.2.thread:                                 \l  %indvars.iv.next.250 = phi i64 [ %indvars.iv.next.246, %for.inc.thread ], [\l... %indvars.iv.next.2, %for.inc ]\l  %indvars.iv.next.14348 = phi i64 [ %indvars.iv.next.141, %for.inc.thread ],\l... [ %indvars.iv.next.1, %for.inc ]\l  %arrayidx13.2 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.14348\l  %11 = load float, float* %arrayidx13.2, align 8, !tbaa !4\l  %arrayidx15.2 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.14348\l  %12 = load float, float* %arrayidx15.2, align 8, !tbaa !4\l  %mul16.2 = fmul float %11, %12\l  %arrayidx18.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.14348\l  %13 = load float, float* %arrayidx18.2, align 8, !tbaa !4\l  %add19.2 = fadd float %13, %mul16.2\l  store float %add19.2, float* %arrayidx18.2, align 8, !tbaa !4\l  %indvars.iv.next.352 = or i64 %indvars.iv, 4\l  %arrayidx13.3 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.250\l  %14 = load float, float* %arrayidx13.3, align 4, !tbaa !4\l  %arrayidx15.3 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.250\l  %15 = load float, float* %arrayidx15.3, align 4, !tbaa !4\l  %mul16.3 = fmul float %14, %15\l  %arrayidx18.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.250\l  %16 = load float, float* %arrayidx18.3, align 4, !tbaa !4\l  %add19.3 = fadd float %16, %mul16.3\l  store float %add19.3, float* %arrayidx18.3, align 4, !tbaa !4\l  %indvars.iv.next.458 = or i64 %indvars.iv, 5\l  br label %for.inc.4.thread\l}"];
	Node0x564c93b39bc0 -> Node0x564c93b3bd20;
	Node0x564c93b39760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{for.inc.2:                                        \l  %arrayidx.2 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.1\l  %17 = load float, float* %arrayidx.2, align 8, !tbaa !4\l  %arrayidx8.2 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.1\l  %18 = load float, float* %arrayidx8.2, align 8, !tbaa !4\l  %mul.2 = fmul float %17, %18\l  %arrayidx10.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.1\l  %19 = load float, float* %arrayidx10.2, align 8, !tbaa !4\l  %add11.2 = fadd float %19, %mul.2\l  store float %add11.2, float* %arrayidx10.2, align 8, !tbaa !4\l  %indvars.iv.next.3 = or i64 %indvars.iv, 4\l  %arrayidx.3 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.2\l  %20 = load float, float* %arrayidx.3, align 4, !tbaa !4\l  %arrayidx8.3 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.2\l  %21 = load float, float* %arrayidx8.3, align 4, !tbaa !4\l  %mul.3 = fmul float %20, %21\l  %arrayidx10.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.2\l  %22 = load float, float* %arrayidx10.3, align 4, !tbaa !4\l  %add11.3 = fadd float %22, %mul.3\l  store float %add11.3, float* %arrayidx10.3, align 4, !tbaa !4\l  %indvars.iv.next.4 = or i64 %indvars.iv, 5\l  %cmp6.4 = icmp ult i64 %indvars.iv, 15995\l  br i1 %cmp6.4, label %for.inc.4, label %for.inc.4.thread\l|{<s0>T|<s1>F}}"];
	Node0x564c93b39760:s0 -> Node0x564c93b3ccb0;
	Node0x564c93b39760:s1 -> Node0x564c93b3bd20;
	Node0x564c93b3bd20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.inc.4.thread:                                 \l  %indvars.iv.next.462 = phi i64 [ %indvars.iv.next.458, %for.inc.2.thread ],\l... [ %indvars.iv.next.4, %for.inc.2 ]\l  %indvars.iv.next.35560 = phi i64 [ %indvars.iv.next.352, %for.inc.2.thread\l... ], [ %indvars.iv.next.3, %for.inc.2 ]\l  %arrayidx13.4 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.35560\l  %23 = load float, float* %arrayidx13.4, align 16, !tbaa !4\l  %arrayidx15.4 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.35560\l  %24 = load float, float* %arrayidx15.4, align 16, !tbaa !4\l  %mul16.4 = fmul float %23, %24\l  %arrayidx18.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.35560\l  %25 = load float, float* %arrayidx18.4, align 16, !tbaa !4\l  %add19.4 = fadd float %25, %mul16.4\l  store float %add19.4, float* %arrayidx18.4, align 16, !tbaa !4\l  %indvars.iv.next.564 = or i64 %indvars.iv, 6\l  %arrayidx13.5 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.462\l  %26 = load float, float* %arrayidx13.5, align 4, !tbaa !4\l  %arrayidx15.5 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.462\l  %27 = load float, float* %arrayidx15.5, align 4, !tbaa !4\l  %mul16.5 = fmul float %26, %27\l  %arrayidx18.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.462\l  %28 = load float, float* %arrayidx18.5, align 4, !tbaa !4\l  %add19.5 = fadd float %28, %mul16.5\l  store float %add19.5, float* %arrayidx18.5, align 4, !tbaa !4\l  %indvars.iv.next.670 = or i64 %indvars.iv, 7\l  br label %if.else.6\l}"];
	Node0x564c93b3bd20 -> Node0x564c93b3dcf0;
	Node0x564c93b3ccb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{for.inc.4:                                        \l  %arrayidx.4 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.3\l  %29 = load float, float* %arrayidx.4, align 16, !tbaa !4\l  %arrayidx8.4 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.3\l  %30 = load float, float* %arrayidx8.4, align 16, !tbaa !4\l  %mul.4 = fmul float %29, %30\l  %arrayidx10.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.3\l  %31 = load float, float* %arrayidx10.4, align 16, !tbaa !4\l  %add11.4 = fadd float %31, %mul.4\l  store float %add11.4, float* %arrayidx10.4, align 16, !tbaa !4\l  %indvars.iv.next.5 = or i64 %indvars.iv, 6\l  %arrayidx.5 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.4\l  %32 = load float, float* %arrayidx.5, align 4, !tbaa !4\l  %arrayidx8.5 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.4\l  %33 = load float, float* %arrayidx8.5, align 4, !tbaa !4\l  %mul.5 = fmul float %32, %33\l  %arrayidx10.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.4\l  %34 = load float, float* %arrayidx10.5, align 4, !tbaa !4\l  %add11.5 = fadd float %34, %mul.5\l  store float %add11.5, float* %arrayidx10.5, align 4, !tbaa !4\l  %indvars.iv.next.6 = or i64 %indvars.iv, 7\l  %cmp6.6 = icmp ult i64 %indvars.iv, 15993\l  br i1 %cmp6.6, label %if.then.6, label %if.else.6\l|{<s0>T|<s1>F}}"];
	Node0x564c93b3ccb0:s0 -> Node0x564c93b3f290;
	Node0x564c93b3ccb0:s1 -> Node0x564c93b3dcf0;
	Node0x564c93b3dcf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{if.else.6:                                        \l  %indvars.iv.next.674 = phi i64 [ %indvars.iv.next.670, %for.inc.4.thread ],\l... [ %indvars.iv.next.6, %for.inc.4 ]\l  %indvars.iv.next.56772 = phi i64 [ %indvars.iv.next.564, %for.inc.4.thread\l... ], [ %indvars.iv.next.5, %for.inc.4 ]\l  %arrayidx15.6 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.56772\l  br label %for.inc.6\l}"];
	Node0x564c93b3dcf0 -> Node0x564c93b38610;
	Node0x564c93b3f290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{if.then.6:                                        \l  %arrayidx8.6 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.5\l  br label %for.inc.6\l}"];
	Node0x564c93b3f290 -> Node0x564c93b38610;
	Node0x564c93b38610 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.6:                                        \l  %arrayidx8.6.sink = phi float* [ %arrayidx8.6, %if.then.6 ], [\l... %arrayidx15.6, %if.else.6 ]\l  %indvars.iv.next.5.sink = phi i64 [ %indvars.iv.next.5, %if.then.6 ], [\l... %indvars.iv.next.56772, %if.else.6 ]\l  %indvars.iv.next.673 = phi i64 [ %indvars.iv.next.6, %if.then.6 ], [\l... %indvars.iv.next.674, %if.else.6 ]\l  %.sink.in = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64\l... 0, i64 %indvars.iv.next.5.sink\l  %.sink = load float, float* %.sink.in, align 8, !tbaa !4\l  %35 = load float, float* %arrayidx8.6.sink, align 8, !tbaa !4\l  %mul.6 = fmul float %.sink, %35\l  %arrayidx10.6 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.5.sink\l  %36 = load float, float* %arrayidx10.6, align 8, !tbaa !4\l  %add11.6 = fadd float %36, %mul.6\l  store float %add11.6, float* %arrayidx10.6, align 8, !tbaa !4\l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  %cmp6.7 = icmp ult i64 %indvars.iv.next.673, 15999\l  %arrayidx.7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.673\l  %37 = load float, float* %arrayidx.7, align 4, !tbaa !4\l  %c.sink = select i1 %cmp6.7, [32000 x float]* @c, [32000 x float]* @d\l  %arrayidx8.7 = getelementptr inbounds [32000 x float], [32000 x float]*\l... %c.sink, i64 0, i64 %indvars.iv.next.673\l  %38 = load float, float* %arrayidx8.7, align 4, !tbaa !4\l  %mul.7 = fmul float %37, %38\l  %arrayidx10.7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.673\l  %39 = load float, float* %arrayidx10.7, align 4, !tbaa !4\l  %add11.7 = fadd float %39, %mul.7\l  store float %add11.7, float* %arrayidx10.7, align 4, !tbaa !4\l  %exitcond.7.not = icmp eq i64 %indvars.iv.next.7, 32000\l  br i1 %exitcond.7.not, label %for.cond.cleanup4, label %for.body5,\l... !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x564c93b38610:s0 -> Node0x564c93b37a00;
	Node0x564c93b38610:s1 -> Node0x564c93b37b10;
}
