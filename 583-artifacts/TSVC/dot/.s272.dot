digraph "CFG for 's272' function" {
	label="CFG for 's272' function";

	Node0x564c93b0e670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{entry:\l  %arg_info = getelementptr inbounds %struct.args_t, %struct.args_t*\l... %func_args, i64 0, i32 2\l  %0 = bitcast i8** %arg_info to i32**\l  %1 = load i32*, i32** %0, align 8, !tbaa !2\l  %2 = load i32, i32* %1, align 4, !tbaa !9\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s272, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  %conv = sitofp i32 %2 to float\l  br label %for.cond2.preheader\l}"];
	Node0x564c93b0e670 -> Node0x564c93b0edf0;
	Node0x564c93b0edf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond2.preheader:                              \l  %nl.043 = phi i32 [ 0, %entry ], [ %inc24, %for.cond.cleanup4 ]\l  br label %for.body5\l}"];
	Node0x564c93b0edf0 -> Node0x564c93b0f040;
	Node0x564c93b0f100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call26 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call27 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s272, i64 0, i64 0)) #11\l  ret float %call27\l}"];
	Node0x564c93b0ef30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond.cleanup4:                                \l  %call22 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc24 = add nuw nsw i32 %nl.043, 1\l  %exitcond.not = icmp eq i32 %inc24, 100000\l  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x564c93b0ef30:s0 -> Node0x564c93b0f100;
	Node0x564c93b0ef30:s1 -> Node0x564c93b0edf0;
	Node0x564c93b0f040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body5:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next.7,\l... %for.inc.7 ]\l  %arrayidx = getelementptr inbounds [32000 x float], [32000 x float]* @e, i64\l... 0, i64 %indvars.iv\l  %3 = load float, float* %arrayidx, align 32, !tbaa !13\l  %cmp6 = fcmp ult float %3, %conv\l  br i1 %cmp6, label %for.inc, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x564c93b0f040:s0 -> Node0x564c93b0fe20;
	Node0x564c93b0f040:s1 -> Node0x564c93b0fe90;
	Node0x564c93b0fe90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then:                                          \l  %arrayidx9 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv\l  %4 = load float, float* %arrayidx9, align 32, !tbaa !13\l  %arrayidx11 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv\l  %5 = load float, float* %arrayidx11, align 32, !tbaa !13\l  %mul = fmul float %4, %5\l  %arrayidx13 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv\l  %6 = load float, float* %arrayidx13, align 32, !tbaa !13\l  %add = fadd float %6, %mul\l  store float %add, float* %arrayidx13, align 32, !tbaa !13\l  %mul18 = fmul float %4, %4\l  %arrayidx20 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv\l  %7 = load float, float* %arrayidx20, align 32, !tbaa !13\l  %add21 = fadd float %mul18, %7\l  store float %add21, float* %arrayidx20, align 32, !tbaa !13\l  br label %for.inc\l}"];
	Node0x564c93b0fe90 -> Node0x564c93b0fe20;
	Node0x564c93b0fe20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc:                                          \l  %indvars.iv.next = or i64 %indvars.iv, 1\l  %arrayidx.1 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next\l  %8 = load float, float* %arrayidx.1, align 4, !tbaa !13\l  %cmp6.1 = fcmp ult float %8, %conv\l  br i1 %cmp6.1, label %for.inc.1, label %if.then.1\l|{<s0>T|<s1>F}}"];
	Node0x564c93b0fe20:s0 -> Node0x564c93b10490;
	Node0x564c93b0fe20:s1 -> Node0x564c93b110b0;
	Node0x564c93b110b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then.1:                                        \l  %arrayidx9.1 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next\l  %9 = load float, float* %arrayidx9.1, align 4, !tbaa !13\l  %arrayidx11.1 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next\l  %10 = load float, float* %arrayidx11.1, align 4, !tbaa !13\l  %mul.1 = fmul float %9, %10\l  %arrayidx13.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next\l  %11 = load float, float* %arrayidx13.1, align 4, !tbaa !13\l  %add.1 = fadd float %11, %mul.1\l  store float %add.1, float* %arrayidx13.1, align 4, !tbaa !13\l  %mul18.1 = fmul float %9, %9\l  %arrayidx20.1 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next\l  %12 = load float, float* %arrayidx20.1, align 4, !tbaa !13\l  %add21.1 = fadd float %mul18.1, %12\l  store float %add21.1, float* %arrayidx20.1, align 4, !tbaa !13\l  br label %for.inc.1\l}"];
	Node0x564c93b110b0 -> Node0x564c93b10490;
	Node0x564c93b10490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.1:                                        \l  %indvars.iv.next.1 = or i64 %indvars.iv, 2\l  %arrayidx.2 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.1\l  %13 = load float, float* %arrayidx.2, align 8, !tbaa !13\l  %cmp6.2 = fcmp ult float %13, %conv\l  br i1 %cmp6.2, label %for.inc.2, label %if.then.2\l|{<s0>T|<s1>F}}"];
	Node0x564c93b10490:s0 -> Node0x564c93b11ee0;
	Node0x564c93b10490:s1 -> Node0x564c93b10100;
	Node0x564c93b10100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then.2:                                        \l  %arrayidx9.2 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.1\l  %14 = load float, float* %arrayidx9.2, align 8, !tbaa !13\l  %arrayidx11.2 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.1\l  %15 = load float, float* %arrayidx11.2, align 8, !tbaa !13\l  %mul.2 = fmul float %14, %15\l  %arrayidx13.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.1\l  %16 = load float, float* %arrayidx13.2, align 8, !tbaa !13\l  %add.2 = fadd float %16, %mul.2\l  store float %add.2, float* %arrayidx13.2, align 8, !tbaa !13\l  %mul18.2 = fmul float %14, %14\l  %arrayidx20.2 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.1\l  %17 = load float, float* %arrayidx20.2, align 8, !tbaa !13\l  %add21.2 = fadd float %mul18.2, %17\l  store float %add21.2, float* %arrayidx20.2, align 8, !tbaa !13\l  br label %for.inc.2\l}"];
	Node0x564c93b10100 -> Node0x564c93b11ee0;
	Node0x564c93b11ee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.2:                                        \l  %indvars.iv.next.2 = or i64 %indvars.iv, 3\l  %arrayidx.3 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.2\l  %18 = load float, float* %arrayidx.3, align 4, !tbaa !13\l  %cmp6.3 = fcmp ult float %18, %conv\l  br i1 %cmp6.3, label %for.inc.3, label %if.then.3\l|{<s0>T|<s1>F}}"];
	Node0x564c93b11ee0:s0 -> Node0x564c93b12fe0;
	Node0x564c93b11ee0:s1 -> Node0x564c93b13030;
	Node0x564c93b13030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then.3:                                        \l  %arrayidx9.3 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.2\l  %19 = load float, float* %arrayidx9.3, align 4, !tbaa !13\l  %arrayidx11.3 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.2\l  %20 = load float, float* %arrayidx11.3, align 4, !tbaa !13\l  %mul.3 = fmul float %19, %20\l  %arrayidx13.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.2\l  %21 = load float, float* %arrayidx13.3, align 4, !tbaa !13\l  %add.3 = fadd float %21, %mul.3\l  store float %add.3, float* %arrayidx13.3, align 4, !tbaa !13\l  %mul18.3 = fmul float %19, %19\l  %arrayidx20.3 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.2\l  %22 = load float, float* %arrayidx20.3, align 4, !tbaa !13\l  %add21.3 = fadd float %mul18.3, %22\l  store float %add21.3, float* %arrayidx20.3, align 4, !tbaa !13\l  br label %for.inc.3\l}"];
	Node0x564c93b13030 -> Node0x564c93b12fe0;
	Node0x564c93b12fe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.3:                                        \l  %indvars.iv.next.3 = or i64 %indvars.iv, 4\l  %arrayidx.4 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.3\l  %23 = load float, float* %arrayidx.4, align 16, !tbaa !13\l  %cmp6.4 = fcmp ult float %23, %conv\l  br i1 %cmp6.4, label %for.inc.4, label %if.then.4\l|{<s0>T|<s1>F}}"];
	Node0x564c93b12fe0:s0 -> Node0x564c93b13e30;
	Node0x564c93b12fe0:s1 -> Node0x564c93b13e80;
	Node0x564c93b13e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then.4:                                        \l  %arrayidx9.4 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.3\l  %24 = load float, float* %arrayidx9.4, align 16, !tbaa !13\l  %arrayidx11.4 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.3\l  %25 = load float, float* %arrayidx11.4, align 16, !tbaa !13\l  %mul.4 = fmul float %24, %25\l  %arrayidx13.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.3\l  %26 = load float, float* %arrayidx13.4, align 16, !tbaa !13\l  %add.4 = fadd float %26, %mul.4\l  store float %add.4, float* %arrayidx13.4, align 16, !tbaa !13\l  %mul18.4 = fmul float %24, %24\l  %arrayidx20.4 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.3\l  %27 = load float, float* %arrayidx20.4, align 16, !tbaa !13\l  %add21.4 = fadd float %mul18.4, %27\l  store float %add21.4, float* %arrayidx20.4, align 16, !tbaa !13\l  br label %for.inc.4\l}"];
	Node0x564c93b13e80 -> Node0x564c93b13e30;
	Node0x564c93b13e30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.4:                                        \l  %indvars.iv.next.4 = or i64 %indvars.iv, 5\l  %arrayidx.5 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.4\l  %28 = load float, float* %arrayidx.5, align 4, !tbaa !13\l  %cmp6.5 = fcmp ult float %28, %conv\l  br i1 %cmp6.5, label %for.inc.5, label %if.then.5\l|{<s0>T|<s1>F}}"];
	Node0x564c93b13e30:s0 -> Node0x564c93b14c80;
	Node0x564c93b13e30:s1 -> Node0x564c93b14cd0;
	Node0x564c93b14cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then.5:                                        \l  %arrayidx9.5 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.4\l  %29 = load float, float* %arrayidx9.5, align 4, !tbaa !13\l  %arrayidx11.5 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.4\l  %30 = load float, float* %arrayidx11.5, align 4, !tbaa !13\l  %mul.5 = fmul float %29, %30\l  %arrayidx13.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.4\l  %31 = load float, float* %arrayidx13.5, align 4, !tbaa !13\l  %add.5 = fadd float %31, %mul.5\l  store float %add.5, float* %arrayidx13.5, align 4, !tbaa !13\l  %mul18.5 = fmul float %29, %29\l  %arrayidx20.5 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.4\l  %32 = load float, float* %arrayidx20.5, align 4, !tbaa !13\l  %add21.5 = fadd float %mul18.5, %32\l  store float %add21.5, float* %arrayidx20.5, align 4, !tbaa !13\l  br label %for.inc.5\l}"];
	Node0x564c93b14cd0 -> Node0x564c93b14c80;
	Node0x564c93b14c80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.5:                                        \l  %indvars.iv.next.5 = or i64 %indvars.iv, 6\l  %arrayidx.6 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.5\l  %33 = load float, float* %arrayidx.6, align 8, !tbaa !13\l  %cmp6.6 = fcmp ult float %33, %conv\l  br i1 %cmp6.6, label %for.inc.6, label %if.then.6\l|{<s0>T|<s1>F}}"];
	Node0x564c93b14c80:s0 -> Node0x564c93b12330;
	Node0x564c93b14c80:s1 -> Node0x564c93b12380;
	Node0x564c93b12380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then.6:                                        \l  %arrayidx9.6 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.5\l  %34 = load float, float* %arrayidx9.6, align 8, !tbaa !13\l  %arrayidx11.6 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.5\l  %35 = load float, float* %arrayidx11.6, align 8, !tbaa !13\l  %mul.6 = fmul float %34, %35\l  %arrayidx13.6 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.5\l  %36 = load float, float* %arrayidx13.6, align 8, !tbaa !13\l  %add.6 = fadd float %36, %mul.6\l  store float %add.6, float* %arrayidx13.6, align 8, !tbaa !13\l  %mul18.6 = fmul float %34, %34\l  %arrayidx20.6 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.5\l  %37 = load float, float* %arrayidx20.6, align 8, !tbaa !13\l  %add21.6 = fadd float %mul18.6, %37\l  store float %add21.6, float* %arrayidx20.6, align 8, !tbaa !13\l  br label %for.inc.6\l}"];
	Node0x564c93b12380 -> Node0x564c93b12330;
	Node0x564c93b12330 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.6:                                        \l  %indvars.iv.next.6 = or i64 %indvars.iv, 7\l  %arrayidx.7 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.6\l  %38 = load float, float* %arrayidx.7, align 4, !tbaa !13\l  %cmp6.7 = fcmp ult float %38, %conv\l  br i1 %cmp6.7, label %for.inc.7, label %if.then.7\l|{<s0>T|<s1>F}}"];
	Node0x564c93b12330:s0 -> Node0x564c93b0fb40;
	Node0x564c93b12330:s1 -> Node0x564c93b16f20;
	Node0x564c93b16f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then.7:                                        \l  %arrayidx9.7 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.6\l  %39 = load float, float* %arrayidx9.7, align 4, !tbaa !13\l  %arrayidx11.7 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.6\l  %40 = load float, float* %arrayidx11.7, align 4, !tbaa !13\l  %mul.7 = fmul float %39, %40\l  %arrayidx13.7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.6\l  %41 = load float, float* %arrayidx13.7, align 4, !tbaa !13\l  %add.7 = fadd float %41, %mul.7\l  store float %add.7, float* %arrayidx13.7, align 4, !tbaa !13\l  %mul18.7 = fmul float %39, %39\l  %arrayidx20.7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.6\l  %42 = load float, float* %arrayidx20.7, align 4, !tbaa !13\l  %add21.7 = fadd float %mul18.7, %42\l  store float %add21.7, float* %arrayidx20.7, align 4, !tbaa !13\l  br label %for.inc.7\l}"];
	Node0x564c93b16f20 -> Node0x564c93b0fb40;
	Node0x564c93b0fb40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.7:                                        \l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  %exitcond.7.not = icmp eq i64 %indvars.iv.next.7, 32000\l  br i1 %exitcond.7.not, label %for.cond.cleanup4, label %for.body5,\l... !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x564c93b0fb40:s0 -> Node0x564c93b0ef30;
	Node0x564c93b0fb40:s1 -> Node0x564c93b0f040;
}
