digraph "CFG for 's235' function" {
	label="CFG for 's235' function";

	Node0x564c93a8c3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s235, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c93a8c3f0 -> Node0x564c93a8c890;
	Node0x564c93a8c890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond2.preheader:                              \l  %nl.058 = phi i32 [ 0, %entry ], [ %inc35, %for.cond.cleanup4 ]\l  br label %for.body5\l}"];
	Node0x564c93a8c890 -> Node0x564c93a8cac0;
	Node0x564c93a8cb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call37 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call38 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s235, i64 0, i64 0)) #11\l  ret float %call38\l}"];
	Node0x564c93a8c9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond.cleanup4:                                \l  %call33 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc35 = add nuw nsw i32 %nl.058, 1\l  %exitcond62.not = icmp eq i32 %inc35, 78000\l  br i1 %exitcond62.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !2\l|{<s0>T|<s1>F}}"];
	Node0x564c93a8c9b0:s0 -> Node0x564c93a8cb80;
	Node0x564c93a8c9b0:s1 -> Node0x564c93a8c890;
	Node0x564c93a8cac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.body5:                                        \l  %indvars.iv60 = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next61,\l... %for.cond.cleanup12 ]\l  %arrayidx = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64\l... 0, i64 %indvars.iv60\l  %0 = load float, float* %arrayidx, align 4, !tbaa !4\l  %arrayidx7 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv60\l  %1 = load float, float* %arrayidx7, align 4, !tbaa !4\l  %mul = fmul float %0, %1\l  %arrayidx9 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv60\l  %2 = load float, float* %arrayidx9, align 4, !tbaa !4\l  %add = fadd float %2, %mul\l  store float %add, float* %arrayidx9, align 4, !tbaa !4\l  %arrayidx17.phi.trans.insert = getelementptr inbounds [256 x [256 x float]],\l... [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %indvars.iv60\l  %.pre = load float, float* %arrayidx17.phi.trans.insert, align 4, !tbaa !4\l  br label %for.body13\l}"];
	Node0x564c93a8cac0 -> Node0x564c93a1a260;
	Node0x564c93a8d560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.cond.cleanup12:                               \l  %indvars.iv.next61 = add nuw nsw i64 %indvars.iv60, 1\l  %exitcond.not = icmp eq i64 %indvars.iv.next61, 256\l  br i1 %exitcond.not, label %for.cond.cleanup4, label %for.body5, !llvm.loop\l... !8\l|{<s0>T|<s1>F}}"];
	Node0x564c93a8d560:s0 -> Node0x564c93a8c9b0;
	Node0x564c93a8d560:s1 -> Node0x564c93a8cac0;
	Node0x564c93a1a260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body13:                                       \l  %3 = phi float [ %.pre, %for.body5 ], [ %add25.7, %for.body13.7 ]\l  %indvars.iv = phi i64 [ 1, %for.body5 ], [ %indvars.iv.next.7, %for.body13.7\l... ]\l  %arrayidx21 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv, i64 %indvars.iv60\l  %4 = load float, float* %arrayidx21, align 4, !tbaa !4\l  %mul24 = fmul float %add, %4\l  %add25 = fadd float %3, %mul24\l  %arrayidx29 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv, i64 %indvars.iv60\l  store float %add25, float* %arrayidx29, align 4, !tbaa !4\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %arrayidx21.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next, i64 %indvars.iv60\l  %5 = load float, float* %arrayidx21.1, align 4, !tbaa !4\l  %mul24.1 = fmul float %add, %5\l  %add25.1 = fadd float %add25, %mul24.1\l  %arrayidx29.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next, i64 %indvars.iv60\l  store float %add25.1, float* %arrayidx29.1, align 4, !tbaa !4\l  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2\l  %arrayidx21.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.1, i64 %indvars.iv60\l  %6 = load float, float* %arrayidx21.2, align 4, !tbaa !4\l  %mul24.2 = fmul float %add, %6\l  %add25.2 = fadd float %add25.1, %mul24.2\l  %arrayidx29.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.1, i64 %indvars.iv60\l  store float %add25.2, float* %arrayidx29.2, align 4, !tbaa !4\l  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv, 3\l  %arrayidx21.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.2, i64 %indvars.iv60\l  %7 = load float, float* %arrayidx21.3, align 4, !tbaa !4\l  %mul24.3 = fmul float %add, %7\l  %add25.3 = fadd float %add25.2, %mul24.3\l  %arrayidx29.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.2, i64 %indvars.iv60\l  store float %add25.3, float* %arrayidx29.3, align 4, !tbaa !4\l  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4\l  %arrayidx21.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.3, i64 %indvars.iv60\l  %8 = load float, float* %arrayidx21.4, align 4, !tbaa !4\l  %mul24.4 = fmul float %add, %8\l  %add25.4 = fadd float %add25.3, %mul24.4\l  %arrayidx29.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.3, i64 %indvars.iv60\l  store float %add25.4, float* %arrayidx29.4, align 4, !tbaa !4\l  %indvars.iv.next.4 = add nuw nsw i64 %indvars.iv, 5\l  %arrayidx21.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.4, i64 %indvars.iv60\l  %9 = load float, float* %arrayidx21.5, align 4, !tbaa !4\l  %mul24.5 = fmul float %add, %9\l  %add25.5 = fadd float %add25.4, %mul24.5\l  %arrayidx29.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.4, i64 %indvars.iv60\l  store float %add25.5, float* %arrayidx29.5, align 4, !tbaa !4\l  %indvars.iv.next.5 = add nuw nsw i64 %indvars.iv, 6\l  %arrayidx21.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.5, i64 %indvars.iv60\l  %10 = load float, float* %arrayidx21.6, align 4, !tbaa !4\l  %mul24.6 = fmul float %add, %10\l  %add25.6 = fadd float %add25.5, %mul24.6\l  %arrayidx29.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.5, i64 %indvars.iv60\l  store float %add25.6, float* %arrayidx29.6, align 4, !tbaa !4\l  %indvars.iv.next.6 = add nuw nsw i64 %indvars.iv, 7\l  %exitcond.6.not = icmp eq i64 %indvars.iv.next.6, 256\l  br i1 %exitcond.6.not, label %for.cond.cleanup12, label %for.body13.7,\l... !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x564c93a1a260:s0 -> Node0x564c93a8d560;
	Node0x564c93a1a260:s1 -> Node0x564c93a1a660;
	Node0x564c93a1a660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body13.7:                                     \l  %arrayidx21.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.6, i64 %indvars.iv60\l  %11 = load float, float* %arrayidx21.7, align 4, !tbaa !4\l  %mul24.7 = fmul float %add, %11\l  %add25.7 = fadd float %add25.6, %mul24.7\l  %arrayidx29.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.6, i64 %indvars.iv60\l  store float %add25.7, float* %arrayidx29.7, align 4, !tbaa !4\l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  br label %for.body13, !llvm.loop !11\l}"];
	Node0x564c93a1a660 -> Node0x564c93a1a260;
}
