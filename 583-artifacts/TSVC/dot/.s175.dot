digraph "CFG for 's175' function" {
	label="CFG for 's175' function";

	Node0x564c93a49490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{entry:\l  %arg_info = getelementptr inbounds %struct.args_t, %struct.args_t*\l... %func_args, i64 0, i32 2\l  %0 = bitcast i8** %arg_info to i32**\l  %1 = load i32*, i32** %0, align 8, !tbaa !2\l  %2 = load i32, i32* %1, align 4, !tbaa !9\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s175, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  %3 = sext i32 %2 to i64\l  %4 = udiv i32 31998, %2\l  %5 = add nuw nsw i32 %4, 1\l  %xtraiter = and i32 %5, 7\l  %6 = icmp ugt i32 %2, 4571\l  %unroll_iter = and i32 %5, 65528\l  %lcmp.mod.not = icmp eq i32 %xtraiter, 0\l  br label %for.cond2.preheader\l}"];
	Node0x564c93a49490 -> Node0x564c93a4a080;
	Node0x564c93a4a080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{for.cond2.preheader:                              \l  %nl.030 = phi i32 [ 0, %entry ], [ %inc14, %for.cond.cleanup4 ]\l  br i1 %6, label %for.cond.cleanup4.unr-lcssa, label %for.body5\l|{<s0>T|<s1>F}}"];
	Node0x564c93a4a080:s0 -> Node0x564c93a4a2e0;
	Node0x564c93a4a080:s1 -> Node0x564c93a49410;
	Node0x564c93a4a620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call16 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call17 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s175, i64 0, i64 0)) #11\l  ret float %call17\l}"];
	Node0x564c93a4a2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{for.cond.cleanup4.unr-lcssa:                      \l  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next.7,\l... %for.body5 ]\l  br i1 %lcmp.mod.not, label %for.cond.cleanup4, label %for.body5.epil\l|{<s0>T|<s1>F}}"];
	Node0x564c93a4a2e0:s0 -> Node0x564c93a4a1d0;
	Node0x564c93a4a2e0:s1 -> Node0x564c93a4ac00;
	Node0x564c93a4ac00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body5.epil:                                   \l  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body5.epil ], [\l... %indvars.iv.unr, %for.cond.cleanup4.unr-lcssa ]\l  %epil.iter = phi i32 [ %epil.iter.sub, %for.body5.epil ], [ %xtraiter,\l... %for.cond.cleanup4.unr-lcssa ]\l  %indvars.iv.next.epil = add nsw i64 %indvars.iv.epil, %3\l  %arrayidx.epil = getelementptr inbounds [32000 x float], [32000 x float]*\l... @a, i64 0, i64 %indvars.iv.next.epil\l  %7 = load float, float* %arrayidx.epil, align 4, !tbaa !11\l  %arrayidx7.epil = getelementptr inbounds [32000 x float], [32000 x float]*\l... @b, i64 0, i64 %indvars.iv.epil\l  %8 = load float, float* %arrayidx7.epil, align 4, !tbaa !11\l  %add8.epil = fadd float %7, %8\l  %arrayidx10.epil = getelementptr inbounds [32000 x float], [32000 x float]*\l... @a, i64 0, i64 %indvars.iv.epil\l  store float %add8.epil, float* %arrayidx10.epil, align 4, !tbaa !11\l  %epil.iter.sub = add i32 %epil.iter, -1\l  %epil.iter.cmp.not = icmp eq i32 %epil.iter.sub, 0\l  br i1 %epil.iter.cmp.not, label %for.cond.cleanup4, label %for.body5.epil,\l... !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x564c93a4ac00:s0 -> Node0x564c93a4a1d0;
	Node0x564c93a4ac00:s1 -> Node0x564c93a4ac00;
	Node0x564c93a4a1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{for.cond.cleanup4:                                \l  %call12 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc14 = add nuw nsw i32 %nl.030, 1\l  %exitcond.not = icmp eq i32 %inc14, 100000\l  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x564c93a4a1d0:s0 -> Node0x564c93a4a620;
	Node0x564c93a4a1d0:s1 -> Node0x564c93a4a080;
	Node0x564c93a49410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{for.body5:                                        \l  %indvars.iv = phi i64 [ %indvars.iv.next.7, %for.body5 ], [ 0,\l... %for.cond2.preheader ]\l  %niter = phi i32 [ %niter.nsub.7, %for.body5 ], [ %unroll_iter,\l... %for.cond2.preheader ]\l  %indvars.iv.next = add nsw i64 %indvars.iv, %3\l  %arrayidx = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64\l... 0, i64 %indvars.iv.next\l  %9 = load float, float* %arrayidx, align 4, !tbaa !11\l  %arrayidx7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv\l  %10 = load float, float* %arrayidx7, align 4, !tbaa !11\l  %add8 = fadd float %9, %10\l  %arrayidx10 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv\l  store float %add8, float* %arrayidx10, align 4, !tbaa !11\l  %indvars.iv.next.1 = add nsw i64 %indvars.iv.next, %3\l  %arrayidx.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.1\l  %11 = load float, float* %arrayidx.1, align 4, !tbaa !11\l  %arrayidx7.1 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next\l  %12 = load float, float* %arrayidx7.1, align 4, !tbaa !11\l  %add8.1 = fadd float %11, %12\l  store float %add8.1, float* %arrayidx, align 4, !tbaa !11\l  %indvars.iv.next.2 = add nsw i64 %indvars.iv.next.1, %3\l  %arrayidx.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.2\l  %13 = load float, float* %arrayidx.2, align 4, !tbaa !11\l  %arrayidx7.2 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.1\l  %14 = load float, float* %arrayidx7.2, align 4, !tbaa !11\l  %add8.2 = fadd float %13, %14\l  store float %add8.2, float* %arrayidx.1, align 4, !tbaa !11\l  %indvars.iv.next.3 = add nsw i64 %indvars.iv.next.2, %3\l  %arrayidx.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.3\l  %15 = load float, float* %arrayidx.3, align 4, !tbaa !11\l  %arrayidx7.3 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.2\l  %16 = load float, float* %arrayidx7.3, align 4, !tbaa !11\l  %add8.3 = fadd float %15, %16\l  store float %add8.3, float* %arrayidx.2, align 4, !tbaa !11\l  %indvars.iv.next.4 = add nsw i64 %indvars.iv.next.3, %3\l  %arrayidx.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.4\l  %17 = load float, float* %arrayidx.4, align 4, !tbaa !11\l  %arrayidx7.4 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.3\l  %18 = load float, float* %arrayidx7.4, align 4, !tbaa !11\l  %add8.4 = fadd float %17, %18\l  store float %add8.4, float* %arrayidx.3, align 4, !tbaa !11\l  %indvars.iv.next.5 = add nsw i64 %indvars.iv.next.4, %3\l  %arrayidx.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.5\l  %19 = load float, float* %arrayidx.5, align 4, !tbaa !11\l  %arrayidx7.5 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.4\l  %20 = load float, float* %arrayidx7.5, align 4, !tbaa !11\l  %add8.5 = fadd float %19, %20\l  store float %add8.5, float* %arrayidx.4, align 4, !tbaa !11\l  %indvars.iv.next.6 = add nsw i64 %indvars.iv.next.5, %3\l  %arrayidx.6 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.6\l  %21 = load float, float* %arrayidx.6, align 4, !tbaa !11\l  %arrayidx7.6 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.5\l  %22 = load float, float* %arrayidx7.6, align 4, !tbaa !11\l  %add8.6 = fadd float %21, %22\l  store float %add8.6, float* %arrayidx.5, align 4, !tbaa !11\l  %indvars.iv.next.7 = add nsw i64 %indvars.iv.next.6, %3\l  %arrayidx.7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.7\l  %23 = load float, float* %arrayidx.7, align 4, !tbaa !11\l  %arrayidx7.7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.6\l  %24 = load float, float* %arrayidx7.7, align 4, !tbaa !11\l  %add8.7 = fadd float %23, %24\l  store float %add8.7, float* %arrayidx.6, align 4, !tbaa !11\l  %niter.nsub.7 = add i32 %niter, -8\l  %niter.ncmp.7.not = icmp eq i32 %niter.nsub.7, 0\l  br i1 %niter.ncmp.7.not, label %for.cond.cleanup4.unr-lcssa, label\l... %for.body5, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x564c93a49410:s0 -> Node0x564c93a4a2e0;
	Node0x564c93a49410:s1 -> Node0x564c93a49410;
}
