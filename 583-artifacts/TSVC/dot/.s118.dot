digraph "CFG for 's118' function" {
	label="CFG for 's118' function";

	Node0x564c9398e680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s118, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c9398e680 -> Node0x564c9398eb20;
	Node0x564c9398eb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond2.preheader:                              \l  %nl.042 = phi i32 [ 0, %entry ], [ %inc23, %for.cond.cleanup4 ]\l  br label %for.cond6.preheader\l}"];
	Node0x564c9398eb20 -> Node0x564c9398edb0;
	Node0x564c9398ef20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call25 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call26 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s118, i64 0, i64 0)) #11\l  ret float %call26\l}"];
	Node0x564c9398edb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.cond6.preheader:                              \l  %indvars.iv44 = phi i64 [ 1, %for.cond2.preheader ], [ %indvars.iv.next45,\l... %for.cond.cleanup8 ]\l  %arrayidx17 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv44\l  %.pre = load float, float* %arrayidx17, align 4, !tbaa !2\l  br label %for.body9\l}"];
	Node0x564c9398edb0 -> Node0x564c9398f8a0;
	Node0x564c9398ec40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond.cleanup4:                                \l  %call21 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc23 = add nuw nsw i32 %nl.042, 1\l  %exitcond47.not = icmp eq i32 %inc23, 78000\l  br i1 %exitcond47.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x564c9398ec40:s0 -> Node0x564c9398ef20;
	Node0x564c9398ec40:s1 -> Node0x564c9398eb20;
	Node0x564c9398f5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.cond.cleanup8:                                \l  %indvars.iv.next45 = add nuw nsw i64 %indvars.iv44, 1\l  %exitcond46.not = icmp eq i64 %indvars.iv.next45, 256\l  br i1 %exitcond46.not, label %for.cond.cleanup4, label %for.cond6.preheader,\l... !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x564c9398f5d0:s0 -> Node0x564c9398ec40;
	Node0x564c9398f5d0:s1 -> Node0x564c9398edb0;
	Node0x564c9398f8a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body9:                                        \l  %0 = phi float [ %.pre, %for.cond6.preheader ], [ %add, %for.body9 ]\l  %indvars.iv = phi i64 [ 0, %for.cond6.preheader ], [ %indvars.iv.next,\l... %for.body9 ]\l  %arrayidx11 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv, i64 %indvars.iv44\l  %1 = load float, float* %arrayidx11, align 4, !tbaa !2\l  %2 = xor i64 %indvars.iv, -1\l  %3 = add nsw i64 %indvars.iv44, %2\l  %arrayidx15 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %3\l  %4 = load float, float* %arrayidx15, align 4, !tbaa !2\l  %mul = fmul float %1, %4\l  %add = fadd float %0, %mul\l  store float %add, float* %arrayidx17, align 4, !tbaa !2\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %exitcond.not = icmp eq i64 %indvars.iv.next, %indvars.iv44\l  br i1 %exitcond.not, label %for.cond.cleanup8, label %for.body9, !llvm.loop\l... !9\l|{<s0>T|<s1>F}}"];
	Node0x564c9398f8a0:s0 -> Node0x564c9398f5d0;
	Node0x564c9398f8a0:s1 -> Node0x564c9398f8a0;
}
