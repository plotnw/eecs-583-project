digraph "CFG for 's1232' function" {
	label="CFG for 's1232' function";

	Node0x564c93a74c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @__func__.s1232, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c93a74c00 -> Node0x564c93a750a0;
	Node0x564c93a750a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{for.cond2.preheader:                              \l  %nl.047 = phi i32 [ 0, %entry ], [ %inc25, %for.cond.cleanup4 ]\l  br label %for.body9.lr.ph\l}"];
	Node0x564c93a750a0 -> Node0x564c93a752d0;
	Node0x564c93a75390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call27 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call28 = tail call float @calc_checksum(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @__func__.s1232, i64 0, i64 0)) #11\l  ret float %call28\l}"];
	Node0x564c93a752d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{for.body9.lr.ph:                                  \l  %indvars.iv = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next,\l... %for.cond.cleanup8 ]\l  %0 = sub nsw i64 255, %indvars.iv\l  %1 = trunc i64 %indvars.iv to i32\l  %2 = sub i32 0, %1\l  %xtraiter = and i32 %2, 7\l  %lcmp.mod.not = icmp eq i32 %xtraiter, 0\l  br i1 %lcmp.mod.not, label %for.body9.prol.loopexit, label %for.body9.prol\l|{<s0>T|<s1>F}}"];
	Node0x564c93a752d0:s0 -> Node0x564c93a75f40;
	Node0x564c93a752d0:s1 -> Node0x564c93a76020;
	Node0x564c93a76020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body9.prol:                                   \l  %indvars.iv48.prol = phi i64 [ %indvars.iv.next49.prol, %for.body9.prol ], [\l... %indvars.iv, %for.body9.lr.ph ]\l  %prol.iter = phi i32 [ %prol.iter.sub, %for.body9.prol ], [ %xtraiter,\l... %for.body9.lr.ph ]\l  %arrayidx11.prol = getelementptr inbounds [256 x [256 x float]], [256 x [256\l... x float]]* @bb, i64 0, i64 %indvars.iv48.prol, i64 %indvars.iv\l  %3 = load float, float* %arrayidx11.prol, align 4, !tbaa !2\l  %arrayidx15.prol = getelementptr inbounds [256 x [256 x float]], [256 x [256\l... x float]]* @cc, i64 0, i64 %indvars.iv48.prol, i64 %indvars.iv\l  %4 = load float, float* %arrayidx15.prol, align 4, !tbaa !2\l  %add.prol = fadd float %3, %4\l  %arrayidx19.prol = getelementptr inbounds [256 x [256 x float]], [256 x [256\l... x float]]* @aa, i64 0, i64 %indvars.iv48.prol, i64 %indvars.iv\l  store float %add.prol, float* %arrayidx19.prol, align 4, !tbaa !2\l  %indvars.iv.next49.prol = add nuw nsw i64 %indvars.iv48.prol, 1\l  %prol.iter.sub = add i32 %prol.iter, -1\l  %prol.iter.cmp.not = icmp eq i32 %prol.iter.sub, 0\l  br i1 %prol.iter.cmp.not, label %for.body9.prol.loopexit, label\l... %for.body9.prol, !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x564c93a76020:s0 -> Node0x564c93a75f40;
	Node0x564c93a76020:s1 -> Node0x564c93a76020;
	Node0x564c93a75f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{for.body9.prol.loopexit:                          \l  %indvars.iv48.unr = phi i64 [ %indvars.iv, %for.body9.lr.ph ], [\l... %indvars.iv.next49.prol, %for.body9.prol ]\l  %5 = icmp ult i64 %0, 7\l  br i1 %5, label %for.cond.cleanup8, label %for.body9\l|{<s0>T|<s1>F}}"];
	Node0x564c93a75f40:s0 -> Node0x564c93a75a40;
	Node0x564c93a75f40:s1 -> Node0x564c93a77130;
	Node0x564c93a751c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{for.cond.cleanup4:                                \l  %call23 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 1.000000e+00) #11\l  %inc25 = add nuw nsw i32 %nl.047, 1\l  %exitcond50.not = icmp eq i32 %inc25, 39000\l  br i1 %exitcond50.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x564c93a751c0:s0 -> Node0x564c93a75390;
	Node0x564c93a751c0:s1 -> Node0x564c93a750a0;
	Node0x564c93a75a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{for.cond.cleanup8:                                \l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %exitcond.not = icmp eq i64 %indvars.iv.next, 256\l  br i1 %exitcond.not, label %for.cond.cleanup4, label %for.body9.lr.ph,\l... !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x564c93a75a40:s0 -> Node0x564c93a751c0;
	Node0x564c93a75a40:s1 -> Node0x564c93a752d0;
	Node0x564c93a77130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{for.body9:                                        \l  %indvars.iv48 = phi i64 [ %indvars.iv.next49.7, %for.body9 ], [\l... %indvars.iv48.unr, %for.body9.prol.loopexit ]\l  %arrayidx11 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv48, i64 %indvars.iv\l  %6 = load float, float* %arrayidx11, align 4, !tbaa !2\l  %arrayidx15 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv48, i64 %indvars.iv\l  %7 = load float, float* %arrayidx15, align 4, !tbaa !2\l  %add = fadd float %6, %7\l  %arrayidx19 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv48, i64 %indvars.iv\l  store float %add, float* %arrayidx19, align 4, !tbaa !2\l  %indvars.iv.next49 = add nuw nsw i64 %indvars.iv48, 1\l  %arrayidx11.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next49, i64 %indvars.iv\l  %8 = load float, float* %arrayidx11.1, align 4, !tbaa !2\l  %arrayidx15.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv.next49, i64 %indvars.iv\l  %9 = load float, float* %arrayidx15.1, align 4, !tbaa !2\l  %add.1 = fadd float %8, %9\l  %arrayidx19.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next49, i64 %indvars.iv\l  store float %add.1, float* %arrayidx19.1, align 4, !tbaa !2\l  %indvars.iv.next49.1 = add nuw nsw i64 %indvars.iv48, 2\l  %arrayidx11.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next49.1, i64 %indvars.iv\l  %10 = load float, float* %arrayidx11.2, align 4, !tbaa !2\l  %arrayidx15.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv.next49.1, i64 %indvars.iv\l  %11 = load float, float* %arrayidx15.2, align 4, !tbaa !2\l  %add.2 = fadd float %10, %11\l  %arrayidx19.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next49.1, i64 %indvars.iv\l  store float %add.2, float* %arrayidx19.2, align 4, !tbaa !2\l  %indvars.iv.next49.2 = add nuw nsw i64 %indvars.iv48, 3\l  %arrayidx11.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next49.2, i64 %indvars.iv\l  %12 = load float, float* %arrayidx11.3, align 4, !tbaa !2\l  %arrayidx15.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv.next49.2, i64 %indvars.iv\l  %13 = load float, float* %arrayidx15.3, align 4, !tbaa !2\l  %add.3 = fadd float %12, %13\l  %arrayidx19.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next49.2, i64 %indvars.iv\l  store float %add.3, float* %arrayidx19.3, align 4, !tbaa !2\l  %indvars.iv.next49.3 = add nuw nsw i64 %indvars.iv48, 4\l  %arrayidx11.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next49.3, i64 %indvars.iv\l  %14 = load float, float* %arrayidx11.4, align 4, !tbaa !2\l  %arrayidx15.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv.next49.3, i64 %indvars.iv\l  %15 = load float, float* %arrayidx15.4, align 4, !tbaa !2\l  %add.4 = fadd float %14, %15\l  %arrayidx19.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next49.3, i64 %indvars.iv\l  store float %add.4, float* %arrayidx19.4, align 4, !tbaa !2\l  %indvars.iv.next49.4 = add nuw nsw i64 %indvars.iv48, 5\l  %arrayidx11.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next49.4, i64 %indvars.iv\l  %16 = load float, float* %arrayidx11.5, align 4, !tbaa !2\l  %arrayidx15.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv.next49.4, i64 %indvars.iv\l  %17 = load float, float* %arrayidx15.5, align 4, !tbaa !2\l  %add.5 = fadd float %16, %17\l  %arrayidx19.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next49.4, i64 %indvars.iv\l  store float %add.5, float* %arrayidx19.5, align 4, !tbaa !2\l  %indvars.iv.next49.5 = add nuw nsw i64 %indvars.iv48, 6\l  %arrayidx11.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next49.5, i64 %indvars.iv\l  %18 = load float, float* %arrayidx11.6, align 4, !tbaa !2\l  %arrayidx15.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv.next49.5, i64 %indvars.iv\l  %19 = load float, float* %arrayidx15.6, align 4, !tbaa !2\l  %add.6 = fadd float %18, %19\l  %arrayidx19.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next49.5, i64 %indvars.iv\l  store float %add.6, float* %arrayidx19.6, align 4, !tbaa !2\l  %indvars.iv.next49.6 = add nuw nsw i64 %indvars.iv48, 7\l  %arrayidx11.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next49.6, i64 %indvars.iv\l  %20 = load float, float* %arrayidx11.7, align 4, !tbaa !2\l  %arrayidx15.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv.next49.6, i64 %indvars.iv\l  %21 = load float, float* %arrayidx15.7, align 4, !tbaa !2\l  %add.7 = fadd float %20, %21\l  %arrayidx19.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next49.6, i64 %indvars.iv\l  store float %add.7, float* %arrayidx19.7, align 4, !tbaa !2\l  %indvars.iv.next49.7 = add nuw nsw i64 %indvars.iv48, 8\l  %exitcond.7.not = icmp eq i64 %indvars.iv.next49.7, 256\l  br i1 %exitcond.7.not, label %for.cond.cleanup8, label %for.body9,\l... !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x564c93a77130:s0 -> Node0x564c93a75a40;
	Node0x564c93a77130:s1 -> Node0x564c93a77130;
}
