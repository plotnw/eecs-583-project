digraph "CFG for 's162' function" {
	label="CFG for 's162' function";

	Node0x564c93a2f750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{entry:\l  %arg_info = getelementptr inbounds %struct.args_t, %struct.args_t*\l... %func_args, i64 0, i32 2\l  %0 = bitcast i8** %arg_info to i32**\l  %1 = load i32*, i32** %0, align 8, !tbaa !2\l  %2 = load i32, i32* %1, align 4, !tbaa !9\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s162, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  %cmp2 = icmp sgt i32 %2, 0\l  %3 = sext i32 %2 to i64\l  br label %for.body\l}"];
	Node0x564c93a2f750 -> Node0x564c93a306a0;
	Node0x564c93a30760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call18 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call19 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s162, i64 0, i64 0)) #11\l  ret float %call19\l}"];
	Node0x564c93a306a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{for.body:                                         \l  %nl.033 = phi i32 [ 0, %entry ], [ %inc16, %if.end ]\l  br i1 %cmp2, label %for.body6, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x564c93a306a0:s0 -> Node0x564c93a30f10;
	Node0x564c93a306a0:s1 -> Node0x564c93a30c30;
	Node0x564c93a30f10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body6:                                        \l  %indvars.iv = phi i64 [ %indvars.iv.next.7, %for.body6.7 ], [ 0, %for.body ]\l  %4 = add nsw i64 %indvars.iv, %3\l  %arrayidx = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64\l... 0, i64 %4\l  %5 = load float, float* %arrayidx, align 4, !tbaa !11\l  %arrayidx8 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv\l  %6 = load float, float* %arrayidx8, align 32, !tbaa !11\l  %arrayidx10 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv\l  %7 = load float, float* %arrayidx10, align 32, !tbaa !11\l  %mul = fmul float %6, %7\l  %add11 = fadd float %5, %mul\l  %arrayidx13 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv\l  store float %add11, float* %arrayidx13, align 32, !tbaa !11\l  %indvars.iv.next = or i64 %indvars.iv, 1\l  %8 = add nsw i64 %indvars.iv.next, %3\l  %arrayidx.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %8\l  %9 = load float, float* %arrayidx.1, align 4, !tbaa !11\l  %arrayidx8.1 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next\l  %10 = load float, float* %arrayidx8.1, align 4, !tbaa !11\l  %arrayidx10.1 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next\l  %11 = load float, float* %arrayidx10.1, align 4, !tbaa !11\l  %mul.1 = fmul float %10, %11\l  %add11.1 = fadd float %9, %mul.1\l  %arrayidx13.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next\l  store float %add11.1, float* %arrayidx13.1, align 4, !tbaa !11\l  %indvars.iv.next.1 = or i64 %indvars.iv, 2\l  %12 = add nsw i64 %indvars.iv.next.1, %3\l  %arrayidx.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %12\l  %13 = load float, float* %arrayidx.2, align 4, !tbaa !11\l  %arrayidx8.2 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.1\l  %14 = load float, float* %arrayidx8.2, align 8, !tbaa !11\l  %arrayidx10.2 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.1\l  %15 = load float, float* %arrayidx10.2, align 8, !tbaa !11\l  %mul.2 = fmul float %14, %15\l  %add11.2 = fadd float %13, %mul.2\l  %arrayidx13.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.1\l  store float %add11.2, float* %arrayidx13.2, align 8, !tbaa !11\l  %indvars.iv.next.2 = or i64 %indvars.iv, 3\l  %16 = add nsw i64 %indvars.iv.next.2, %3\l  %arrayidx.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %16\l  %17 = load float, float* %arrayidx.3, align 4, !tbaa !11\l  %arrayidx8.3 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.2\l  %18 = load float, float* %arrayidx8.3, align 4, !tbaa !11\l  %arrayidx10.3 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.2\l  %19 = load float, float* %arrayidx10.3, align 4, !tbaa !11\l  %mul.3 = fmul float %18, %19\l  %add11.3 = fadd float %17, %mul.3\l  %arrayidx13.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.2\l  store float %add11.3, float* %arrayidx13.3, align 4, !tbaa !11\l  %indvars.iv.next.3 = or i64 %indvars.iv, 4\l  %20 = add nsw i64 %indvars.iv.next.3, %3\l  %arrayidx.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %20\l  %21 = load float, float* %arrayidx.4, align 4, !tbaa !11\l  %arrayidx8.4 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.3\l  %22 = load float, float* %arrayidx8.4, align 16, !tbaa !11\l  %arrayidx10.4 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.3\l  %23 = load float, float* %arrayidx10.4, align 16, !tbaa !11\l  %mul.4 = fmul float %22, %23\l  %add11.4 = fadd float %21, %mul.4\l  %arrayidx13.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.3\l  store float %add11.4, float* %arrayidx13.4, align 16, !tbaa !11\l  %indvars.iv.next.4 = or i64 %indvars.iv, 5\l  %24 = add nsw i64 %indvars.iv.next.4, %3\l  %arrayidx.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %24\l  %25 = load float, float* %arrayidx.5, align 4, !tbaa !11\l  %arrayidx8.5 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.4\l  %26 = load float, float* %arrayidx8.5, align 4, !tbaa !11\l  %arrayidx10.5 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.4\l  %27 = load float, float* %arrayidx10.5, align 4, !tbaa !11\l  %mul.5 = fmul float %26, %27\l  %add11.5 = fadd float %25, %mul.5\l  %arrayidx13.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.4\l  store float %add11.5, float* %arrayidx13.5, align 4, !tbaa !11\l  %indvars.iv.next.5 = or i64 %indvars.iv, 6\l  %28 = add nsw i64 %indvars.iv.next.5, %3\l  %arrayidx.6 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %28\l  %29 = load float, float* %arrayidx.6, align 4, !tbaa !11\l  %arrayidx8.6 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.5\l  %30 = load float, float* %arrayidx8.6, align 8, !tbaa !11\l  %arrayidx10.6 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.5\l  %31 = load float, float* %arrayidx10.6, align 8, !tbaa !11\l  %mul.6 = fmul float %30, %31\l  %add11.6 = fadd float %29, %mul.6\l  %arrayidx13.6 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.5\l  store float %add11.6, float* %arrayidx13.6, align 8, !tbaa !11\l  %indvars.iv.next.6 = or i64 %indvars.iv, 7\l  %exitcond.6.not = icmp eq i64 %indvars.iv.next.6, 31999\l  br i1 %exitcond.6.not, label %if.end, label %for.body6.7, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x564c93a30f10:s0 -> Node0x564c93a30c30;
	Node0x564c93a30f10:s1 -> Node0x564c93a31150;
	Node0x564c93a30c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{if.end:                                           \l  %call14 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc16 = add nuw nsw i32 %nl.033, 1\l  %exitcond.not = icmp eq i32 %inc16, 100000\l  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x564c93a30c30:s0 -> Node0x564c93a30760;
	Node0x564c93a30c30:s1 -> Node0x564c93a306a0;
	Node0x564c93a31150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body6.7:                                      \l  %32 = add nsw i64 %indvars.iv.next.6, %3\l  %arrayidx.7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %32\l  %33 = load float, float* %arrayidx.7, align 4, !tbaa !11\l  %arrayidx8.7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.6\l  %34 = load float, float* %arrayidx8.7, align 4, !tbaa !11\l  %arrayidx10.7 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.6\l  %35 = load float, float* %arrayidx10.7, align 4, !tbaa !11\l  %mul.7 = fmul float %34, %35\l  %add11.7 = fadd float %33, %mul.7\l  %arrayidx13.7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.6\l  store float %add11.7, float* %arrayidx13.7, align 4, !tbaa !11\l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  br label %for.body6, !llvm.loop !17\l}"];
	Node0x564c93a31150 -> Node0x564c93a30f10;
}
