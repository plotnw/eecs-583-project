digraph "CFG for 's31111' function" {
	label="CFG for 's31111' function";

	Node0x564c93aa3200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([7 x\l... i8], [7 x i8]* @__func__.s31111, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.body.i.preheader\l}"];
	Node0x564c93aa3200 -> Node0x564c93aa36a0;
	Node0x564c93aa36a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.body.i.preheader:                             \l  %nl.088 = phi i32 [ 0, %entry ], [ %inc, %test.exit39 ]\l  br label %for.body.i\l}"];
	Node0x564c93aa36a0 -> Node0x564c93aa38e0;
	Node0x564c93aa3a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call18 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call19 = tail call float @calc_checksum(i8* getelementptr inbounds ([7 x\l... i8], [7 x i8]* @__func__.s31111, i64 0, i64 0)) #11\l  ret float %call19\l}"];
	Node0x564c93aa38e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body.i:                                       \l  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ 0,\l... %for.body.i.preheader ]\l  %s.06.i = phi float [ %add.i, %for.body.i ], [ 0.000000e+00,\l... %for.body.i.preheader ]\l  %arrayidx.i = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.i\l  %0 = load float, float* %arrayidx.i, align 4, !tbaa !2\l  %add.i = fadd float %s.06.i, %0\l  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1\l  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, 4\l  br i1 %exitcond.not.i, label %for.body.i86, label %for.body.i, !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x564c93aa38e0:s0 -> Node0x564c93aa4630;
	Node0x564c93aa38e0:s1 -> Node0x564c93aa38e0;
	Node0x564c93aa4630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body.i86:                                     \l  %indvars.iv.i80 = phi i64 [ %indvars.iv.next.i84, %for.body.i86 ], [ 0,\l... %for.body.i ]\l  %s.06.i81 = phi float [ %add.i83, %for.body.i86 ], [ 0.000000e+00,\l... %for.body.i ]\l  %arrayidx.i82 = getelementptr inbounds float, float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @a, i64 0, i64 4), i64 %indvars.iv.i80\l  %1 = load float, float* %arrayidx.i82, align 4, !tbaa !2\l  %add.i83 = fadd float %s.06.i81, %1\l  %indvars.iv.next.i84 = add nuw nsw i64 %indvars.iv.i80, 1\l  %exitcond.not.i85 = icmp eq i64 %indvars.iv.next.i84, 4\l  br i1 %exitcond.not.i85, label %test.exit87, label %for.body.i86, !llvm.loop\l... !6\l|{<s0>T|<s1>F}}"];
	Node0x564c93aa4630:s0 -> Node0x564c93aa56a0;
	Node0x564c93aa4630:s1 -> Node0x564c93aa4630;
	Node0x564c93aa56a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{test.exit87:                                      \l  %add = fadd float %add.i, 0.000000e+00\l  br label %for.body.i78\l}"];
	Node0x564c93aa56a0 -> Node0x564c93aa5830;
	Node0x564c93aa5830 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body.i78:                                     \l  %indvars.iv.i72 = phi i64 [ 0, %test.exit87 ], [ %indvars.iv.next.i76,\l... %for.body.i78 ]\l  %s.06.i73 = phi float [ 0.000000e+00, %test.exit87 ], [ %add.i75,\l... %for.body.i78 ]\l  %arrayidx.i74 = getelementptr inbounds float, float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @a, i64 0, i64 8), i64 %indvars.iv.i72\l  %2 = load float, float* %arrayidx.i74, align 4, !tbaa !2\l  %add.i75 = fadd float %s.06.i73, %2\l  %indvars.iv.next.i76 = add nuw nsw i64 %indvars.iv.i72, 1\l  %exitcond.not.i77 = icmp eq i64 %indvars.iv.next.i76, 4\l  br i1 %exitcond.not.i77, label %test.exit79, label %for.body.i78, !llvm.loop\l... !6\l|{<s0>T|<s1>F}}"];
	Node0x564c93aa5830:s0 -> Node0x564c93aa5f60;
	Node0x564c93aa5830:s1 -> Node0x564c93aa5830;
	Node0x564c93aa5f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{test.exit79:                                      \l  %add4 = fadd float %add, %add.i83\l  br label %for.body.i70\l}"];
	Node0x564c93aa5f60 -> Node0x564c93aa60f0;
	Node0x564c93aa60f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body.i70:                                     \l  %indvars.iv.i64 = phi i64 [ 0, %test.exit79 ], [ %indvars.iv.next.i68,\l... %for.body.i70 ]\l  %s.06.i65 = phi float [ 0.000000e+00, %test.exit79 ], [ %add.i67,\l... %for.body.i70 ]\l  %arrayidx.i66 = getelementptr inbounds float, float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @a, i64 0, i64 12), i64 %indvars.iv.i64\l  %3 = load float, float* %arrayidx.i66, align 4, !tbaa !2\l  %add.i67 = fadd float %s.06.i65, %3\l  %indvars.iv.next.i68 = add nuw nsw i64 %indvars.iv.i64, 1\l  %exitcond.not.i69 = icmp eq i64 %indvars.iv.next.i68, 4\l  br i1 %exitcond.not.i69, label %test.exit71, label %for.body.i70, !llvm.loop\l... !6\l|{<s0>T|<s1>F}}"];
	Node0x564c93aa60f0:s0 -> Node0x564c93aa67d0;
	Node0x564c93aa60f0:s1 -> Node0x564c93aa60f0;
	Node0x564c93aa67d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{test.exit71:                                      \l  %add6 = fadd float %add4, %add.i75\l  br label %for.body.i62\l}"];
	Node0x564c93aa67d0 -> Node0x564c93aa6960;
	Node0x564c93aa6960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body.i62:                                     \l  %indvars.iv.i56 = phi i64 [ 0, %test.exit71 ], [ %indvars.iv.next.i60,\l... %for.body.i62 ]\l  %s.06.i57 = phi float [ 0.000000e+00, %test.exit71 ], [ %add.i59,\l... %for.body.i62 ]\l  %arrayidx.i58 = getelementptr inbounds float, float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @a, i64 0, i64 16), i64 %indvars.iv.i56\l  %4 = load float, float* %arrayidx.i58, align 4, !tbaa !2\l  %add.i59 = fadd float %s.06.i57, %4\l  %indvars.iv.next.i60 = add nuw nsw i64 %indvars.iv.i56, 1\l  %exitcond.not.i61 = icmp eq i64 %indvars.iv.next.i60, 4\l  br i1 %exitcond.not.i61, label %test.exit63, label %for.body.i62, !llvm.loop\l... !6\l|{<s0>T|<s1>F}}"];
	Node0x564c93aa6960:s0 -> Node0x564c93aa5560;
	Node0x564c93aa6960:s1 -> Node0x564c93aa6960;
	Node0x564c93aa5560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{test.exit63:                                      \l  %add8 = fadd float %add6, %add.i67\l  br label %for.body.i54\l}"];
	Node0x564c93aa5560 -> Node0x564c93aa7510;
	Node0x564c93aa7510 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body.i54:                                     \l  %indvars.iv.i48 = phi i64 [ 0, %test.exit63 ], [ %indvars.iv.next.i52,\l... %for.body.i54 ]\l  %s.06.i49 = phi float [ 0.000000e+00, %test.exit63 ], [ %add.i51,\l... %for.body.i54 ]\l  %arrayidx.i50 = getelementptr inbounds float, float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @a, i64 0, i64 20), i64 %indvars.iv.i48\l  %5 = load float, float* %arrayidx.i50, align 4, !tbaa !2\l  %add.i51 = fadd float %s.06.i49, %5\l  %indvars.iv.next.i52 = add nuw nsw i64 %indvars.iv.i48, 1\l  %exitcond.not.i53 = icmp eq i64 %indvars.iv.next.i52, 4\l  br i1 %exitcond.not.i53, label %test.exit55, label %for.body.i54, !llvm.loop\l... !6\l|{<s0>T|<s1>F}}"];
	Node0x564c93aa7510:s0 -> Node0x564c93aa7c40;
	Node0x564c93aa7510:s1 -> Node0x564c93aa7510;
	Node0x564c93aa7c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{test.exit55:                                      \l  %add10 = fadd float %add8, %add.i59\l  br label %for.body.i46\l}"];
	Node0x564c93aa7c40 -> Node0x564c93aa7dd0;
	Node0x564c93aa7dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body.i46:                                     \l  %indvars.iv.i40 = phi i64 [ 0, %test.exit55 ], [ %indvars.iv.next.i44,\l... %for.body.i46 ]\l  %s.06.i41 = phi float [ 0.000000e+00, %test.exit55 ], [ %add.i43,\l... %for.body.i46 ]\l  %arrayidx.i42 = getelementptr inbounds float, float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @a, i64 0, i64 24), i64 %indvars.iv.i40\l  %6 = load float, float* %arrayidx.i42, align 4, !tbaa !2\l  %add.i43 = fadd float %s.06.i41, %6\l  %indvars.iv.next.i44 = add nuw nsw i64 %indvars.iv.i40, 1\l  %exitcond.not.i45 = icmp eq i64 %indvars.iv.next.i44, 4\l  br i1 %exitcond.not.i45, label %test.exit47, label %for.body.i46, !llvm.loop\l... !6\l|{<s0>T|<s1>F}}"];
	Node0x564c93aa7dd0:s0 -> Node0x564c93aa8500;
	Node0x564c93aa7dd0:s1 -> Node0x564c93aa7dd0;
	Node0x564c93aa8500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{test.exit47:                                      \l  %add12 = fadd float %add10, %add.i51\l  br label %for.body.i38\l}"];
	Node0x564c93aa8500 -> Node0x564c93aa8690;
	Node0x564c93aa8690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body.i38:                                     \l  %indvars.iv.i32 = phi i64 [ 0, %test.exit47 ], [ %indvars.iv.next.i36,\l... %for.body.i38 ]\l  %s.06.i33 = phi float [ 0.000000e+00, %test.exit47 ], [ %add.i35,\l... %for.body.i38 ]\l  %arrayidx.i34 = getelementptr inbounds float, float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @a, i64 0, i64 28), i64 %indvars.iv.i32\l  %7 = load float, float* %arrayidx.i34, align 4, !tbaa !2\l  %add.i35 = fadd float %s.06.i33, %7\l  %indvars.iv.next.i36 = add nuw nsw i64 %indvars.iv.i32, 1\l  %exitcond.not.i37 = icmp eq i64 %indvars.iv.next.i36, 4\l  br i1 %exitcond.not.i37, label %test.exit39, label %for.body.i38, !llvm.loop\l... !6\l|{<s0>T|<s1>F}}"];
	Node0x564c93aa8690:s0 -> Node0x564c93aa3790;
	Node0x564c93aa8690:s1 -> Node0x564c93aa8690;
	Node0x564c93aa3790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{test.exit39:                                      \l  %add14 = fadd float %add12, %add.i43\l  %add16 = fadd float %add14, %add.i35\l  %call17 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float %add16) #11\l  %inc = add nuw nsw i32 %nl.088, 1\l  %exitcond.not = icmp eq i32 %inc, 200000000\l  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body.i.preheader,\l... !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x564c93aa3790:s0 -> Node0x564c93aa3a30;
	Node0x564c93aa3790:s1 -> Node0x564c93aa36a0;
}
