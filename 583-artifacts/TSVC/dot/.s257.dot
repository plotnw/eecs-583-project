digraph "CFG for 's257' function" {
	label="CFG for 's257' function";

	Node0x564c93aede90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s257, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c93aede90 -> Node0x564c93aee330;
	Node0x564c93aee330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond2.preheader:                              \l  %nl.054 = phi i32 [ 0, %entry ], [ %inc32, %for.cond.cleanup4 ]\l  br label %for.cond6.preheader\l}"];
	Node0x564c93aee330 -> Node0x564c93aee560;
	Node0x564c93aee6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call34 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call35 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s257, i64 0, i64 0)) #11\l  ret float %call35\l}"];
	Node0x564c93aee560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.cond6.preheader:                              \l  %indvars.iv55 = phi i64 [ 1, %for.cond2.preheader ], [ %indvars.iv.next56,\l... %for.cond.cleanup8 ]\l  %0 = add nsw i64 %indvars.iv55, -1\l  %arrayidx13 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %0\l  %arrayidx16 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv55\l  %.pre = load float, float* %arrayidx13, align 4, !tbaa !2\l  br label %for.body9\l}"];
	Node0x564c93aee560 -> Node0x564c93aef1f0;
	Node0x564c93aee450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond.cleanup4:                                \l  %call30 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc32 = add nuw nsw i32 %nl.054, 1\l  %exitcond58.not = icmp eq i32 %inc32, 3900\l  br i1 %exitcond58.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x564c93aee450:s0 -> Node0x564c93aee6d0;
	Node0x564c93aee450:s1 -> Node0x564c93aee330;
	Node0x564c93aeed80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.cond.cleanup8:                                \l  store float %sub14.7, float* %arrayidx16, align 4, !tbaa !2\l  %indvars.iv.next56 = add nuw nsw i64 %indvars.iv55, 1\l  %exitcond.not = icmp eq i64 %indvars.iv.next56, 256\l  br i1 %exitcond.not, label %for.cond.cleanup4, label %for.cond6.preheader,\l... !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x564c93aeed80:s0 -> Node0x564c93aee450;
	Node0x564c93aeed80:s1 -> Node0x564c93aee560;
	Node0x564c93aef1f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body9:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond6.preheader ], [ %indvars.iv.next.7,\l... %for.body9 ]\l  %arrayidx11 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv, i64 %indvars.iv55\l  %1 = load float, float* %arrayidx11, align 4, !tbaa !2\l  %sub14 = fsub float %1, %.pre\l  %arrayidx22 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv, i64 %indvars.iv55\l  %2 = load float, float* %arrayidx22, align 4, !tbaa !2\l  %add = fadd float %sub14, %2\l  store float %add, float* %arrayidx11, align 4, !tbaa !2\l  %indvars.iv.next = or i64 %indvars.iv, 1\l  %arrayidx11.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next, i64 %indvars.iv55\l  %3 = load float, float* %arrayidx11.1, align 4, !tbaa !2\l  %sub14.1 = fsub float %3, %.pre\l  %arrayidx22.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next, i64 %indvars.iv55\l  %4 = load float, float* %arrayidx22.1, align 4, !tbaa !2\l  %add.1 = fadd float %sub14.1, %4\l  store float %add.1, float* %arrayidx11.1, align 4, !tbaa !2\l  %indvars.iv.next.1 = or i64 %indvars.iv, 2\l  %arrayidx11.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.1, i64 %indvars.iv55\l  %5 = load float, float* %arrayidx11.2, align 4, !tbaa !2\l  %sub14.2 = fsub float %5, %.pre\l  %arrayidx22.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.1, i64 %indvars.iv55\l  %6 = load float, float* %arrayidx22.2, align 4, !tbaa !2\l  %add.2 = fadd float %sub14.2, %6\l  store float %add.2, float* %arrayidx11.2, align 4, !tbaa !2\l  %indvars.iv.next.2 = or i64 %indvars.iv, 3\l  %arrayidx11.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.2, i64 %indvars.iv55\l  %7 = load float, float* %arrayidx11.3, align 4, !tbaa !2\l  %sub14.3 = fsub float %7, %.pre\l  %arrayidx22.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.2, i64 %indvars.iv55\l  %8 = load float, float* %arrayidx22.3, align 4, !tbaa !2\l  %add.3 = fadd float %sub14.3, %8\l  store float %add.3, float* %arrayidx11.3, align 4, !tbaa !2\l  %indvars.iv.next.3 = or i64 %indvars.iv, 4\l  %arrayidx11.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.3, i64 %indvars.iv55\l  %9 = load float, float* %arrayidx11.4, align 4, !tbaa !2\l  %sub14.4 = fsub float %9, %.pre\l  %arrayidx22.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.3, i64 %indvars.iv55\l  %10 = load float, float* %arrayidx22.4, align 4, !tbaa !2\l  %add.4 = fadd float %sub14.4, %10\l  store float %add.4, float* %arrayidx11.4, align 4, !tbaa !2\l  %indvars.iv.next.4 = or i64 %indvars.iv, 5\l  %arrayidx11.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.4, i64 %indvars.iv55\l  %11 = load float, float* %arrayidx11.5, align 4, !tbaa !2\l  %sub14.5 = fsub float %11, %.pre\l  %arrayidx22.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.4, i64 %indvars.iv55\l  %12 = load float, float* %arrayidx22.5, align 4, !tbaa !2\l  %add.5 = fadd float %sub14.5, %12\l  store float %add.5, float* %arrayidx11.5, align 4, !tbaa !2\l  %indvars.iv.next.5 = or i64 %indvars.iv, 6\l  %arrayidx11.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.5, i64 %indvars.iv55\l  %13 = load float, float* %arrayidx11.6, align 4, !tbaa !2\l  %sub14.6 = fsub float %13, %.pre\l  %arrayidx22.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.5, i64 %indvars.iv55\l  %14 = load float, float* %arrayidx22.6, align 4, !tbaa !2\l  %add.6 = fadd float %sub14.6, %14\l  store float %add.6, float* %arrayidx11.6, align 4, !tbaa !2\l  %indvars.iv.next.6 = or i64 %indvars.iv, 7\l  %arrayidx11.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.6, i64 %indvars.iv55\l  %15 = load float, float* %arrayidx11.7, align 4, !tbaa !2\l  %sub14.7 = fsub float %15, %.pre\l  %arrayidx22.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.6, i64 %indvars.iv55\l  %16 = load float, float* %arrayidx22.7, align 4, !tbaa !2\l  %add.7 = fadd float %sub14.7, %16\l  store float %add.7, float* %arrayidx11.7, align 4, !tbaa !2\l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  %exitcond.7.not = icmp eq i64 %indvars.iv.next.7, 256\l  br i1 %exitcond.7.not, label %for.cond.cleanup8, label %for.body9,\l... !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x564c93aef1f0:s0 -> Node0x564c93aeed80;
	Node0x564c93aef1f0:s1 -> Node0x564c93aef1f0;
}
