digraph "CFG for 's176' function" {
	label="CFG for 's176' function";

	Node0x564c93a4ef10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s176, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c93a4ef10 -> Node0x564c93a4f3b0;
	Node0x564c93a4f3b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond2.preheader:                              \l  %nl.040 = phi i32 [ 0, %entry ], [ %inc21, %for.cond.cleanup4 ]\l  br label %for.cond6.preheader\l}"];
	Node0x564c93a4f3b0 -> Node0x564c93a4f5e0;
	Node0x564c93a4f6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call23 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call24 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s176, i64 0, i64 0)) #11\l  ret float %call24\l}"];
	Node0x564c93a4f5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.cond6.preheader:                              \l  %indvars.iv42 = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next43,\l... %for.cond.cleanup8 ]\l  %0 = sub nuw nsw i64 15999, %indvars.iv42\l  %arrayidx12 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv42\l  %1 = load float, float* %arrayidx12, align 4, !tbaa !2\l  br label %for.body9\l}"];
	Node0x564c93a4f5e0 -> Node0x564c93a500b0;
	Node0x564c93a4f4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond.cleanup4:                                \l  %call19 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc21 = add nuw nsw i32 %nl.040, 1\l  %exitcond45.not = icmp eq i32 %inc21, 12\l  br i1 %exitcond45.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x564c93a4f4d0:s0 -> Node0x564c93a4f6f0;
	Node0x564c93a4f4d0:s1 -> Node0x564c93a4f3b0;
	Node0x564c93a4fd00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.cond.cleanup8:                                \l  %indvars.iv.next43 = add nuw nsw i64 %indvars.iv42, 1\l  %exitcond.not = icmp eq i64 %indvars.iv.next43, 16000\l  br i1 %exitcond.not, label %for.cond.cleanup4, label %for.cond6.preheader,\l... !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x564c93a4fd00:s0 -> Node0x564c93a4f4d0;
	Node0x564c93a4fd00:s1 -> Node0x564c93a4f5e0;
	Node0x564c93a500b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body9:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond6.preheader ], [ %indvars.iv.next.7,\l... %for.body9 ]\l  %2 = add nuw nsw i64 %0, %indvars.iv\l  %arrayidx = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64\l... 0, i64 %2\l  %3 = load float, float* %arrayidx, align 4, !tbaa !2\l  %mul = fmul float %3, %1\l  %arrayidx14 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv\l  %4 = load float, float* %arrayidx14, align 32, !tbaa !2\l  %add15 = fadd float %4, %mul\l  store float %add15, float* %arrayidx14, align 32, !tbaa !2\l  %indvars.iv.next = or i64 %indvars.iv, 1\l  %5 = add nuw nsw i64 %0, %indvars.iv.next\l  %arrayidx.1 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %5\l  %6 = load float, float* %arrayidx.1, align 4, !tbaa !2\l  %mul.1 = fmul float %6, %1\l  %arrayidx14.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next\l  %7 = load float, float* %arrayidx14.1, align 4, !tbaa !2\l  %add15.1 = fadd float %7, %mul.1\l  store float %add15.1, float* %arrayidx14.1, align 4, !tbaa !2\l  %indvars.iv.next.1 = or i64 %indvars.iv, 2\l  %8 = add nuw nsw i64 %0, %indvars.iv.next.1\l  %arrayidx.2 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %8\l  %9 = load float, float* %arrayidx.2, align 4, !tbaa !2\l  %mul.2 = fmul float %9, %1\l  %arrayidx14.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.1\l  %10 = load float, float* %arrayidx14.2, align 8, !tbaa !2\l  %add15.2 = fadd float %10, %mul.2\l  store float %add15.2, float* %arrayidx14.2, align 8, !tbaa !2\l  %indvars.iv.next.2 = or i64 %indvars.iv, 3\l  %11 = add nuw nsw i64 %0, %indvars.iv.next.2\l  %arrayidx.3 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %11\l  %12 = load float, float* %arrayidx.3, align 4, !tbaa !2\l  %mul.3 = fmul float %12, %1\l  %arrayidx14.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.2\l  %13 = load float, float* %arrayidx14.3, align 4, !tbaa !2\l  %add15.3 = fadd float %13, %mul.3\l  store float %add15.3, float* %arrayidx14.3, align 4, !tbaa !2\l  %indvars.iv.next.3 = or i64 %indvars.iv, 4\l  %14 = add nuw nsw i64 %0, %indvars.iv.next.3\l  %arrayidx.4 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %14\l  %15 = load float, float* %arrayidx.4, align 4, !tbaa !2\l  %mul.4 = fmul float %15, %1\l  %arrayidx14.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.3\l  %16 = load float, float* %arrayidx14.4, align 16, !tbaa !2\l  %add15.4 = fadd float %16, %mul.4\l  store float %add15.4, float* %arrayidx14.4, align 16, !tbaa !2\l  %indvars.iv.next.4 = or i64 %indvars.iv, 5\l  %17 = add nuw nsw i64 %0, %indvars.iv.next.4\l  %arrayidx.5 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %17\l  %18 = load float, float* %arrayidx.5, align 4, !tbaa !2\l  %mul.5 = fmul float %18, %1\l  %arrayidx14.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.4\l  %19 = load float, float* %arrayidx14.5, align 4, !tbaa !2\l  %add15.5 = fadd float %19, %mul.5\l  store float %add15.5, float* %arrayidx14.5, align 4, !tbaa !2\l  %indvars.iv.next.5 = or i64 %indvars.iv, 6\l  %20 = add nuw nsw i64 %0, %indvars.iv.next.5\l  %arrayidx.6 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %20\l  %21 = load float, float* %arrayidx.6, align 4, !tbaa !2\l  %mul.6 = fmul float %21, %1\l  %arrayidx14.6 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.5\l  %22 = load float, float* %arrayidx14.6, align 8, !tbaa !2\l  %add15.6 = fadd float %22, %mul.6\l  store float %add15.6, float* %arrayidx14.6, align 8, !tbaa !2\l  %indvars.iv.next.6 = or i64 %indvars.iv, 7\l  %23 = add nuw nsw i64 %0, %indvars.iv.next.6\l  %arrayidx.7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %23\l  %24 = load float, float* %arrayidx.7, align 4, !tbaa !2\l  %mul.7 = fmul float %24, %1\l  %arrayidx14.7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.6\l  %25 = load float, float* %arrayidx14.7, align 4, !tbaa !2\l  %add15.7 = fadd float %25, %mul.7\l  store float %add15.7, float* %arrayidx14.7, align 4, !tbaa !2\l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  %exitcond.7.not = icmp eq i64 %indvars.iv.next.7, 16000\l  br i1 %exitcond.7.not, label %for.cond.cleanup8, label %for.body9,\l... !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x564c93a500b0:s0 -> Node0x564c93a4fd00;
	Node0x564c93a500b0:s1 -> Node0x564c93a500b0;
}
