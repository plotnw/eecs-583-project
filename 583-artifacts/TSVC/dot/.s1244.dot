digraph "CFG for 's1244' function" {
	label="CFG for 's1244' function";

	Node0x564c93a0a980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @__func__.s1244, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c93a0a980 -> Node0x564c93a0ae20;
	Node0x564c93a0ae20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond2.preheader:                              \l  %nl.051 = phi i32 [ 0, %entry ], [ %inc31, %for.cond.cleanup4 ]\l  br label %for.body5\l}"];
	Node0x564c93a0ae20 -> Node0x564c93a0b050;
	Node0x564c93a0b170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call33 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call34 = tail call float @calc_checksum(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @__func__.s1244, i64 0, i64 0)) #11\l  ret float %call34\l}"];
	Node0x564c93a0af40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond.cleanup4:                                \l  %call29 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc31 = add nuw nsw i32 %nl.051, 1\l  %exitcond.not = icmp eq i32 %inc31, 100000\l  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !2\l|{<s0>T|<s1>F}}"];
	Node0x564c93a0af40:s0 -> Node0x564c93a0b170;
	Node0x564c93a0af40:s1 -> Node0x564c93a0ae20;
	Node0x564c93a0b050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body5:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next.7,\l... %for.body5.7 ]\l  %arrayidx = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64\l... 0, i64 %indvars.iv\l  %0 = load float, float* %arrayidx, align 32, !tbaa !4\l  %arrayidx7 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv\l  %1 = load float, float* %arrayidx7, align 32, !tbaa !4\l  %mul = fmul float %1, %1\l  %add = fadd float %0, %mul\l  %mul14 = fmul float %0, %0\l  %add15 = fadd float %mul14, %add\l  %add18 = fadd float %1, %add15\l  %arrayidx20 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv\l  store float %add18, float* %arrayidx20, align 32, !tbaa !4\l  %indvars.iv.next = or i64 %indvars.iv, 1\l  %arrayidx25 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next\l  %2 = load float, float* %arrayidx25, align 4, !tbaa !4\l  %add26 = fadd float %2, %add18\l  %arrayidx28 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv\l  store float %add26, float* %arrayidx28, align 32, !tbaa !4\l  %arrayidx.1 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next\l  %3 = load float, float* %arrayidx.1, align 4, !tbaa !4\l  %arrayidx7.1 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next\l  %4 = load float, float* %arrayidx7.1, align 4, !tbaa !4\l  %mul.1 = fmul float %4, %4\l  %add.1 = fadd float %3, %mul.1\l  %mul14.1 = fmul float %3, %3\l  %add15.1 = fadd float %mul14.1, %add.1\l  %add18.1 = fadd float %4, %add15.1\l  store float %add18.1, float* %arrayidx25, align 4, !tbaa !4\l  %indvars.iv.next.1 = or i64 %indvars.iv, 2\l  %arrayidx25.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.1\l  %5 = load float, float* %arrayidx25.1, align 8, !tbaa !4\l  %add26.1 = fadd float %5, %add18.1\l  %arrayidx28.1 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next\l  store float %add26.1, float* %arrayidx28.1, align 4, !tbaa !4\l  %arrayidx.2 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.1\l  %6 = load float, float* %arrayidx.2, align 8, !tbaa !4\l  %arrayidx7.2 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.1\l  %7 = load float, float* %arrayidx7.2, align 8, !tbaa !4\l  %mul.2 = fmul float %7, %7\l  %add.2 = fadd float %6, %mul.2\l  %mul14.2 = fmul float %6, %6\l  %add15.2 = fadd float %mul14.2, %add.2\l  %add18.2 = fadd float %7, %add15.2\l  store float %add18.2, float* %arrayidx25.1, align 8, !tbaa !4\l  %indvars.iv.next.2 = or i64 %indvars.iv, 3\l  %arrayidx25.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.2\l  %8 = load float, float* %arrayidx25.2, align 4, !tbaa !4\l  %add26.2 = fadd float %8, %add18.2\l  %arrayidx28.2 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.1\l  store float %add26.2, float* %arrayidx28.2, align 8, !tbaa !4\l  %arrayidx.3 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.2\l  %9 = load float, float* %arrayidx.3, align 4, !tbaa !4\l  %arrayidx7.3 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.2\l  %10 = load float, float* %arrayidx7.3, align 4, !tbaa !4\l  %mul.3 = fmul float %10, %10\l  %add.3 = fadd float %9, %mul.3\l  %mul14.3 = fmul float %9, %9\l  %add15.3 = fadd float %mul14.3, %add.3\l  %add18.3 = fadd float %10, %add15.3\l  store float %add18.3, float* %arrayidx25.2, align 4, !tbaa !4\l  %indvars.iv.next.3 = or i64 %indvars.iv, 4\l  %arrayidx25.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.3\l  %11 = load float, float* %arrayidx25.3, align 16, !tbaa !4\l  %add26.3 = fadd float %11, %add18.3\l  %arrayidx28.3 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.2\l  store float %add26.3, float* %arrayidx28.3, align 4, !tbaa !4\l  %arrayidx.4 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.3\l  %12 = load float, float* %arrayidx.4, align 16, !tbaa !4\l  %arrayidx7.4 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.3\l  %13 = load float, float* %arrayidx7.4, align 16, !tbaa !4\l  %mul.4 = fmul float %13, %13\l  %add.4 = fadd float %12, %mul.4\l  %mul14.4 = fmul float %12, %12\l  %add15.4 = fadd float %mul14.4, %add.4\l  %add18.4 = fadd float %13, %add15.4\l  store float %add18.4, float* %arrayidx25.3, align 16, !tbaa !4\l  %indvars.iv.next.4 = or i64 %indvars.iv, 5\l  %arrayidx25.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.4\l  %14 = load float, float* %arrayidx25.4, align 4, !tbaa !4\l  %add26.4 = fadd float %14, %add18.4\l  %arrayidx28.4 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.3\l  store float %add26.4, float* %arrayidx28.4, align 16, !tbaa !4\l  %arrayidx.5 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.4\l  %15 = load float, float* %arrayidx.5, align 4, !tbaa !4\l  %arrayidx7.5 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.4\l  %16 = load float, float* %arrayidx7.5, align 4, !tbaa !4\l  %mul.5 = fmul float %16, %16\l  %add.5 = fadd float %15, %mul.5\l  %mul14.5 = fmul float %15, %15\l  %add15.5 = fadd float %mul14.5, %add.5\l  %add18.5 = fadd float %16, %add15.5\l  store float %add18.5, float* %arrayidx25.4, align 4, !tbaa !4\l  %indvars.iv.next.5 = or i64 %indvars.iv, 6\l  %arrayidx25.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.5\l  %17 = load float, float* %arrayidx25.5, align 8, !tbaa !4\l  %add26.5 = fadd float %17, %add18.5\l  %arrayidx28.5 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.4\l  store float %add26.5, float* %arrayidx28.5, align 4, !tbaa !4\l  %arrayidx.6 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.5\l  %18 = load float, float* %arrayidx.6, align 8, !tbaa !4\l  %arrayidx7.6 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.5\l  %19 = load float, float* %arrayidx7.6, align 8, !tbaa !4\l  %mul.6 = fmul float %19, %19\l  %add.6 = fadd float %18, %mul.6\l  %mul14.6 = fmul float %18, %18\l  %add15.6 = fadd float %mul14.6, %add.6\l  %add18.6 = fadd float %19, %add15.6\l  store float %add18.6, float* %arrayidx25.5, align 8, !tbaa !4\l  %indvars.iv.next.6 = or i64 %indvars.iv, 7\l  %arrayidx25.6 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.6\l  %20 = load float, float* %arrayidx25.6, align 4, !tbaa !4\l  %add26.6 = fadd float %20, %add18.6\l  %arrayidx28.6 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.5\l  store float %add26.6, float* %arrayidx28.6, align 8, !tbaa !4\l  %exitcond.6.not = icmp eq i64 %indvars.iv.next.6, 31999\l  br i1 %exitcond.6.not, label %for.cond.cleanup4, label %for.body5.7,\l... !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x564c93a0b050:s0 -> Node0x564c93a0af40;
	Node0x564c93a0b050:s1 -> Node0x564c93a0bbb0;
	Node0x564c93a0bbb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body5.7:                                      \l  %arrayidx.7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.6\l  %21 = load float, float* %arrayidx.7, align 4, !tbaa !4\l  %arrayidx7.7 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.6\l  %22 = load float, float* %arrayidx7.7, align 4, !tbaa !4\l  %mul.7 = fmul float %22, %22\l  %add.7 = fadd float %21, %mul.7\l  %mul14.7 = fmul float %21, %21\l  %add15.7 = fadd float %mul14.7, %add.7\l  %add18.7 = fadd float %22, %add15.7\l  store float %add18.7, float* %arrayidx25.6, align 4, !tbaa !4\l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  %arrayidx25.7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.7\l  %23 = load float, float* %arrayidx25.7, align 32, !tbaa !4\l  %add26.7 = fadd float %23, %add18.7\l  %arrayidx28.7 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.6\l  store float %add26.7, float* %arrayidx28.7, align 4, !tbaa !4\l  br label %for.body5, !llvm.loop !10\l}"];
	Node0x564c93a0bbb0 -> Node0x564c93a0b050;
}
