digraph "CFG for 's256' function" {
	label="CFG for 's256' function";

	Node0x564c93ae77a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s256, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c93ae77a0 -> Node0x564c93ae7c40;
	Node0x564c93ae7c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond2.preheader:                              \l  %nl.051 = phi i32 [ 0, %entry ], [ %inc30, %for.cond.cleanup4 ]\l  br label %for.cond6.preheader\l}"];
	Node0x564c93ae7c40 -> Node0x564c93ae7f30;
	Node0x564c93ae80a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call32 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call33 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s256, i64 0, i64 0)) #11\l  ret float %call33\l}"];
	Node0x564c93ae7f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.cond6.preheader:                              \l  %indvars.iv53 = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next54,\l... %for.cond.cleanup8 ]\l  %.pre = load float, float* getelementptr inbounds ([32000 x float], [32000 x\l... float]* @a, i64 0, i64 0), align 64, !tbaa !2\l  br label %for.body9\l}"];
	Node0x564c93ae7f30 -> Node0x564c93ae8890;
	Node0x564c93ae7d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond.cleanup4:                                \l  %call28 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc30 = add nuw nsw i32 %nl.051, 1\l  %exitcond55.not = icmp eq i32 %inc30, 3900\l  br i1 %exitcond55.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x564c93ae7d60:s0 -> Node0x564c93ae80a0;
	Node0x564c93ae7d60:s1 -> Node0x564c93ae7c40;
	Node0x564c93ae86b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.cond.cleanup8:                                \l  %indvars.iv.next54 = add nuw nsw i64 %indvars.iv53, 1\l  %exitcond.not = icmp eq i64 %indvars.iv.next54, 256\l  br i1 %exitcond.not, label %for.cond.cleanup4, label %for.cond6.preheader,\l... !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x564c93ae86b0:s0 -> Node0x564c93ae7d60;
	Node0x564c93ae86b0:s1 -> Node0x564c93ae7f30;
	Node0x564c93ae8890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body9:                                        \l  %0 = phi float [ %.pre, %for.cond6.preheader ], [ %sub10.7, %for.body9.7 ]\l  %indvars.iv = phi i64 [ 1, %for.cond6.preheader ], [ %indvars.iv.next.7,\l... %for.body9.7 ]\l  %sub10 = fsub float 1.000000e+00, %0\l  %arrayidx12 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv\l  store float %sub10, float* %arrayidx12, align 4, !tbaa !2\l  %arrayidx18 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv, i64 %indvars.iv53\l  %1 = load float, float* %arrayidx18, align 4, !tbaa !2\l  %arrayidx20 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv\l  %2 = load float, float* %arrayidx20, align 4, !tbaa !2\l  %mul = fmul float %1, %2\l  %add = fadd float %sub10, %mul\l  %arrayidx24 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv, i64 %indvars.iv53\l  store float %add, float* %arrayidx24, align 4, !tbaa !2\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %sub10.1 = fsub float 1.000000e+00, %sub10\l  %arrayidx12.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next\l  store float %sub10.1, float* %arrayidx12.1, align 4, !tbaa !2\l  %arrayidx18.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next, i64 %indvars.iv53\l  %3 = load float, float* %arrayidx18.1, align 4, !tbaa !2\l  %arrayidx20.1 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next\l  %4 = load float, float* %arrayidx20.1, align 4, !tbaa !2\l  %mul.1 = fmul float %3, %4\l  %add.1 = fadd float %sub10.1, %mul.1\l  %arrayidx24.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next, i64 %indvars.iv53\l  store float %add.1, float* %arrayidx24.1, align 4, !tbaa !2\l  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2\l  %sub10.2 = fsub float 1.000000e+00, %sub10.1\l  %arrayidx12.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.1\l  store float %sub10.2, float* %arrayidx12.2, align 4, !tbaa !2\l  %arrayidx18.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.1, i64 %indvars.iv53\l  %5 = load float, float* %arrayidx18.2, align 4, !tbaa !2\l  %arrayidx20.2 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.1\l  %6 = load float, float* %arrayidx20.2, align 4, !tbaa !2\l  %mul.2 = fmul float %5, %6\l  %add.2 = fadd float %sub10.2, %mul.2\l  %arrayidx24.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.1, i64 %indvars.iv53\l  store float %add.2, float* %arrayidx24.2, align 4, !tbaa !2\l  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv, 3\l  %sub10.3 = fsub float 1.000000e+00, %sub10.2\l  %arrayidx12.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.2\l  store float %sub10.3, float* %arrayidx12.3, align 4, !tbaa !2\l  %arrayidx18.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.2, i64 %indvars.iv53\l  %7 = load float, float* %arrayidx18.3, align 4, !tbaa !2\l  %arrayidx20.3 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.2\l  %8 = load float, float* %arrayidx20.3, align 4, !tbaa !2\l  %mul.3 = fmul float %7, %8\l  %add.3 = fadd float %sub10.3, %mul.3\l  %arrayidx24.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.2, i64 %indvars.iv53\l  store float %add.3, float* %arrayidx24.3, align 4, !tbaa !2\l  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4\l  %sub10.4 = fsub float 1.000000e+00, %sub10.3\l  %arrayidx12.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.3\l  store float %sub10.4, float* %arrayidx12.4, align 4, !tbaa !2\l  %arrayidx18.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.3, i64 %indvars.iv53\l  %9 = load float, float* %arrayidx18.4, align 4, !tbaa !2\l  %arrayidx20.4 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.3\l  %10 = load float, float* %arrayidx20.4, align 4, !tbaa !2\l  %mul.4 = fmul float %9, %10\l  %add.4 = fadd float %sub10.4, %mul.4\l  %arrayidx24.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.3, i64 %indvars.iv53\l  store float %add.4, float* %arrayidx24.4, align 4, !tbaa !2\l  %indvars.iv.next.4 = add nuw nsw i64 %indvars.iv, 5\l  %sub10.5 = fsub float 1.000000e+00, %sub10.4\l  %arrayidx12.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.4\l  store float %sub10.5, float* %arrayidx12.5, align 4, !tbaa !2\l  %arrayidx18.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.4, i64 %indvars.iv53\l  %11 = load float, float* %arrayidx18.5, align 4, !tbaa !2\l  %arrayidx20.5 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.4\l  %12 = load float, float* %arrayidx20.5, align 4, !tbaa !2\l  %mul.5 = fmul float %11, %12\l  %add.5 = fadd float %sub10.5, %mul.5\l  %arrayidx24.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.4, i64 %indvars.iv53\l  store float %add.5, float* %arrayidx24.5, align 4, !tbaa !2\l  %indvars.iv.next.5 = add nuw nsw i64 %indvars.iv, 6\l  %sub10.6 = fsub float 1.000000e+00, %sub10.5\l  %arrayidx12.6 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.5\l  store float %sub10.6, float* %arrayidx12.6, align 4, !tbaa !2\l  %arrayidx18.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.5, i64 %indvars.iv53\l  %13 = load float, float* %arrayidx18.6, align 4, !tbaa !2\l  %arrayidx20.6 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.5\l  %14 = load float, float* %arrayidx20.6, align 4, !tbaa !2\l  %mul.6 = fmul float %13, %14\l  %add.6 = fadd float %sub10.6, %mul.6\l  %arrayidx24.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.5, i64 %indvars.iv53\l  store float %add.6, float* %arrayidx24.6, align 4, !tbaa !2\l  %indvars.iv.next.6 = add nuw nsw i64 %indvars.iv, 7\l  %exitcond.6.not = icmp eq i64 %indvars.iv.next.6, 256\l  br i1 %exitcond.6.not, label %for.cond.cleanup8, label %for.body9.7,\l... !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x564c93ae8890:s0 -> Node0x564c93ae86b0;
	Node0x564c93ae8890:s1 -> Node0x564c93ae9080;
	Node0x564c93ae9080 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body9.7:                                      \l  %sub10.7 = fsub float 1.000000e+00, %sub10.6\l  %arrayidx12.7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.6\l  store float %sub10.7, float* %arrayidx12.7, align 4, !tbaa !2\l  %arrayidx18.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.6, i64 %indvars.iv53\l  %15 = load float, float* %arrayidx18.7, align 4, !tbaa !2\l  %arrayidx20.7 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.6\l  %16 = load float, float* %arrayidx20.7, align 4, !tbaa !2\l  %mul.7 = fmul float %15, %16\l  %add.7 = fadd float %sub10.7, %mul.7\l  %arrayidx24.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.6, i64 %indvars.iv53\l  store float %add.7, float* %arrayidx24.7, align 4, !tbaa !2\l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  br label %for.body9, !llvm.loop !11\l}"];
	Node0x564c93ae9080 -> Node0x564c93ae8890;
}
