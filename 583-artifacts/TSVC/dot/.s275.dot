digraph "CFG for 's275' function" {
	label="CFG for 's275' function";

	Node0x564c93b2b820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s275, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c93b2b820 -> Node0x564c93b2bcc0;
	Node0x564c93b2bcc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{for.cond2.preheader:                              \l  %nl.054 = phi i32 [ 0, %entry ], [ %inc32, %for.cond.cleanup4 ]\l  br label %for.body5\l}"];
	Node0x564c93b2bcc0 -> Node0x564c93b2bef0;
	Node0x564c93b2bfb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call34 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call35 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s275, i64 0, i64 0)) #11\l  ret float %call35\l}"];
	Node0x564c93b2bde0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{for.cond.cleanup4:                                \l  %call30 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc32 = add nuw nsw i32 %nl.054, 1\l  %exitcond58.not = icmp eq i32 %inc32, 3900\l  br i1 %exitcond58.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !2\l|{<s0>T|<s1>F}}"];
	Node0x564c93b2bde0:s0 -> Node0x564c93b2bfb0;
	Node0x564c93b2bde0:s1 -> Node0x564c93b2bcc0;
	Node0x564c93b2bef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{for.body5:                                        \l  %indvars.iv56 = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next57,\l... %for.inc27 ]\l  %arrayidx = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 0, i64 %indvars.iv56\l  %0 = load float, float* %arrayidx, align 4, !tbaa !4\l  %cmp6 = fcmp ogt float %0, 0.000000e+00\l  br i1 %cmp6, label %for.body10, label %for.inc27\l|{<s0>T|<s1>F}}"];
	Node0x564c93b2bef0:s0 -> Node0x564c93b2cc30;
	Node0x564c93b2bef0:s1 -> Node0x564c93b2c9f0;
	Node0x564c93b2cc30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body10:                                       \l  %1 = phi float [ %add.7, %for.body10.7 ], [ %0, %for.body5 ]\l  %indvars.iv = phi i64 [ %indvars.iv.next.7, %for.body10.7 ], [ 1, %for.body5\l... ]\l  %arrayidx18 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv, i64 %indvars.iv56\l  %2 = load float, float* %arrayidx18, align 4, !tbaa !4\l  %arrayidx22 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv, i64 %indvars.iv56\l  %3 = load float, float* %arrayidx22, align 4, !tbaa !4\l  %mul = fmul float %2, %3\l  %add = fadd float %1, %mul\l  %arrayidx26 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv, i64 %indvars.iv56\l  store float %add, float* %arrayidx26, align 4, !tbaa !4\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %arrayidx18.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next, i64 %indvars.iv56\l  %4 = load float, float* %arrayidx18.1, align 4, !tbaa !4\l  %arrayidx22.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv.next, i64 %indvars.iv56\l  %5 = load float, float* %arrayidx22.1, align 4, !tbaa !4\l  %mul.1 = fmul float %4, %5\l  %add.1 = fadd float %add, %mul.1\l  %arrayidx26.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next, i64 %indvars.iv56\l  store float %add.1, float* %arrayidx26.1, align 4, !tbaa !4\l  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2\l  %arrayidx18.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.1, i64 %indvars.iv56\l  %6 = load float, float* %arrayidx18.2, align 4, !tbaa !4\l  %arrayidx22.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv.next.1, i64 %indvars.iv56\l  %7 = load float, float* %arrayidx22.2, align 4, !tbaa !4\l  %mul.2 = fmul float %6, %7\l  %add.2 = fadd float %add.1, %mul.2\l  %arrayidx26.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.1, i64 %indvars.iv56\l  store float %add.2, float* %arrayidx26.2, align 4, !tbaa !4\l  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv, 3\l  %arrayidx18.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.2, i64 %indvars.iv56\l  %8 = load float, float* %arrayidx18.3, align 4, !tbaa !4\l  %arrayidx22.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv.next.2, i64 %indvars.iv56\l  %9 = load float, float* %arrayidx22.3, align 4, !tbaa !4\l  %mul.3 = fmul float %8, %9\l  %add.3 = fadd float %add.2, %mul.3\l  %arrayidx26.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.2, i64 %indvars.iv56\l  store float %add.3, float* %arrayidx26.3, align 4, !tbaa !4\l  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4\l  %arrayidx18.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.3, i64 %indvars.iv56\l  %10 = load float, float* %arrayidx18.4, align 4, !tbaa !4\l  %arrayidx22.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv.next.3, i64 %indvars.iv56\l  %11 = load float, float* %arrayidx22.4, align 4, !tbaa !4\l  %mul.4 = fmul float %10, %11\l  %add.4 = fadd float %add.3, %mul.4\l  %arrayidx26.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.3, i64 %indvars.iv56\l  store float %add.4, float* %arrayidx26.4, align 4, !tbaa !4\l  %indvars.iv.next.4 = add nuw nsw i64 %indvars.iv, 5\l  %arrayidx18.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.4, i64 %indvars.iv56\l  %12 = load float, float* %arrayidx18.5, align 4, !tbaa !4\l  %arrayidx22.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv.next.4, i64 %indvars.iv56\l  %13 = load float, float* %arrayidx22.5, align 4, !tbaa !4\l  %mul.5 = fmul float %12, %13\l  %add.5 = fadd float %add.4, %mul.5\l  %arrayidx26.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.4, i64 %indvars.iv56\l  store float %add.5, float* %arrayidx26.5, align 4, !tbaa !4\l  %indvars.iv.next.5 = add nuw nsw i64 %indvars.iv, 6\l  %arrayidx18.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.5, i64 %indvars.iv56\l  %14 = load float, float* %arrayidx18.6, align 4, !tbaa !4\l  %arrayidx22.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv.next.5, i64 %indvars.iv56\l  %15 = load float, float* %arrayidx22.6, align 4, !tbaa !4\l  %mul.6 = fmul float %14, %15\l  %add.6 = fadd float %add.5, %mul.6\l  %arrayidx26.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.5, i64 %indvars.iv56\l  store float %add.6, float* %arrayidx26.6, align 4, !tbaa !4\l  %indvars.iv.next.6 = add nuw nsw i64 %indvars.iv, 7\l  %exitcond.6.not = icmp eq i64 %indvars.iv.next.6, 256\l  br i1 %exitcond.6.not, label %for.inc27, label %for.body10.7, !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x564c93b2cc30:s0 -> Node0x564c93b2c9f0;
	Node0x564c93b2cc30:s1 -> Node0x564c93b2cdb0;
	Node0x564c93b2c9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{for.inc27:                                        \l  %indvars.iv.next57 = add nuw nsw i64 %indvars.iv56, 1\l  %exitcond.not = icmp eq i64 %indvars.iv.next57, 256\l  br i1 %exitcond.not, label %for.cond.cleanup4, label %for.body5, !llvm.loop\l... !10\l|{<s0>T|<s1>F}}"];
	Node0x564c93b2c9f0:s0 -> Node0x564c93b2bde0;
	Node0x564c93b2c9f0:s1 -> Node0x564c93b2bef0;
	Node0x564c93b2cdb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body10.7:                                     \l  %arrayidx18.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.6, i64 %indvars.iv56\l  %16 = load float, float* %arrayidx18.7, align 4, !tbaa !4\l  %arrayidx22.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv.next.6, i64 %indvars.iv56\l  %17 = load float, float* %arrayidx22.7, align 4, !tbaa !4\l  %mul.7 = fmul float %16, %17\l  %add.7 = fadd float %add.6, %mul.7\l  %arrayidx26.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.6, i64 %indvars.iv56\l  store float %add.7, float* %arrayidx26.7, align 4, !tbaa !4\l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  br label %for.body10, !llvm.loop !11\l}"];
	Node0x564c93b2cdb0 -> Node0x564c93b2cc30;
}
