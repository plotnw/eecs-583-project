digraph "CFG for 's141' function" {
	label="CFG for 's141' function";

	Node0x564c939f4160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s141, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c939f4160 -> Node0x564c939f4600;
	Node0x564c939f4600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{for.cond2.preheader:                              \l  %nl.050 = phi i32 [ 0, %entry ], [ %inc26, %for.cond.cleanup4 ]\l  br label %for.body13.lr.ph\l}"];
	Node0x564c939f4600 -> Node0x564c939f4830;
	Node0x564c939f49a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call28 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call29 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s141, i64 0, i64 0)) #11\l  ret float %call29\l}"];
	Node0x564c939f4fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{for.cond2.loopexit:                               \l  %exitcond.not = icmp eq i64 %indvars.iv.next, 256\l  br i1 %exitcond.not, label %for.cond.cleanup4, label %for.body13.lr.ph,\l... !llvm.loop !2\l|{<s0>T|<s1>F}}"];
	Node0x564c939f4fc0:s0 -> Node0x564c939f4720;
	Node0x564c939f4fc0:s1 -> Node0x564c939f4830;
	Node0x564c939f4720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{for.cond.cleanup4:                                \l  %call24 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc26 = add nuw nsw i32 %nl.050, 1\l  %exitcond54.not = icmp eq i32 %inc26, 78000\l  br i1 %exitcond54.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !4\l|{<s0>T|<s1>F}}"];
	Node0x564c939f4720:s0 -> Node0x564c939f49a0;
	Node0x564c939f4720:s1 -> Node0x564c939f4600;
	Node0x564c939f4830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{for.body13.lr.ph:                                 \l  %indvars.iv = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next,\l... %for.cond2.loopexit ]\l  %i.049 = phi i32 [ 0, %for.cond2.preheader ], [ %add, %for.cond2.loopexit ]\l  %0 = sub nsw i64 255, %indvars.iv\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %add = add nuw nsw i32 %i.049, 1\l  %1 = trunc i64 %indvars.iv to i32\l  %2 = sub i32 0, %1\l  %3 = trunc i64 %indvars.iv to i32\l  %4 = mul i32 %add, %3\l  %div = lshr i32 %4, 1\l  %5 = trunc i64 %indvars.iv to i32\l  %sub9 = add nuw nsw i32 %div, %5\l  %xtraiter = and i32 %2, 7\l  %lcmp.mod.not = icmp eq i32 %xtraiter, 0\l  br i1 %lcmp.mod.not, label %for.body13.prol.loopexit, label %for.body13.prol\l|{<s0>T|<s1>F}}"];
	Node0x564c939f4830:s0 -> Node0x564c939f6240;
	Node0x564c939f4830:s1 -> Node0x564c939f62d0;
	Node0x564c939f62d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body13.prol:                                  \l  %indvars.iv51.prol = phi i64 [ %indvars.iv.next52.prol, %for.body13.prol ],\l... [ %indvars.iv, %for.body13.lr.ph ]\l  %k.047.prol = phi i32 [ %add20.prol, %for.body13.prol ], [ %sub9,\l... %for.body13.lr.ph ]\l  %prol.iter = phi i32 [ %prol.iter.sub, %for.body13.prol ], [ %xtraiter,\l... %for.body13.lr.ph ]\l  %arrayidx15.prol = getelementptr inbounds [256 x [256 x float]], [256 x [256\l... x float]]* @bb, i64 0, i64 %indvars.iv51.prol, i64 %indvars.iv\l  %6 = load float, float* %arrayidx15.prol, align 4, !tbaa !5\l  %idxprom16.prol = zext i32 %k.047.prol to i64\l  %arrayidx17.prol = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %idxprom16.prol\l  %7 = load float, float* %arrayidx17.prol, align 4, !tbaa !5\l  %add18.prol = fadd float %6, %7\l  store float %add18.prol, float* %arrayidx17.prol, align 4, !tbaa !5\l  %indvars.iv.next52.prol = add nuw nsw i64 %indvars.iv51.prol, 1\l  %8 = trunc i64 %indvars.iv.next52.prol to i32\l  %add20.prol = add nuw nsw i32 %k.047.prol, %8\l  %prol.iter.sub = add i32 %prol.iter, -1\l  %prol.iter.cmp.not = icmp eq i32 %prol.iter.sub, 0\l  br i1 %prol.iter.cmp.not, label %for.body13.prol.loopexit, label\l... %for.body13.prol, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x564c939f62d0:s0 -> Node0x564c939f6240;
	Node0x564c939f62d0:s1 -> Node0x564c939f62d0;
	Node0x564c939f6240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{for.body13.prol.loopexit:                         \l  %indvars.iv51.unr = phi i64 [ %indvars.iv, %for.body13.lr.ph ], [\l... %indvars.iv.next52.prol, %for.body13.prol ]\l  %k.047.unr = phi i32 [ %sub9, %for.body13.lr.ph ], [ %add20.prol,\l... %for.body13.prol ]\l  %9 = icmp ult i64 %0, 7\l  br i1 %9, label %for.cond2.loopexit, label %for.body13\l|{<s0>T|<s1>F}}"];
	Node0x564c939f6240:s0 -> Node0x564c939f4fc0;
	Node0x564c939f6240:s1 -> Node0x564c939f72a0;
	Node0x564c939f72a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{for.body13:                                       \l  %indvars.iv51 = phi i64 [ %indvars.iv.next52.7, %for.body13 ], [\l... %indvars.iv51.unr, %for.body13.prol.loopexit ]\l  %k.047 = phi i32 [ %add20.7, %for.body13 ], [ %k.047.unr,\l... %for.body13.prol.loopexit ]\l  %arrayidx15 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv51, i64 %indvars.iv\l  %10 = load float, float* %arrayidx15, align 4, !tbaa !5\l  %idxprom16 = zext i32 %k.047 to i64\l  %arrayidx17 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %idxprom16\l  %11 = load float, float* %arrayidx17, align 4, !tbaa !5\l  %add18 = fadd float %10, %11\l  store float %add18, float* %arrayidx17, align 4, !tbaa !5\l  %indvars.iv.next52 = add nuw nsw i64 %indvars.iv51, 1\l  %12 = trunc i64 %indvars.iv.next52 to i32\l  %add20 = add nuw nsw i32 %k.047, %12\l  %arrayidx15.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next52, i64 %indvars.iv\l  %13 = load float, float* %arrayidx15.1, align 4, !tbaa !5\l  %idxprom16.1 = zext i32 %add20 to i64\l  %arrayidx17.1 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %idxprom16.1\l  %14 = load float, float* %arrayidx17.1, align 4, !tbaa !5\l  %add18.1 = fadd float %13, %14\l  store float %add18.1, float* %arrayidx17.1, align 4, !tbaa !5\l  %indvars.iv.next52.1 = add nuw nsw i64 %indvars.iv51, 2\l  %15 = trunc i64 %indvars.iv.next52.1 to i32\l  %add20.1 = add nuw nsw i32 %add20, %15\l  %arrayidx15.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next52.1, i64 %indvars.iv\l  %16 = load float, float* %arrayidx15.2, align 4, !tbaa !5\l  %idxprom16.2 = zext i32 %add20.1 to i64\l  %arrayidx17.2 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %idxprom16.2\l  %17 = load float, float* %arrayidx17.2, align 4, !tbaa !5\l  %add18.2 = fadd float %16, %17\l  store float %add18.2, float* %arrayidx17.2, align 4, !tbaa !5\l  %indvars.iv.next52.2 = add nuw nsw i64 %indvars.iv51, 3\l  %18 = trunc i64 %indvars.iv.next52.2 to i32\l  %add20.2 = add nuw nsw i32 %add20.1, %18\l  %arrayidx15.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next52.2, i64 %indvars.iv\l  %19 = load float, float* %arrayidx15.3, align 4, !tbaa !5\l  %idxprom16.3 = zext i32 %add20.2 to i64\l  %arrayidx17.3 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %idxprom16.3\l  %20 = load float, float* %arrayidx17.3, align 4, !tbaa !5\l  %add18.3 = fadd float %19, %20\l  store float %add18.3, float* %arrayidx17.3, align 4, !tbaa !5\l  %indvars.iv.next52.3 = add nuw nsw i64 %indvars.iv51, 4\l  %21 = trunc i64 %indvars.iv.next52.3 to i32\l  %add20.3 = add nuw nsw i32 %add20.2, %21\l  %arrayidx15.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next52.3, i64 %indvars.iv\l  %22 = load float, float* %arrayidx15.4, align 4, !tbaa !5\l  %idxprom16.4 = zext i32 %add20.3 to i64\l  %arrayidx17.4 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %idxprom16.4\l  %23 = load float, float* %arrayidx17.4, align 4, !tbaa !5\l  %add18.4 = fadd float %22, %23\l  store float %add18.4, float* %arrayidx17.4, align 4, !tbaa !5\l  %indvars.iv.next52.4 = add nuw nsw i64 %indvars.iv51, 5\l  %24 = trunc i64 %indvars.iv.next52.4 to i32\l  %add20.4 = add nuw nsw i32 %add20.3, %24\l  %arrayidx15.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next52.4, i64 %indvars.iv\l  %25 = load float, float* %arrayidx15.5, align 4, !tbaa !5\l  %idxprom16.5 = zext i32 %add20.4 to i64\l  %arrayidx17.5 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %idxprom16.5\l  %26 = load float, float* %arrayidx17.5, align 4, !tbaa !5\l  %add18.5 = fadd float %25, %26\l  store float %add18.5, float* %arrayidx17.5, align 4, !tbaa !5\l  %indvars.iv.next52.5 = add nuw nsw i64 %indvars.iv51, 6\l  %27 = trunc i64 %indvars.iv.next52.5 to i32\l  %add20.5 = add nuw nsw i32 %add20.4, %27\l  %arrayidx15.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next52.5, i64 %indvars.iv\l  %28 = load float, float* %arrayidx15.6, align 4, !tbaa !5\l  %idxprom16.6 = zext i32 %add20.5 to i64\l  %arrayidx17.6 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %idxprom16.6\l  %29 = load float, float* %arrayidx17.6, align 4, !tbaa !5\l  %add18.6 = fadd float %28, %29\l  store float %add18.6, float* %arrayidx17.6, align 4, !tbaa !5\l  %indvars.iv.next52.6 = add nuw nsw i64 %indvars.iv51, 7\l  %30 = trunc i64 %indvars.iv.next52.6 to i32\l  %add20.6 = add nuw nsw i32 %add20.5, %30\l  %arrayidx15.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next52.6, i64 %indvars.iv\l  %31 = load float, float* %arrayidx15.7, align 4, !tbaa !5\l  %idxprom16.7 = zext i32 %add20.6 to i64\l  %arrayidx17.7 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %idxprom16.7\l  %32 = load float, float* %arrayidx17.7, align 4, !tbaa !5\l  %add18.7 = fadd float %31, %32\l  store float %add18.7, float* %arrayidx17.7, align 4, !tbaa !5\l  %indvars.iv.next52.7 = add nuw nsw i64 %indvars.iv51, 8\l  %33 = trunc i64 %indvars.iv.next52.7 to i32\l  %add20.7 = add nuw nsw i32 %add20.6, %33\l  %exitcond.7.not = icmp eq i64 %indvars.iv.next52.7, 256\l  br i1 %exitcond.7.not, label %for.cond2.loopexit, label %for.body13,\l... !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x564c939f72a0:s0 -> Node0x564c939f4fc0;
	Node0x564c939f72a0:s1 -> Node0x564c939f72a0;
}
