digraph "CFG for 's124' function" {
	label="CFG for 's124' function";

	Node0x564c93980cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s124, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c93980cc0 -> Node0x564c93981160;
	Node0x564c93981160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond2.preheader:                              \l  %nl.051 = phi i32 [ 0, %entry ], [ %inc29, %for.cond.cleanup4 ]\l  br label %for.body5\l}"];
	Node0x564c93981160 -> Node0x564c93981390;
	Node0x564c939814b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call31 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call32 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s124, i64 0, i64 0)) #11\l  ret float %call32\l}"];
	Node0x564c93981280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond.cleanup4:                                \l  %call27 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc29 = add nuw nsw i32 %nl.051, 1\l  %exitcond.not = icmp eq i32 %inc29, 100000\l  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !2\l|{<s0>T|<s1>F}}"];
	Node0x564c93981280:s0 -> Node0x564c939814b0;
	Node0x564c93981280:s1 -> Node0x564c93981160;
	Node0x564c93981390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body5:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next.7,\l... %for.inc.7 ]\l  %j.049 = phi i32 [ -1, %for.cond2.preheader ], [ %inc.7, %for.inc.7 ]\l  %arrayidx = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64\l... 0, i64 %indvars.iv\l  %0 = load float, float* %arrayidx, align 32, !tbaa !4\l  %cmp6 = fcmp ogt float %0, 0.000000e+00\l  %inc = add nsw i32 %j.049, 1\l  br i1 %cmp6, label %for.inc, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x564c93981390:s0 -> Node0x564c939bc7a0;
	Node0x564c93981390:s1 -> Node0x564c939bc870;
	Node0x564c939bc870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.else:                                          \l  %arrayidx17 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv\l  %1 = load float, float* %arrayidx17, align 32, !tbaa !4\l  br label %for.inc\l}"];
	Node0x564c939bc870 -> Node0x564c939bc7a0;
	Node0x564c939bc7a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc:                                          \l  %.sink = phi float [ %1, %if.else ], [ %0, %for.body5 ]\l  %arrayidx10 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv\l  %2 = load float, float* %arrayidx10, align 32, !tbaa !4\l  %arrayidx12 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv\l  %3 = load float, float* %arrayidx12, align 32, !tbaa !4\l  %mul = fmul float %2, %3\l  %add = fadd float %.sink, %mul\l  %idxprom13 = sext i32 %inc to i64\l  %arrayidx14 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %idxprom13\l  store float %add, float* %arrayidx14, align 4, !tbaa !4\l  %indvars.iv.next = or i64 %indvars.iv, 1\l  %arrayidx.1 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next\l  %4 = load float, float* %arrayidx.1, align 4, !tbaa !4\l  %cmp6.1 = fcmp ogt float %4, 0.000000e+00\l  %inc.1 = add nsw i32 %j.049, 2\l  br i1 %cmp6.1, label %for.inc.1, label %if.else.1\l|{<s0>T|<s1>F}}"];
	Node0x564c939bc7a0:s0 -> Node0x564c939bd970;
	Node0x564c939bc7a0:s1 -> Node0x564c939bd9c0;
	Node0x564c939bd9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.else.1:                                        \l  %arrayidx17.1 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next\l  %5 = load float, float* %arrayidx17.1, align 4, !tbaa !4\l  br label %for.inc.1\l}"];
	Node0x564c939bd9c0 -> Node0x564c939bd970;
	Node0x564c939bd970 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.1:                                        \l  %.sink54 = phi float [ %5, %if.else.1 ], [ %4, %for.inc ]\l  %arrayidx10.1 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next\l  %6 = load float, float* %arrayidx10.1, align 4, !tbaa !4\l  %arrayidx12.1 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next\l  %7 = load float, float* %arrayidx12.1, align 4, !tbaa !4\l  %mul.1 = fmul float %6, %7\l  %add.1 = fadd float %.sink54, %mul.1\l  %idxprom13.1 = sext i32 %inc.1 to i64\l  %arrayidx14.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %idxprom13.1\l  store float %add.1, float* %arrayidx14.1, align 4, !tbaa !4\l  %indvars.iv.next.1 = or i64 %indvars.iv, 2\l  %arrayidx.2 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.1\l  %8 = load float, float* %arrayidx.2, align 8, !tbaa !4\l  %cmp6.2 = fcmp ogt float %8, 0.000000e+00\l  %inc.2 = add nsw i32 %j.049, 3\l  br i1 %cmp6.2, label %for.inc.2, label %if.else.2\l|{<s0>T|<s1>F}}"];
	Node0x564c939bd970:s0 -> Node0x564c939bd7c0;
	Node0x564c939bd970:s1 -> Node0x564c939bcbc0;
	Node0x564c939bcbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.else.2:                                        \l  %arrayidx17.2 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.1\l  %9 = load float, float* %arrayidx17.2, align 8, !tbaa !4\l  br label %for.inc.2\l}"];
	Node0x564c939bcbc0 -> Node0x564c939bd7c0;
	Node0x564c939bd7c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.2:                                        \l  %.sink57 = phi float [ %9, %if.else.2 ], [ %8, %for.inc.1 ]\l  %arrayidx10.2 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.1\l  %10 = load float, float* %arrayidx10.2, align 8, !tbaa !4\l  %arrayidx12.2 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.1\l  %11 = load float, float* %arrayidx12.2, align 8, !tbaa !4\l  %mul.2 = fmul float %10, %11\l  %add.2 = fadd float %.sink57, %mul.2\l  %idxprom13.2 = sext i32 %inc.2 to i64\l  %arrayidx14.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %idxprom13.2\l  store float %add.2, float* %arrayidx14.2, align 4, !tbaa !4\l  %indvars.iv.next.2 = or i64 %indvars.iv, 3\l  %arrayidx.3 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.2\l  %12 = load float, float* %arrayidx.3, align 4, !tbaa !4\l  %cmp6.3 = fcmp ogt float %12, 0.000000e+00\l  %inc.3 = add nsw i32 %j.049, 4\l  br i1 %cmp6.3, label %for.inc.3, label %if.else.3\l|{<s0>T|<s1>F}}"];
	Node0x564c939bd7c0:s0 -> Node0x564c939bf940;
	Node0x564c939bd7c0:s1 -> Node0x564c939bf9c0;
	Node0x564c939bf9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.else.3:                                        \l  %arrayidx17.3 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.2\l  %13 = load float, float* %arrayidx17.3, align 4, !tbaa !4\l  br label %for.inc.3\l}"];
	Node0x564c939bf9c0 -> Node0x564c939bf940;
	Node0x564c939bf940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.3:                                        \l  %.sink60 = phi float [ %13, %if.else.3 ], [ %12, %for.inc.2 ]\l  %arrayidx10.3 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.2\l  %14 = load float, float* %arrayidx10.3, align 4, !tbaa !4\l  %arrayidx12.3 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.2\l  %15 = load float, float* %arrayidx12.3, align 4, !tbaa !4\l  %mul.3 = fmul float %14, %15\l  %add.3 = fadd float %.sink60, %mul.3\l  %idxprom13.3 = sext i32 %inc.3 to i64\l  %arrayidx14.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %idxprom13.3\l  store float %add.3, float* %arrayidx14.3, align 4, !tbaa !4\l  %indvars.iv.next.3 = or i64 %indvars.iv, 4\l  %arrayidx.4 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.3\l  %16 = load float, float* %arrayidx.4, align 16, !tbaa !4\l  %cmp6.4 = fcmp ogt float %16, 0.000000e+00\l  %inc.4 = add nsw i32 %j.049, 5\l  br i1 %cmp6.4, label %for.inc.4, label %if.else.4\l|{<s0>T|<s1>F}}"];
	Node0x564c939bf940:s0 -> Node0x564c939c06f0;
	Node0x564c939bf940:s1 -> Node0x564c939c0770;
	Node0x564c939c0770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.else.4:                                        \l  %arrayidx17.4 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.3\l  %17 = load float, float* %arrayidx17.4, align 16, !tbaa !4\l  br label %for.inc.4\l}"];
	Node0x564c939c0770 -> Node0x564c939c06f0;
	Node0x564c939c06f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.4:                                        \l  %.sink63 = phi float [ %17, %if.else.4 ], [ %16, %for.inc.3 ]\l  %arrayidx10.4 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.3\l  %18 = load float, float* %arrayidx10.4, align 16, !tbaa !4\l  %arrayidx12.4 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.3\l  %19 = load float, float* %arrayidx12.4, align 16, !tbaa !4\l  %mul.4 = fmul float %18, %19\l  %add.4 = fadd float %.sink63, %mul.4\l  %idxprom13.4 = sext i32 %inc.4 to i64\l  %arrayidx14.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %idxprom13.4\l  store float %add.4, float* %arrayidx14.4, align 4, !tbaa !4\l  %indvars.iv.next.4 = or i64 %indvars.iv, 5\l  %arrayidx.5 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.4\l  %20 = load float, float* %arrayidx.5, align 4, !tbaa !4\l  %cmp6.5 = fcmp ogt float %20, 0.000000e+00\l  %inc.5 = add nsw i32 %j.049, 6\l  br i1 %cmp6.5, label %for.inc.5, label %if.else.5\l|{<s0>T|<s1>F}}"];
	Node0x564c939c06f0:s0 -> Node0x564c939c1530;
	Node0x564c939c06f0:s1 -> Node0x564c939c15b0;
	Node0x564c939c15b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.else.5:                                        \l  %arrayidx17.5 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.4\l  %21 = load float, float* %arrayidx17.5, align 4, !tbaa !4\l  br label %for.inc.5\l}"];
	Node0x564c939c15b0 -> Node0x564c939c1530;
	Node0x564c939c1530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.5:                                        \l  %.sink66 = phi float [ %21, %if.else.5 ], [ %20, %for.inc.4 ]\l  %arrayidx10.5 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.4\l  %22 = load float, float* %arrayidx10.5, align 4, !tbaa !4\l  %arrayidx12.5 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.4\l  %23 = load float, float* %arrayidx12.5, align 4, !tbaa !4\l  %mul.5 = fmul float %22, %23\l  %add.5 = fadd float %.sink66, %mul.5\l  %idxprom13.5 = sext i32 %inc.5 to i64\l  %arrayidx14.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %idxprom13.5\l  store float %add.5, float* %arrayidx14.5, align 4, !tbaa !4\l  %indvars.iv.next.5 = or i64 %indvars.iv, 6\l  %arrayidx.6 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.5\l  %24 = load float, float* %arrayidx.6, align 8, !tbaa !4\l  %cmp6.6 = fcmp ogt float %24, 0.000000e+00\l  %inc.6 = add nsw i32 %j.049, 7\l  br i1 %cmp6.6, label %for.inc.6, label %if.else.6\l|{<s0>T|<s1>F}}"];
	Node0x564c939c1530:s0 -> Node0x564c939c2980;
	Node0x564c939c1530:s1 -> Node0x564c939c29d0;
	Node0x564c939c29d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.else.6:                                        \l  %arrayidx17.6 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.5\l  %25 = load float, float* %arrayidx17.6, align 8, !tbaa !4\l  br label %for.inc.6\l}"];
	Node0x564c939c29d0 -> Node0x564c939c2980;
	Node0x564c939c2980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.6:                                        \l  %.sink69 = phi float [ %25, %if.else.6 ], [ %24, %for.inc.5 ]\l  %arrayidx10.6 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.5\l  %26 = load float, float* %arrayidx10.6, align 8, !tbaa !4\l  %arrayidx12.6 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.5\l  %27 = load float, float* %arrayidx12.6, align 8, !tbaa !4\l  %mul.6 = fmul float %26, %27\l  %add.6 = fadd float %.sink69, %mul.6\l  %idxprom13.6 = sext i32 %inc.6 to i64\l  %arrayidx14.6 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %idxprom13.6\l  store float %add.6, float* %arrayidx14.6, align 4, !tbaa !4\l  %indvars.iv.next.6 = or i64 %indvars.iv, 7\l  %arrayidx.7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.6\l  %28 = load float, float* %arrayidx.7, align 4, !tbaa !4\l  %cmp6.7 = fcmp ogt float %28, 0.000000e+00\l  %inc.7 = add nsw i32 %j.049, 8\l  br i1 %cmp6.7, label %for.inc.7, label %if.else.7\l|{<s0>T|<s1>F}}"];
	Node0x564c939c2980:s0 -> Node0x564c939bc2d0;
	Node0x564c939c2980:s1 -> Node0x564c939c3770;
	Node0x564c939c3770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.else.7:                                        \l  %arrayidx17.7 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.6\l  %29 = load float, float* %arrayidx17.7, align 4, !tbaa !4\l  br label %for.inc.7\l}"];
	Node0x564c939c3770 -> Node0x564c939bc2d0;
	Node0x564c939bc2d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.7:                                        \l  %.sink72 = phi float [ %29, %if.else.7 ], [ %28, %for.inc.6 ]\l  %arrayidx10.7 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.6\l  %30 = load float, float* %arrayidx10.7, align 4, !tbaa !4\l  %arrayidx12.7 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.6\l  %31 = load float, float* %arrayidx12.7, align 4, !tbaa !4\l  %mul.7 = fmul float %30, %31\l  %add.7 = fadd float %.sink72, %mul.7\l  %idxprom13.7 = sext i32 %inc.7 to i64\l  %arrayidx14.7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %idxprom13.7\l  store float %add.7, float* %arrayidx14.7, align 4, !tbaa !4\l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  %exitcond.7.not = icmp eq i64 %indvars.iv.next.7, 32000\l  br i1 %exitcond.7.not, label %for.cond.cleanup4, label %for.body5,\l... !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x564c939bc2d0:s0 -> Node0x564c93981280;
	Node0x564c939bc2d0:s1 -> Node0x564c93981390;
}
