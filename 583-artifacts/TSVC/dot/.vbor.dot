digraph "CFG for 'vbor' function" {
	label="CFG for 'vbor' function";

	Node0x564c93cffce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.vbor, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c93cffce0 -> Node0x564c93d00180;
	Node0x564c93d00180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond2.preheader:                              \l  %nl.0158 = phi i32 [ 0, %entry ], [ %inc77, %for.cond.cleanup4 ]\l  br label %for.body5\l}"];
	Node0x564c93d00180 -> Node0x564c93d00410;
	Node0x564c93d00530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call79 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call80 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.vbor, i64 0, i64 0)) #11\l  ret float %call80\l}"];
	Node0x564c93d002a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond.cleanup4:                                \l  %call75 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc77 = add nuw nsw i32 %nl.0158, 1\l  %exitcond159.not = icmp eq i32 %inc77, 1000000\l  br i1 %exitcond159.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !2\l|{<s0>T|<s1>F}}"];
	Node0x564c93d002a0:s0 -> Node0x564c93d00530;
	Node0x564c93d002a0:s1 -> Node0x564c93d00180;
	Node0x564c93d00410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body5:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next,\l... %for.body5 ]\l  %arrayidx = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64\l... 0, i64 %indvars.iv\l  %0 = load float, float* %arrayidx, align 4, !tbaa !4\l  %arrayidx7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv\l  %1 = load float, float* %arrayidx7, align 4, !tbaa !4\l  %arrayidx9 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv\l  %2 = load float, float* %arrayidx9, align 4, !tbaa !4\l  %arrayidx11 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv\l  %3 = load float, float* %arrayidx11, align 4, !tbaa !4\l  %arrayidx13 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv\l  %4 = load float, float* %arrayidx13, align 4, !tbaa !4\l  %arrayidx15 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 0, i64 %indvars.iv\l  %5 = load float, float* %arrayidx15, align 4, !tbaa !4\l  %mul = fmul float %0, %1\l  %mul16 = fmul float %mul, %2\l  %mul18 = fmul float %mul, %3\l  %add = fadd float %mul16, %mul18\l  %mul20 = fmul float %mul, %4\l  %add21 = fadd float %add, %mul20\l  %mul23 = fmul float %mul, %5\l  %add24 = fadd float %add21, %mul23\l  %mul25 = fmul float %0, %2\l  %mul26 = fmul float %mul25, %3\l  %add27 = fadd float %mul26, %add24\l  %mul29 = fmul float %mul25, %4\l  %add30 = fadd float %mul29, %add27\l  %mul32 = fmul float %mul25, %5\l  %add33 = fadd float %mul32, %add30\l  %mul34 = fmul float %0, %3\l  %mul35 = fmul float %mul34, %4\l  %add36 = fadd float %mul35, %add33\l  %mul38 = fmul float %mul34, %5\l  %add39 = fadd float %mul38, %add36\l  %mul40 = fmul float %0, %4\l  %mul41 = fmul float %mul40, %5\l  %add42 = fadd float %mul41, %add39\l  %mul43 = fmul float %1, %2\l  %mul44 = fmul float %mul43, %3\l  %mul46 = fmul float %mul43, %4\l  %add47 = fadd float %mul44, %mul46\l  %mul49 = fmul float %mul43, %5\l  %add50 = fadd float %add47, %mul49\l  %mul51 = fmul float %1, %3\l  %mul52 = fmul float %mul51, %4\l  %add53 = fadd float %mul52, %add50\l  %mul55 = fmul float %mul51, %5\l  %add56 = fadd float %mul55, %add53\l  %mul57 = fmul float %1, %4\l  %mul58 = fmul float %mul57, %5\l  %add59 = fadd float %mul58, %add56\l  %mul60 = fmul float %2, %3\l  %mul61 = fmul float %mul60, %4\l  %mul63 = fmul float %mul60, %5\l  %add64 = fadd float %mul61, %mul63\l  %mul65 = fmul float %2, %4\l  %mul66 = fmul float %mul65, %5\l  %add67 = fadd float %mul66, %add64\l  %mul68 = fmul float %3, %4\l  %mul69 = fmul float %mul68, %5\l  %mul70 = fmul float %add59, %add42\l  %mul71 = fmul float %add67, %mul70\l  %mul72 = fmul float %mul69, %mul71\l  %arrayidx74 = getelementptr inbounds [32000 x float], [32000 x float]* @x,\l... i64 0, i64 %indvars.iv\l  store float %mul72, float* %arrayidx74, align 4, !tbaa !4\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %exitcond.not = icmp eq i64 %indvars.iv.next, 256\l  br i1 %exitcond.not, label %for.cond.cleanup4, label %for.body5, !llvm.loop\l... !8\l|{<s0>T|<s1>F}}"];
	Node0x564c93d00410:s0 -> Node0x564c93d002a0;
	Node0x564c93d00410:s1 -> Node0x564c93d00410;
}
