digraph "CFG for 's3251' function" {
	label="CFG for 's3251' function";

	Node0x564c93ac9a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @__func__.s3251, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c93ac9a30 -> Node0x564c93ac9ed0;
	Node0x564c93ac9ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond2.preheader:                              \l  %nl.045 = phi i32 [ 0, %entry ], [ %inc26, %for.cond.cleanup4 ]\l  %.pre = load float, float* getelementptr inbounds ([32000 x float], [32000 x\l... float]* @a, i64 0, i64 0), align 64, !tbaa !2\l  br label %for.body5\l}"];
	Node0x564c93ac9ed0 -> Node0x564c93aca1f0;
	Node0x564c93aca310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call28 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call29 = tail call float @calc_checksum(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @__func__.s3251, i64 0, i64 0)) #11\l  ret float %call29\l}"];
	Node0x564c93ac9ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond.cleanup4:                                \l  %call24 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc26 = add nuw nsw i32 %nl.045, 1\l  %exitcond.not = icmp eq i32 %inc26, 100000\l  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x564c93ac9ff0:s0 -> Node0x564c93aca310;
	Node0x564c93ac9ff0:s1 -> Node0x564c93ac9ed0;
	Node0x564c93aca1f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body5:                                        \l  %0 = phi float [ %.pre, %for.cond2.preheader ], [ %add.7, %for.body5.7 ]\l  %indvars.iv = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next.7,\l... %for.body5.7 ]\l  %arrayidx = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64\l... 0, i64 %indvars.iv\l  %1 = load float, float* %arrayidx, align 32, !tbaa !2\l  %arrayidx7 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv\l  %2 = load float, float* %arrayidx7, align 32, !tbaa !2\l  %add = fadd float %1, %2\l  %indvars.iv.next = or i64 %indvars.iv, 1\l  %arrayidx10 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next\l  store float %add, float* %arrayidx10, align 4, !tbaa !2\l  %arrayidx14 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv\l  %3 = load float, float* %arrayidx14, align 32, !tbaa !2\l  %mul = fmul float %2, %3\l  store float %mul, float* %arrayidx, align 32, !tbaa !2\l  %mul21 = fmul float %3, %0\l  %arrayidx23 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv\l  store float %mul21, float* %arrayidx23, align 32, !tbaa !2\l  %arrayidx.1 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next\l  %4 = load float, float* %arrayidx.1, align 4, !tbaa !2\l  %arrayidx7.1 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next\l  %5 = load float, float* %arrayidx7.1, align 4, !tbaa !2\l  %add.1 = fadd float %4, %5\l  %indvars.iv.next.1 = or i64 %indvars.iv, 2\l  %arrayidx10.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.1\l  store float %add.1, float* %arrayidx10.1, align 8, !tbaa !2\l  %arrayidx14.1 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next\l  %6 = load float, float* %arrayidx14.1, align 4, !tbaa !2\l  %mul.1 = fmul float %5, %6\l  store float %mul.1, float* %arrayidx.1, align 4, !tbaa !2\l  %mul21.1 = fmul float %6, %add\l  %arrayidx23.1 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next\l  store float %mul21.1, float* %arrayidx23.1, align 4, !tbaa !2\l  %arrayidx.2 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.1\l  %7 = load float, float* %arrayidx.2, align 8, !tbaa !2\l  %arrayidx7.2 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.1\l  %8 = load float, float* %arrayidx7.2, align 8, !tbaa !2\l  %add.2 = fadd float %7, %8\l  %indvars.iv.next.2 = or i64 %indvars.iv, 3\l  %arrayidx10.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.2\l  store float %add.2, float* %arrayidx10.2, align 4, !tbaa !2\l  %arrayidx14.2 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.1\l  %9 = load float, float* %arrayidx14.2, align 8, !tbaa !2\l  %mul.2 = fmul float %8, %9\l  store float %mul.2, float* %arrayidx.2, align 8, !tbaa !2\l  %mul21.2 = fmul float %9, %add.1\l  %arrayidx23.2 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.1\l  store float %mul21.2, float* %arrayidx23.2, align 8, !tbaa !2\l  %arrayidx.3 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.2\l  %10 = load float, float* %arrayidx.3, align 4, !tbaa !2\l  %arrayidx7.3 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.2\l  %11 = load float, float* %arrayidx7.3, align 4, !tbaa !2\l  %add.3 = fadd float %10, %11\l  %indvars.iv.next.3 = or i64 %indvars.iv, 4\l  %arrayidx10.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.3\l  store float %add.3, float* %arrayidx10.3, align 16, !tbaa !2\l  %arrayidx14.3 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.2\l  %12 = load float, float* %arrayidx14.3, align 4, !tbaa !2\l  %mul.3 = fmul float %11, %12\l  store float %mul.3, float* %arrayidx.3, align 4, !tbaa !2\l  %mul21.3 = fmul float %12, %add.2\l  %arrayidx23.3 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.2\l  store float %mul21.3, float* %arrayidx23.3, align 4, !tbaa !2\l  %arrayidx.4 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.3\l  %13 = load float, float* %arrayidx.4, align 16, !tbaa !2\l  %arrayidx7.4 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.3\l  %14 = load float, float* %arrayidx7.4, align 16, !tbaa !2\l  %add.4 = fadd float %13, %14\l  %indvars.iv.next.4 = or i64 %indvars.iv, 5\l  %arrayidx10.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.4\l  store float %add.4, float* %arrayidx10.4, align 4, !tbaa !2\l  %arrayidx14.4 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.3\l  %15 = load float, float* %arrayidx14.4, align 16, !tbaa !2\l  %mul.4 = fmul float %14, %15\l  store float %mul.4, float* %arrayidx.4, align 16, !tbaa !2\l  %mul21.4 = fmul float %15, %add.3\l  %arrayidx23.4 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.3\l  store float %mul21.4, float* %arrayidx23.4, align 16, !tbaa !2\l  %arrayidx.5 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.4\l  %16 = load float, float* %arrayidx.5, align 4, !tbaa !2\l  %arrayidx7.5 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.4\l  %17 = load float, float* %arrayidx7.5, align 4, !tbaa !2\l  %add.5 = fadd float %16, %17\l  %indvars.iv.next.5 = or i64 %indvars.iv, 6\l  %arrayidx10.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.5\l  store float %add.5, float* %arrayidx10.5, align 8, !tbaa !2\l  %arrayidx14.5 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.4\l  %18 = load float, float* %arrayidx14.5, align 4, !tbaa !2\l  %mul.5 = fmul float %17, %18\l  store float %mul.5, float* %arrayidx.5, align 4, !tbaa !2\l  %mul21.5 = fmul float %18, %add.4\l  %arrayidx23.5 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.4\l  store float %mul21.5, float* %arrayidx23.5, align 4, !tbaa !2\l  %arrayidx.6 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.5\l  %19 = load float, float* %arrayidx.6, align 8, !tbaa !2\l  %arrayidx7.6 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.5\l  %20 = load float, float* %arrayidx7.6, align 8, !tbaa !2\l  %add.6 = fadd float %19, %20\l  %indvars.iv.next.6 = or i64 %indvars.iv, 7\l  %arrayidx10.6 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.6\l  store float %add.6, float* %arrayidx10.6, align 4, !tbaa !2\l  %arrayidx14.6 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.5\l  %21 = load float, float* %arrayidx14.6, align 8, !tbaa !2\l  %mul.6 = fmul float %20, %21\l  store float %mul.6, float* %arrayidx.6, align 8, !tbaa !2\l  %mul21.6 = fmul float %21, %add.5\l  %arrayidx23.6 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.5\l  store float %mul21.6, float* %arrayidx23.6, align 8, !tbaa !2\l  %exitcond.6.not = icmp eq i64 %indvars.iv.next.6, 31999\l  br i1 %exitcond.6.not, label %for.cond.cleanup4, label %for.body5.7,\l... !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x564c93aca1f0:s0 -> Node0x564c93ac9ff0;
	Node0x564c93aca1f0:s1 -> Node0x564c93acac70;
	Node0x564c93acac70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body5.7:                                      \l  %arrayidx.7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.6\l  %22 = load float, float* %arrayidx.7, align 4, !tbaa !2\l  %arrayidx7.7 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.6\l  %23 = load float, float* %arrayidx7.7, align 4, !tbaa !2\l  %add.7 = fadd float %22, %23\l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  %arrayidx10.7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.7\l  store float %add.7, float* %arrayidx10.7, align 32, !tbaa !2\l  %arrayidx14.7 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.6\l  %24 = load float, float* %arrayidx14.7, align 4, !tbaa !2\l  %mul.7 = fmul float %23, %24\l  store float %mul.7, float* %arrayidx.7, align 4, !tbaa !2\l  %mul21.7 = fmul float %24, %add.6\l  %arrayidx23.7 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.6\l  store float %mul21.7, float* %arrayidx23.7, align 4, !tbaa !2\l  br label %for.body5, !llvm.loop !10\l}"];
	Node0x564c93acac70 -> Node0x564c93aca1f0;
}
