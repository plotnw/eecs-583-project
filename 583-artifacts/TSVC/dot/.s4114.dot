digraph "CFG for 's4114' function" {
	label="CFG for 's4114' function";

	Node0x564c93ca2d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{entry:\l  %arg_info = getelementptr inbounds %struct.args_t, %struct.args_t*\l... %func_args, i64 0, i32 2\l  %0 = bitcast i8** %arg_info to %struct.anon.3**\l  %1 = load %struct.anon.3*, %struct.anon.3** %0, align 8, !tbaa !2\l  %a = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1, i64 0, i32 0\l  %2 = load i32*, i32** %a, align 8, !tbaa !9\l  %b = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1, i64 0, i32 1\l  %3 = load i32, i32* %b, align 8, !tbaa !12\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @__func__.s4114, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  %cmp340 = icmp slt i32 %3, 32001\l  %4 = add i32 %3, -1\l  %5 = sext i32 %4 to i64\l  %6 = icmp sgt i32 %4, 31999\l  %smax = select i1 %6, i32 %4, i32 31999\l  %7 = add nuw i32 %smax, 2\l  %8 = sub i32 %7, %3\l  %9 = add nuw i32 %smax, 1\l  %10 = sub i32 %9, %3\l  %xtraiter = and i32 %8, 7\l  %lcmp.mod.not = icmp eq i32 %xtraiter, 0\l  %11 = icmp ult i32 %10, 7\l  br label %for.body\l}"];
	Node0x564c93ca2d60 -> Node0x564c93ca3a20;
	Node0x564c93ca4290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call22 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call23 = tail call float @calc_checksum(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @__func__.s4114, i64 0, i64 0)) #11\l  ret float %call23\l}"];
	Node0x564c93ca3a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{for.body:                                         \l  %nl.042 = phi i32 [ 0, %entry ], [ %inc20, %for.cond.cleanup4 ]\l  br i1 %cmp340, label %for.body5.preheader, label %for.cond.cleanup4\l|{<s0>T|<s1>F}}"];
	Node0x564c93ca3a20:s0 -> Node0x564c93ca4810;
	Node0x564c93ca3a20:s1 -> Node0x564c93ca4700;
	Node0x564c93ca4810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.body5.preheader:                              \l  br i1 %lcmp.mod.not, label %for.body5.prol.loopexit, label %for.body5.prol\l|{<s0>T|<s1>F}}"];
	Node0x564c93ca4810:s0 -> Node0x564c93ca49f0;
	Node0x564c93ca4810:s1 -> Node0x564c93ca4a70;
	Node0x564c93ca4a70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body5.prol:                                   \l  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %for.body5.prol ], [ %5,\l... %for.body5.preheader ]\l  %prol.iter = phi i32 [ %prol.iter.sub, %for.body5.prol ], [ %xtraiter,\l... %for.body5.preheader ]\l  %arrayidx.prol = getelementptr inbounds i32, i32* %2, i64 %indvars.iv.prol\l  %12 = load i32, i32* %arrayidx.prol, align 4, !tbaa !13\l  %arrayidx7.prol = getelementptr inbounds [32000 x float], [32000 x float]*\l... @b, i64 0, i64 %indvars.iv.prol\l  %13 = load float, float* %arrayidx7.prol, align 4, !tbaa !14\l  %sub9.prol = sub i32 31999, %12\l  %idxprom10.prol = sext i32 %sub9.prol to i64\l  %arrayidx11.prol = getelementptr inbounds [32000 x float], [32000 x float]*\l... @c, i64 0, i64 %idxprom10.prol\l  %14 = load float, float* %arrayidx11.prol, align 4, !tbaa !14\l  %arrayidx13.prol = getelementptr inbounds [32000 x float], [32000 x float]*\l... @d, i64 0, i64 %indvars.iv.prol\l  %15 = load float, float* %arrayidx13.prol, align 4, !tbaa !14\l  %mul.prol = fmul float %14, %15\l  %add14.prol = fadd float %13, %mul.prol\l  %arrayidx16.prol = getelementptr inbounds [32000 x float], [32000 x float]*\l... @a, i64 0, i64 %indvars.iv.prol\l  store float %add14.prol, float* %arrayidx16.prol, align 4, !tbaa !14\l  %indvars.iv.next.prol = add nsw i64 %indvars.iv.prol, 1\l  %prol.iter.sub = add i32 %prol.iter, -1\l  %prol.iter.cmp.not = icmp eq i32 %prol.iter.sub, 0\l  br i1 %prol.iter.cmp.not, label %for.body5.prol.loopexit, label\l... %for.body5.prol, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x564c93ca4a70:s0 -> Node0x564c93ca49f0;
	Node0x564c93ca4a70:s1 -> Node0x564c93ca4a70;
	Node0x564c93ca49f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.body5.prol.loopexit:                          \l  %indvars.iv.unr = phi i64 [ %5, %for.body5.preheader ], [\l... %indvars.iv.next.prol, %for.body5.prol ]\l  br i1 %11, label %for.cond.cleanup4, label %for.body5\l|{<s0>T|<s1>F}}"];
	Node0x564c93ca49f0:s0 -> Node0x564c93ca4700;
	Node0x564c93ca49f0:s1 -> Node0x564c93b00880;
	Node0x564c93ca4700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{for.cond.cleanup4:                                \l  %call18 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc20 = add nuw nsw i32 %nl.042, 1\l  %exitcond.not = icmp eq i32 %inc20, 100000\l  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x564c93ca4700:s0 -> Node0x564c93ca4290;
	Node0x564c93ca4700:s1 -> Node0x564c93ca3a20;
	Node0x564c93b00880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{for.body5:                                        \l  %indvars.iv = phi i64 [ %indvars.iv.next.7, %for.body5 ], [ %indvars.iv.unr,\l... %for.body5.prol.loopexit ]\l  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %indvars.iv\l  %16 = load i32, i32* %arrayidx, align 4, !tbaa !13\l  %arrayidx7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv\l  %17 = load float, float* %arrayidx7, align 4, !tbaa !14\l  %sub9 = sub i32 31999, %16\l  %idxprom10 = sext i32 %sub9 to i64\l  %arrayidx11 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %idxprom10\l  %18 = load float, float* %arrayidx11, align 4, !tbaa !14\l  %arrayidx13 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv\l  %19 = load float, float* %arrayidx13, align 4, !tbaa !14\l  %mul = fmul float %18, %19\l  %add14 = fadd float %17, %mul\l  %arrayidx16 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv\l  store float %add14, float* %arrayidx16, align 4, !tbaa !14\l  %indvars.iv.next = add nsw i64 %indvars.iv, 1\l  %arrayidx.1 = getelementptr inbounds i32, i32* %2, i64 %indvars.iv.next\l  %20 = load i32, i32* %arrayidx.1, align 4, !tbaa !13\l  %arrayidx7.1 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next\l  %21 = load float, float* %arrayidx7.1, align 4, !tbaa !14\l  %sub9.1 = sub i32 31999, %20\l  %idxprom10.1 = sext i32 %sub9.1 to i64\l  %arrayidx11.1 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %idxprom10.1\l  %22 = load float, float* %arrayidx11.1, align 4, !tbaa !14\l  %arrayidx13.1 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next\l  %23 = load float, float* %arrayidx13.1, align 4, !tbaa !14\l  %mul.1 = fmul float %22, %23\l  %add14.1 = fadd float %21, %mul.1\l  %arrayidx16.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next\l  store float %add14.1, float* %arrayidx16.1, align 4, !tbaa !14\l  %indvars.iv.next.1 = add nsw i64 %indvars.iv, 2\l  %arrayidx.2 = getelementptr inbounds i32, i32* %2, i64 %indvars.iv.next.1\l  %24 = load i32, i32* %arrayidx.2, align 4, !tbaa !13\l  %arrayidx7.2 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.1\l  %25 = load float, float* %arrayidx7.2, align 4, !tbaa !14\l  %sub9.2 = sub i32 31999, %24\l  %idxprom10.2 = sext i32 %sub9.2 to i64\l  %arrayidx11.2 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %idxprom10.2\l  %26 = load float, float* %arrayidx11.2, align 4, !tbaa !14\l  %arrayidx13.2 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.1\l  %27 = load float, float* %arrayidx13.2, align 4, !tbaa !14\l  %mul.2 = fmul float %26, %27\l  %add14.2 = fadd float %25, %mul.2\l  %arrayidx16.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.1\l  store float %add14.2, float* %arrayidx16.2, align 4, !tbaa !14\l  %indvars.iv.next.2 = add nsw i64 %indvars.iv, 3\l  %arrayidx.3 = getelementptr inbounds i32, i32* %2, i64 %indvars.iv.next.2\l  %28 = load i32, i32* %arrayidx.3, align 4, !tbaa !13\l  %arrayidx7.3 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.2\l  %29 = load float, float* %arrayidx7.3, align 4, !tbaa !14\l  %sub9.3 = sub i32 31999, %28\l  %idxprom10.3 = sext i32 %sub9.3 to i64\l  %arrayidx11.3 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %idxprom10.3\l  %30 = load float, float* %arrayidx11.3, align 4, !tbaa !14\l  %arrayidx13.3 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.2\l  %31 = load float, float* %arrayidx13.3, align 4, !tbaa !14\l  %mul.3 = fmul float %30, %31\l  %add14.3 = fadd float %29, %mul.3\l  %arrayidx16.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.2\l  store float %add14.3, float* %arrayidx16.3, align 4, !tbaa !14\l  %indvars.iv.next.3 = add nsw i64 %indvars.iv, 4\l  %arrayidx.4 = getelementptr inbounds i32, i32* %2, i64 %indvars.iv.next.3\l  %32 = load i32, i32* %arrayidx.4, align 4, !tbaa !13\l  %arrayidx7.4 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.3\l  %33 = load float, float* %arrayidx7.4, align 4, !tbaa !14\l  %sub9.4 = sub i32 31999, %32\l  %idxprom10.4 = sext i32 %sub9.4 to i64\l  %arrayidx11.4 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %idxprom10.4\l  %34 = load float, float* %arrayidx11.4, align 4, !tbaa !14\l  %arrayidx13.4 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.3\l  %35 = load float, float* %arrayidx13.4, align 4, !tbaa !14\l  %mul.4 = fmul float %34, %35\l  %add14.4 = fadd float %33, %mul.4\l  %arrayidx16.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.3\l  store float %add14.4, float* %arrayidx16.4, align 4, !tbaa !14\l  %indvars.iv.next.4 = add nsw i64 %indvars.iv, 5\l  %arrayidx.5 = getelementptr inbounds i32, i32* %2, i64 %indvars.iv.next.4\l  %36 = load i32, i32* %arrayidx.5, align 4, !tbaa !13\l  %arrayidx7.5 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.4\l  %37 = load float, float* %arrayidx7.5, align 4, !tbaa !14\l  %sub9.5 = sub i32 31999, %36\l  %idxprom10.5 = sext i32 %sub9.5 to i64\l  %arrayidx11.5 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %idxprom10.5\l  %38 = load float, float* %arrayidx11.5, align 4, !tbaa !14\l  %arrayidx13.5 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.4\l  %39 = load float, float* %arrayidx13.5, align 4, !tbaa !14\l  %mul.5 = fmul float %38, %39\l  %add14.5 = fadd float %37, %mul.5\l  %arrayidx16.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.4\l  store float %add14.5, float* %arrayidx16.5, align 4, !tbaa !14\l  %indvars.iv.next.5 = add nsw i64 %indvars.iv, 6\l  %arrayidx.6 = getelementptr inbounds i32, i32* %2, i64 %indvars.iv.next.5\l  %40 = load i32, i32* %arrayidx.6, align 4, !tbaa !13\l  %arrayidx7.6 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.5\l  %41 = load float, float* %arrayidx7.6, align 4, !tbaa !14\l  %sub9.6 = sub i32 31999, %40\l  %idxprom10.6 = sext i32 %sub9.6 to i64\l  %arrayidx11.6 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %idxprom10.6\l  %42 = load float, float* %arrayidx11.6, align 4, !tbaa !14\l  %arrayidx13.6 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.5\l  %43 = load float, float* %arrayidx13.6, align 4, !tbaa !14\l  %mul.6 = fmul float %42, %43\l  %add14.6 = fadd float %41, %mul.6\l  %arrayidx16.6 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.5\l  store float %add14.6, float* %arrayidx16.6, align 4, !tbaa !14\l  %indvars.iv.next.6 = add nsw i64 %indvars.iv, 7\l  %arrayidx.7 = getelementptr inbounds i32, i32* %2, i64 %indvars.iv.next.6\l  %44 = load i32, i32* %arrayidx.7, align 4, !tbaa !13\l  %arrayidx7.7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.6\l  %45 = load float, float* %arrayidx7.7, align 4, !tbaa !14\l  %sub9.7 = sub i32 31999, %44\l  %idxprom10.7 = sext i32 %sub9.7 to i64\l  %arrayidx11.7 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %idxprom10.7\l  %46 = load float, float* %arrayidx11.7, align 4, !tbaa !14\l  %arrayidx13.7 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.6\l  %47 = load float, float* %arrayidx13.7, align 4, !tbaa !14\l  %mul.7 = fmul float %46, %47\l  %add14.7 = fadd float %45, %mul.7\l  %arrayidx16.7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.6\l  store float %add14.7, float* %arrayidx16.7, align 4, !tbaa !14\l  %indvars.iv.next.7 = add nsw i64 %indvars.iv, 8\l  %cmp3.7 = icmp slt i64 %indvars.iv, 31992\l  br i1 %cmp3.7, label %for.body5, label %for.cond.cleanup4, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x564c93b00880:s0 -> Node0x564c93b00880;
	Node0x564c93b00880:s1 -> Node0x564c93ca4700;
}
