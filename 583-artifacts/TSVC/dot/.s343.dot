digraph "CFG for 's343' function" {
	label="CFG for 's343' function";

	Node0x564c93c17670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s343, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c93c17670 -> Node0x564c93c17b10;
	Node0x564c93c17b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond2.preheader:                              \l  %nl.046 = phi i32 [ 0, %entry ], [ %inc25, %for.cond.cleanup4 ]\l  br label %for.cond6.preheader\l}"];
	Node0x564c93c17b10 -> Node0x564c93c17d40;
	Node0x564c93c17eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call27 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call28 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s343, i64 0, i64 0)) #11\l  ret float %call28\l}"];
	Node0x564c93c17d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.cond6.preheader:                              \l  %indvars.iv47 = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next48,\l... %for.cond.cleanup8 ]\l  %k.044 = phi i32 [ -1, %for.cond2.preheader ], [ %k.2.7, %for.cond.cleanup8 ]\l  br label %for.body9\l}"];
	Node0x564c93c17d40 -> Node0x564c93c187f0;
	Node0x564c93c17c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond.cleanup4:                                \l  %call23 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc25 = add nuw nsw i32 %nl.046, 1\l  %exitcond49.not = icmp eq i32 %inc25, 3900\l  br i1 %exitcond49.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !2\l|{<s0>T|<s1>F}}"];
	Node0x564c93c17c30:s0 -> Node0x564c93c17eb0;
	Node0x564c93c17c30:s1 -> Node0x564c93c17b10;
	Node0x564c93c184c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.cond.cleanup8:                                \l  %indvars.iv.next48 = add nuw nsw i64 %indvars.iv47, 1\l  %exitcond.not = icmp eq i64 %indvars.iv.next48, 256\l  br i1 %exitcond.not, label %for.cond.cleanup4, label %for.cond6.preheader,\l... !llvm.loop !4\l|{<s0>T|<s1>F}}"];
	Node0x564c93c184c0:s0 -> Node0x564c93c17c30;
	Node0x564c93c184c0:s1 -> Node0x564c93c17d40;
	Node0x564c93c187f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body9:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond6.preheader ], [ %indvars.iv.next.7,\l... %for.inc.7 ]\l  %k.142 = phi i32 [ %k.044, %for.cond6.preheader ], [ %k.2.7, %for.inc.7 ]\l  %arrayidx11 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv, i64 %indvars.iv47\l  %0 = load float, float* %arrayidx11, align 4, !tbaa !5\l  %cmp12 = fcmp ogt float %0, 0.000000e+00\l  br i1 %cmp12, label %if.then, label %for.inc\l|{<s0>T|<s1>F}}"];
	Node0x564c93c187f0:s0 -> Node0x564c93c19550;
	Node0x564c93c187f0:s1 -> Node0x564c93c195c0;
	Node0x564c93c19550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.then:                                          \l  %inc = add nsw i32 %k.142, 1\l  %arrayidx16 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv, i64 %indvars.iv47\l  %1 = load float, float* %arrayidx16, align 4, !tbaa !5\l  %idxprom17 = sext i32 %inc to i64\l  %arrayidx18 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %idxprom17\l  store float %1, float* %arrayidx18, align 4, !tbaa !5\l  br label %for.inc\l}"];
	Node0x564c93c19550 -> Node0x564c93c195c0;
	Node0x564c93c195c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc:                                          \l  %k.2 = phi i32 [ %inc, %if.then ], [ %k.142, %for.body9 ]\l  %indvars.iv.next = or i64 %indvars.iv, 1\l  %arrayidx11.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next, i64 %indvars.iv47\l  %2 = load float, float* %arrayidx11.1, align 4, !tbaa !5\l  %cmp12.1 = fcmp ogt float %2, 0.000000e+00\l  br i1 %cmp12.1, label %if.then.1, label %for.inc.1\l|{<s0>T|<s1>F}}"];
	Node0x564c93c195c0:s0 -> Node0x564c93c19d80;
	Node0x564c93c195c0:s1 -> Node0x564c93c19e00;
	Node0x564c93c19d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.then.1:                                        \l  %inc.1 = add nsw i32 %k.2, 1\l  %arrayidx16.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next, i64 %indvars.iv47\l  %3 = load float, float* %arrayidx16.1, align 4, !tbaa !5\l  %idxprom17.1 = sext i32 %inc.1 to i64\l  %arrayidx18.1 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %idxprom17.1\l  store float %3, float* %arrayidx18.1, align 4, !tbaa !5\l  br label %for.inc.1\l}"];
	Node0x564c93c19d80 -> Node0x564c93c19e00;
	Node0x564c93c19e00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.1:                                        \l  %k.2.1 = phi i32 [ %inc.1, %if.then.1 ], [ %k.2, %for.inc ]\l  %indvars.iv.next.1 = or i64 %indvars.iv, 2\l  %arrayidx11.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.1, i64 %indvars.iv47\l  %4 = load float, float* %arrayidx11.2, align 4, !tbaa !5\l  %cmp12.2 = fcmp ogt float %4, 0.000000e+00\l  br i1 %cmp12.2, label %if.then.2, label %for.inc.2\l|{<s0>T|<s1>F}}"];
	Node0x564c93c19e00:s0 -> Node0x564c93c1a6a0;
	Node0x564c93c19e00:s1 -> Node0x564c93c1a6f0;
	Node0x564c93c1a6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.then.2:                                        \l  %inc.2 = add nsw i32 %k.2.1, 1\l  %arrayidx16.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.1, i64 %indvars.iv47\l  %5 = load float, float* %arrayidx16.2, align 4, !tbaa !5\l  %idxprom17.2 = sext i32 %inc.2 to i64\l  %arrayidx18.2 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %idxprom17.2\l  store float %5, float* %arrayidx18.2, align 4, !tbaa !5\l  br label %for.inc.2\l}"];
	Node0x564c93c1a6a0 -> Node0x564c93c1a6f0;
	Node0x564c93c1a6f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.2:                                        \l  %k.2.2 = phi i32 [ %inc.2, %if.then.2 ], [ %k.2.1, %for.inc.1 ]\l  %indvars.iv.next.2 = or i64 %indvars.iv, 3\l  %arrayidx11.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.2, i64 %indvars.iv47\l  %6 = load float, float* %arrayidx11.3, align 4, !tbaa !5\l  %cmp12.3 = fcmp ogt float %6, 0.000000e+00\l  br i1 %cmp12.3, label %if.then.3, label %for.inc.3\l|{<s0>T|<s1>F}}"];
	Node0x564c93c1a6f0:s0 -> Node0x564c93c1b1e0;
	Node0x564c93c1a6f0:s1 -> Node0x564c93c1b230;
	Node0x564c93c1b1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.then.3:                                        \l  %inc.3 = add nsw i32 %k.2.2, 1\l  %arrayidx16.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.2, i64 %indvars.iv47\l  %7 = load float, float* %arrayidx16.3, align 4, !tbaa !5\l  %idxprom17.3 = sext i32 %inc.3 to i64\l  %arrayidx18.3 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %idxprom17.3\l  store float %7, float* %arrayidx18.3, align 4, !tbaa !5\l  br label %for.inc.3\l}"];
	Node0x564c93c1b1e0 -> Node0x564c93c1b230;
	Node0x564c93c1b230 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.3:                                        \l  %k.2.3 = phi i32 [ %inc.3, %if.then.3 ], [ %k.2.2, %for.inc.2 ]\l  %indvars.iv.next.3 = or i64 %indvars.iv, 4\l  %arrayidx11.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.3, i64 %indvars.iv47\l  %8 = load float, float* %arrayidx11.4, align 4, !tbaa !5\l  %cmp12.4 = fcmp ogt float %8, 0.000000e+00\l  br i1 %cmp12.4, label %if.then.4, label %for.inc.4\l|{<s0>T|<s1>F}}"];
	Node0x564c93c1b230:s0 -> Node0x564c93c1a5a0;
	Node0x564c93c1b230:s1 -> Node0x564c93c1bca0;
	Node0x564c93c1a5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.then.4:                                        \l  %inc.4 = add nsw i32 %k.2.3, 1\l  %arrayidx16.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.3, i64 %indvars.iv47\l  %9 = load float, float* %arrayidx16.4, align 4, !tbaa !5\l  %idxprom17.4 = sext i32 %inc.4 to i64\l  %arrayidx18.4 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %idxprom17.4\l  store float %9, float* %arrayidx18.4, align 4, !tbaa !5\l  br label %for.inc.4\l}"];
	Node0x564c93c1a5a0 -> Node0x564c93c1bca0;
	Node0x564c93c1bca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.4:                                        \l  %k.2.4 = phi i32 [ %inc.4, %if.then.4 ], [ %k.2.3, %for.inc.3 ]\l  %indvars.iv.next.4 = or i64 %indvars.iv, 5\l  %arrayidx11.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.4, i64 %indvars.iv47\l  %10 = load float, float* %arrayidx11.5, align 4, !tbaa !5\l  %cmp12.5 = fcmp ogt float %10, 0.000000e+00\l  br i1 %cmp12.5, label %if.then.5, label %for.inc.5\l|{<s0>T|<s1>F}}"];
	Node0x564c93c1bca0:s0 -> Node0x564c93c1c680;
	Node0x564c93c1bca0:s1 -> Node0x564c93c1c6d0;
	Node0x564c93c1c680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.then.5:                                        \l  %inc.5 = add nsw i32 %k.2.4, 1\l  %arrayidx16.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.4, i64 %indvars.iv47\l  %11 = load float, float* %arrayidx16.5, align 4, !tbaa !5\l  %idxprom17.5 = sext i32 %inc.5 to i64\l  %arrayidx18.5 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %idxprom17.5\l  store float %11, float* %arrayidx18.5, align 4, !tbaa !5\l  br label %for.inc.5\l}"];
	Node0x564c93c1c680 -> Node0x564c93c1c6d0;
	Node0x564c93c1c6d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.5:                                        \l  %k.2.5 = phi i32 [ %inc.5, %if.then.5 ], [ %k.2.4, %for.inc.4 ]\l  %indvars.iv.next.5 = or i64 %indvars.iv, 6\l  %arrayidx11.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.5, i64 %indvars.iv47\l  %12 = load float, float* %arrayidx11.6, align 4, !tbaa !5\l  %cmp12.6 = fcmp ogt float %12, 0.000000e+00\l  br i1 %cmp12.6, label %if.then.6, label %for.inc.6\l|{<s0>T|<s1>F}}"];
	Node0x564c93c1c6d0:s0 -> Node0x564c93c1d0b0;
	Node0x564c93c1c6d0:s1 -> Node0x564c93c1d100;
	Node0x564c93c1d0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.then.6:                                        \l  %inc.6 = add nsw i32 %k.2.5, 1\l  %arrayidx16.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.5, i64 %indvars.iv47\l  %13 = load float, float* %arrayidx16.6, align 4, !tbaa !5\l  %idxprom17.6 = sext i32 %inc.6 to i64\l  %arrayidx18.6 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %idxprom17.6\l  store float %13, float* %arrayidx18.6, align 4, !tbaa !5\l  br label %for.inc.6\l}"];
	Node0x564c93c1d0b0 -> Node0x564c93c1d100;
	Node0x564c93c1d100 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.6:                                        \l  %k.2.6 = phi i32 [ %inc.6, %if.then.6 ], [ %k.2.5, %for.inc.5 ]\l  %indvars.iv.next.6 = or i64 %indvars.iv, 7\l  %arrayidx11.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv.next.6, i64 %indvars.iv47\l  %14 = load float, float* %arrayidx11.7, align 4, !tbaa !5\l  %cmp12.7 = fcmp ogt float %14, 0.000000e+00\l  br i1 %cmp12.7, label %if.then.7, label %for.inc.7\l|{<s0>T|<s1>F}}"];
	Node0x564c93c1d100:s0 -> Node0x564c93c1a740;
	Node0x564c93c1d100:s1 -> Node0x564c93c18f80;
	Node0x564c93c1a740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.then.7:                                        \l  %inc.7 = add nsw i32 %k.2.6, 1\l  %arrayidx16.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.6, i64 %indvars.iv47\l  %15 = load float, float* %arrayidx16.7, align 4, !tbaa !5\l  %idxprom17.7 = sext i32 %inc.7 to i64\l  %arrayidx18.7 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %idxprom17.7\l  store float %15, float* %arrayidx18.7, align 4, !tbaa !5\l  br label %for.inc.7\l}"];
	Node0x564c93c1a740 -> Node0x564c93c18f80;
	Node0x564c93c18f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.7:                                        \l  %k.2.7 = phi i32 [ %inc.7, %if.then.7 ], [ %k.2.6, %for.inc.6 ]\l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  %exitcond.7.not = icmp eq i64 %indvars.iv.next.7, 256\l  br i1 %exitcond.7.not, label %for.cond.cleanup8, label %for.body9,\l... !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x564c93c18f80:s0 -> Node0x564c93c184c0;
	Node0x564c93c18f80:s1 -> Node0x564c93c187f0;
}
