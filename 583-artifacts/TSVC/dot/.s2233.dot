digraph "CFG for 's2233' function" {
	label="CFG for 's2233' function";

	Node0x564c93a83a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @__func__.s2233, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c93a83a70 -> Node0x564c93a83f10;
	Node0x564c93a83f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond2.preheader:                              \l  %nl.075 = phi i32 [ 0, %entry ], [ %inc47, %for.cond.cleanup4 ]\l  br label %for.cond6.preheader\l}"];
	Node0x564c93a83f10 -> Node0x564c93a84140;
	Node0x564c93a84250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call49 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call50 = tail call float @calc_checksum(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @__func__.s2233, i64 0, i64 0)) #11\l  ret float %call50\l}"];
	Node0x564c93a84140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.cond6.preheader:                              \l  %indvars.iv80 = phi i64 [ 1, %for.cond2.preheader ], [ %indvars.iv.next81,\l... %for.cond.cleanup23 ]\l  %arrayidx11.phi.trans.insert = getelementptr inbounds [256 x [256 x float]],\l... [256 x [256 x float]]* @aa, i64 0, i64 0, i64 %indvars.iv80\l  %.pre = load float, float* %arrayidx11.phi.trans.insert, align 4, !tbaa !2\l  br label %for.body9\l}"];
	Node0x564c93a84140 -> Node0x564c93a84b50;
	Node0x564c93a84030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond.cleanup4:                                \l  %call45 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc47 = add nuw nsw i32 %nl.075, 1\l  %exitcond83.not = icmp eq i32 %inc47, 39000\l  br i1 %exitcond83.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x564c93a84030:s0 -> Node0x564c93a84250;
	Node0x564c93a84030:s1 -> Node0x564c93a83f10;
	Node0x564c93a84fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.cond21.preheader:                             \l  %0 = add nsw i64 %indvars.iv80, -1\l  br label %for.body24\l}"];
	Node0x564c93a84fe0 -> Node0x564c93a850e0;
	Node0x564c93a84b50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body9:                                        \l  %1 = phi float [ %.pre, %for.cond6.preheader ], [ %add.7, %for.body9.7 ]\l  %indvars.iv = phi i64 [ 1, %for.cond6.preheader ], [ %indvars.iv.next.7,\l... %for.body9.7 ]\l  %arrayidx15 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv, i64 %indvars.iv80\l  %2 = load float, float* %arrayidx15, align 4, !tbaa !2\l  %add = fadd float %1, %2\l  %arrayidx19 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv, i64 %indvars.iv80\l  store float %add, float* %arrayidx19, align 4, !tbaa !2\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %arrayidx15.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv.next, i64 %indvars.iv80\l  %3 = load float, float* %arrayidx15.1, align 4, !tbaa !2\l  %add.1 = fadd float %add, %3\l  %arrayidx19.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next, i64 %indvars.iv80\l  store float %add.1, float* %arrayidx19.1, align 4, !tbaa !2\l  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2\l  %arrayidx15.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv.next.1, i64 %indvars.iv80\l  %4 = load float, float* %arrayidx15.2, align 4, !tbaa !2\l  %add.2 = fadd float %add.1, %4\l  %arrayidx19.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.1, i64 %indvars.iv80\l  store float %add.2, float* %arrayidx19.2, align 4, !tbaa !2\l  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv, 3\l  %arrayidx15.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv.next.2, i64 %indvars.iv80\l  %5 = load float, float* %arrayidx15.3, align 4, !tbaa !2\l  %add.3 = fadd float %add.2, %5\l  %arrayidx19.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.2, i64 %indvars.iv80\l  store float %add.3, float* %arrayidx19.3, align 4, !tbaa !2\l  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4\l  %arrayidx15.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv.next.3, i64 %indvars.iv80\l  %6 = load float, float* %arrayidx15.4, align 4, !tbaa !2\l  %add.4 = fadd float %add.3, %6\l  %arrayidx19.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.3, i64 %indvars.iv80\l  store float %add.4, float* %arrayidx19.4, align 4, !tbaa !2\l  %indvars.iv.next.4 = add nuw nsw i64 %indvars.iv, 5\l  %arrayidx15.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv.next.4, i64 %indvars.iv80\l  %7 = load float, float* %arrayidx15.5, align 4, !tbaa !2\l  %add.5 = fadd float %add.4, %7\l  %arrayidx19.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.4, i64 %indvars.iv80\l  store float %add.5, float* %arrayidx19.5, align 4, !tbaa !2\l  %indvars.iv.next.5 = add nuw nsw i64 %indvars.iv, 6\l  %arrayidx15.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv.next.5, i64 %indvars.iv80\l  %8 = load float, float* %arrayidx15.6, align 4, !tbaa !2\l  %add.6 = fadd float %add.5, %8\l  %arrayidx19.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.5, i64 %indvars.iv80\l  store float %add.6, float* %arrayidx19.6, align 4, !tbaa !2\l  %indvars.iv.next.6 = add nuw nsw i64 %indvars.iv, 7\l  %exitcond.6.not = icmp eq i64 %indvars.iv.next.6, 256\l  br i1 %exitcond.6.not, label %for.cond21.preheader, label %for.body9.7,\l... !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x564c93a84b50:s0 -> Node0x564c93a84fe0;
	Node0x564c93a84b50:s1 -> Node0x564c93a851f0;
	Node0x564c93a848a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.cond.cleanup23:                               \l  %indvars.iv.next81 = add nuw nsw i64 %indvars.iv80, 1\l  %exitcond.not = icmp eq i64 %indvars.iv.next81, 256\l  br i1 %exitcond.not, label %for.cond.cleanup4, label %for.cond6.preheader,\l... !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x564c93a848a0:s0 -> Node0x564c93a84030;
	Node0x564c93a848a0:s1 -> Node0x564c93a84140;
	Node0x564c93a850e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body24:                                       \l  %indvars.iv77 = phi i64 [ 1, %for.cond21.preheader ], [\l... %indvars.iv.next78.7, %for.body24.7 ]\l  %arrayidx29 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %0, i64 %indvars.iv77\l  %9 = load float, float* %arrayidx29, align 4, !tbaa !2\l  %arrayidx33 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv80, i64 %indvars.iv77\l  %10 = load float, float* %arrayidx33, align 4, !tbaa !2\l  %add34 = fadd float %9, %10\l  %arrayidx38 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv80, i64 %indvars.iv77\l  store float %add34, float* %arrayidx38, align 4, !tbaa !2\l  %indvars.iv.next78 = add nuw nsw i64 %indvars.iv77, 1\l  %arrayidx29.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %0, i64 %indvars.iv.next78\l  %11 = load float, float* %arrayidx29.1, align 4, !tbaa !2\l  %arrayidx33.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv80, i64 %indvars.iv.next78\l  %12 = load float, float* %arrayidx33.1, align 4, !tbaa !2\l  %add34.1 = fadd float %11, %12\l  %arrayidx38.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv80, i64 %indvars.iv.next78\l  store float %add34.1, float* %arrayidx38.1, align 4, !tbaa !2\l  %indvars.iv.next78.1 = add nuw nsw i64 %indvars.iv77, 2\l  %arrayidx29.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %0, i64 %indvars.iv.next78.1\l  %13 = load float, float* %arrayidx29.2, align 4, !tbaa !2\l  %arrayidx33.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv80, i64 %indvars.iv.next78.1\l  %14 = load float, float* %arrayidx33.2, align 4, !tbaa !2\l  %add34.2 = fadd float %13, %14\l  %arrayidx38.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv80, i64 %indvars.iv.next78.1\l  store float %add34.2, float* %arrayidx38.2, align 4, !tbaa !2\l  %indvars.iv.next78.2 = add nuw nsw i64 %indvars.iv77, 3\l  %arrayidx29.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %0, i64 %indvars.iv.next78.2\l  %15 = load float, float* %arrayidx29.3, align 4, !tbaa !2\l  %arrayidx33.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv80, i64 %indvars.iv.next78.2\l  %16 = load float, float* %arrayidx33.3, align 4, !tbaa !2\l  %add34.3 = fadd float %15, %16\l  %arrayidx38.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv80, i64 %indvars.iv.next78.2\l  store float %add34.3, float* %arrayidx38.3, align 4, !tbaa !2\l  %indvars.iv.next78.3 = add nuw nsw i64 %indvars.iv77, 4\l  %arrayidx29.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %0, i64 %indvars.iv.next78.3\l  %17 = load float, float* %arrayidx29.4, align 4, !tbaa !2\l  %arrayidx33.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv80, i64 %indvars.iv.next78.3\l  %18 = load float, float* %arrayidx33.4, align 4, !tbaa !2\l  %add34.4 = fadd float %17, %18\l  %arrayidx38.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv80, i64 %indvars.iv.next78.3\l  store float %add34.4, float* %arrayidx38.4, align 4, !tbaa !2\l  %indvars.iv.next78.4 = add nuw nsw i64 %indvars.iv77, 5\l  %arrayidx29.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %0, i64 %indvars.iv.next78.4\l  %19 = load float, float* %arrayidx29.5, align 4, !tbaa !2\l  %arrayidx33.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv80, i64 %indvars.iv.next78.4\l  %20 = load float, float* %arrayidx33.5, align 4, !tbaa !2\l  %add34.5 = fadd float %19, %20\l  %arrayidx38.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv80, i64 %indvars.iv.next78.4\l  store float %add34.5, float* %arrayidx38.5, align 4, !tbaa !2\l  %indvars.iv.next78.5 = add nuw nsw i64 %indvars.iv77, 6\l  %arrayidx29.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %0, i64 %indvars.iv.next78.5\l  %21 = load float, float* %arrayidx29.6, align 4, !tbaa !2\l  %arrayidx33.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv80, i64 %indvars.iv.next78.5\l  %22 = load float, float* %arrayidx33.6, align 4, !tbaa !2\l  %add34.6 = fadd float %21, %22\l  %arrayidx38.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv80, i64 %indvars.iv.next78.5\l  store float %add34.6, float* %arrayidx38.6, align 4, !tbaa !2\l  %indvars.iv.next78.6 = add nuw nsw i64 %indvars.iv77, 7\l  %exitcond.679.not = icmp eq i64 %indvars.iv.next78.6, 256\l  br i1 %exitcond.679.not, label %for.cond.cleanup23, label %for.body24.7,\l... !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x564c93a850e0:s0 -> Node0x564c93a848a0;
	Node0x564c93a850e0:s1 -> Node0x564c93a862e0;
	Node0x564c93a851f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body9.7:                                      \l  %arrayidx15.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv.next.6, i64 %indvars.iv80\l  %23 = load float, float* %arrayidx15.7, align 4, !tbaa !2\l  %add.7 = fadd float %add.6, %23\l  %arrayidx19.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv.next.6, i64 %indvars.iv80\l  store float %add.7, float* %arrayidx19.7, align 4, !tbaa !2\l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  br label %for.body9, !llvm.loop !12\l}"];
	Node0x564c93a851f0 -> Node0x564c93a84b50;
	Node0x564c93a862e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body24.7:                                     \l  %arrayidx29.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %0, i64 %indvars.iv.next78.6\l  %24 = load float, float* %arrayidx29.7, align 4, !tbaa !2\l  %arrayidx33.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv80, i64 %indvars.iv.next78.6\l  %25 = load float, float* %arrayidx33.7, align 4, !tbaa !2\l  %add34.7 = fadd float %24, %25\l  %arrayidx38.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv80, i64 %indvars.iv.next78.6\l  store float %add34.7, float* %arrayidx38.7, align 4, !tbaa !2\l  %indvars.iv.next78.7 = add nuw nsw i64 %indvars.iv77, 8\l  br label %for.body24, !llvm.loop !13\l}"];
	Node0x564c93a862e0 -> Node0x564c93a850e0;
}
