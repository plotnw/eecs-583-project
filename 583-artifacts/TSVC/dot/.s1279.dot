digraph "CFG for 's1279' function" {
	label="CFG for 's1279' function";

	Node0x564c93b6ff50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @__func__.s1279, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c93b6ff50 -> Node0x564c93b703f0;
	Node0x564c93b703f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond2.preheader:                              \l  %nl.038 = phi i32 [ 0, %entry ], [ %inc22, %for.cond.cleanup4 ]\l  br label %for.body5\l}"];
	Node0x564c93b703f0 -> Node0x564c93b70620;
	Node0x564c93b706e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call24 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call25 = tail call float @calc_checksum(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @__func__.s1279, i64 0, i64 0)) #11\l  ret float %call25\l}"];
	Node0x564c93b70510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond.cleanup4:                                \l  %call20 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc22 = add nuw nsw i32 %nl.038, 1\l  %exitcond.not = icmp eq i32 %inc22, 100000\l  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !2\l|{<s0>T|<s1>F}}"];
	Node0x564c93b70510:s0 -> Node0x564c93b706e0;
	Node0x564c93b70510:s1 -> Node0x564c93b703f0;
	Node0x564c93b70620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body5:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next.7,\l... %for.inc.7 ]\l  %arrayidx = getelementptr inbounds [32000 x float], [32000 x float]* @a, i64\l... 0, i64 %indvars.iv\l  %0 = load float, float* %arrayidx, align 32, !tbaa !4\l  %cmp6 = fcmp olt float %0, 0.000000e+00\l  br i1 %cmp6, label %if.then, label %for.inc\l|{<s0>T|<s1>F}}"];
	Node0x564c93b70620:s0 -> Node0x564c93b713c0;
	Node0x564c93b70620:s1 -> Node0x564c93b71430;
	Node0x564c93b713c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then:                                          \l  %arrayidx8 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv\l  %1 = load float, float* %arrayidx8, align 32, !tbaa !4\l  %cmp11 = fcmp ogt float %1, %0\l  br i1 %cmp11, label %if.then12, label %for.inc\l|{<s0>T|<s1>F}}"];
	Node0x564c93b713c0:s0 -> Node0x564c93b717c0;
	Node0x564c93b713c0:s1 -> Node0x564c93b71430;
	Node0x564c93b717c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{if.then12:                                        \l  %arrayidx14 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv\l  %2 = load float, float* %arrayidx14, align 32, !tbaa !4\l  %arrayidx16 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv\l  %3 = load float, float* %arrayidx16, align 32, !tbaa !4\l  %mul = fmul float %2, %3\l  %arrayidx18 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv\l  %4 = load float, float* %arrayidx18, align 32, !tbaa !4\l  %add = fadd float %4, %mul\l  store float %add, float* %arrayidx18, align 32, !tbaa !4\l  br label %for.inc\l}"];
	Node0x564c93b717c0 -> Node0x564c93b71430;
	Node0x564c93b71430 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc:                                          \l  %indvars.iv.next = or i64 %indvars.iv, 1\l  %arrayidx.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next\l  %5 = load float, float* %arrayidx.1, align 4, !tbaa !4\l  %cmp6.1 = fcmp olt float %5, 0.000000e+00\l  br i1 %cmp6.1, label %if.then.1, label %for.inc.1\l|{<s0>T|<s1>F}}"];
	Node0x564c93b71430:s0 -> Node0x564c93b72590;
	Node0x564c93b71430:s1 -> Node0x564c93b72610;
	Node0x564c93b72590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then.1:                                        \l  %arrayidx8.1 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next\l  %6 = load float, float* %arrayidx8.1, align 4, !tbaa !4\l  %cmp11.1 = fcmp ogt float %6, %5\l  br i1 %cmp11.1, label %if.then12.1, label %for.inc.1\l|{<s0>T|<s1>F}}"];
	Node0x564c93b72590:s0 -> Node0x564c93b72950;
	Node0x564c93b72590:s1 -> Node0x564c93b72610;
	Node0x564c93b72950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{if.then12.1:                                      \l  %arrayidx14.1 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next\l  %7 = load float, float* %arrayidx14.1, align 4, !tbaa !4\l  %arrayidx16.1 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next\l  %8 = load float, float* %arrayidx16.1, align 4, !tbaa !4\l  %mul.1 = fmul float %7, %8\l  %arrayidx18.1 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next\l  %9 = load float, float* %arrayidx18.1, align 4, !tbaa !4\l  %add.1 = fadd float %9, %mul.1\l  store float %add.1, float* %arrayidx18.1, align 4, !tbaa !4\l  br label %for.inc.1\l}"];
	Node0x564c93b72950 -> Node0x564c93b72610;
	Node0x564c93b72610 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.1:                                        \l  %indvars.iv.next.1 = or i64 %indvars.iv, 2\l  %arrayidx.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.1\l  %10 = load float, float* %arrayidx.2, align 8, !tbaa !4\l  %cmp6.2 = fcmp olt float %10, 0.000000e+00\l  br i1 %cmp6.2, label %if.then.2, label %for.inc.2\l|{<s0>T|<s1>F}}"];
	Node0x564c93b72610:s0 -> Node0x564c93b720f0;
	Node0x564c93b72610:s1 -> Node0x564c93b734c0;
	Node0x564c93b720f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then.2:                                        \l  %arrayidx8.2 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.1\l  %11 = load float, float* %arrayidx8.2, align 8, !tbaa !4\l  %cmp11.2 = fcmp ogt float %11, %10\l  br i1 %cmp11.2, label %if.then12.2, label %for.inc.2\l|{<s0>T|<s1>F}}"];
	Node0x564c93b720f0:s0 -> Node0x564c93b71960;
	Node0x564c93b720f0:s1 -> Node0x564c93b734c0;
	Node0x564c93b71960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{if.then12.2:                                      \l  %arrayidx14.2 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.1\l  %12 = load float, float* %arrayidx14.2, align 8, !tbaa !4\l  %arrayidx16.2 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.1\l  %13 = load float, float* %arrayidx16.2, align 8, !tbaa !4\l  %mul.2 = fmul float %12, %13\l  %arrayidx18.2 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.1\l  %14 = load float, float* %arrayidx18.2, align 8, !tbaa !4\l  %add.2 = fadd float %14, %mul.2\l  store float %add.2, float* %arrayidx18.2, align 8, !tbaa !4\l  br label %for.inc.2\l}"];
	Node0x564c93b71960 -> Node0x564c93b734c0;
	Node0x564c93b734c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.2:                                        \l  %indvars.iv.next.2 = or i64 %indvars.iv, 3\l  %arrayidx.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.2\l  %15 = load float, float* %arrayidx.3, align 4, !tbaa !4\l  %cmp6.3 = fcmp olt float %15, 0.000000e+00\l  br i1 %cmp6.3, label %if.then.3, label %for.inc.3\l|{<s0>T|<s1>F}}"];
	Node0x564c93b734c0:s0 -> Node0x564c93b745b0;
	Node0x564c93b734c0:s1 -> Node0x564c93b74600;
	Node0x564c93b745b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then.3:                                        \l  %arrayidx8.3 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.2\l  %16 = load float, float* %arrayidx8.3, align 4, !tbaa !4\l  %cmp11.3 = fcmp ogt float %16, %15\l  br i1 %cmp11.3, label %if.then12.3, label %for.inc.3\l|{<s0>T|<s1>F}}"];
	Node0x564c93b745b0:s0 -> Node0x564c93b748b0;
	Node0x564c93b745b0:s1 -> Node0x564c93b74600;
	Node0x564c93b748b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{if.then12.3:                                      \l  %arrayidx14.3 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.2\l  %17 = load float, float* %arrayidx14.3, align 4, !tbaa !4\l  %arrayidx16.3 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.2\l  %18 = load float, float* %arrayidx16.3, align 4, !tbaa !4\l  %mul.3 = fmul float %17, %18\l  %arrayidx18.3 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.2\l  %19 = load float, float* %arrayidx18.3, align 4, !tbaa !4\l  %add.3 = fadd float %19, %mul.3\l  store float %add.3, float* %arrayidx18.3, align 4, !tbaa !4\l  br label %for.inc.3\l}"];
	Node0x564c93b748b0 -> Node0x564c93b74600;
	Node0x564c93b74600 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.3:                                        \l  %indvars.iv.next.3 = or i64 %indvars.iv, 4\l  %arrayidx.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.3\l  %20 = load float, float* %arrayidx.4, align 16, !tbaa !4\l  %cmp6.4 = fcmp olt float %20, 0.000000e+00\l  br i1 %cmp6.4, label %if.then.4, label %for.inc.4\l|{<s0>T|<s1>F}}"];
	Node0x564c93b74600:s0 -> Node0x564c93b75360;
	Node0x564c93b74600:s1 -> Node0x564c93b753b0;
	Node0x564c93b75360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then.4:                                        \l  %arrayidx8.4 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.3\l  %21 = load float, float* %arrayidx8.4, align 16, !tbaa !4\l  %cmp11.4 = fcmp ogt float %21, %20\l  br i1 %cmp11.4, label %if.then12.4, label %for.inc.4\l|{<s0>T|<s1>F}}"];
	Node0x564c93b75360:s0 -> Node0x564c93b756f0;
	Node0x564c93b75360:s1 -> Node0x564c93b753b0;
	Node0x564c93b756f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{if.then12.4:                                      \l  %arrayidx14.4 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.3\l  %22 = load float, float* %arrayidx14.4, align 16, !tbaa !4\l  %arrayidx16.4 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.3\l  %23 = load float, float* %arrayidx16.4, align 16, !tbaa !4\l  %mul.4 = fmul float %22, %23\l  %arrayidx18.4 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.3\l  %24 = load float, float* %arrayidx18.4, align 16, !tbaa !4\l  %add.4 = fadd float %24, %mul.4\l  store float %add.4, float* %arrayidx18.4, align 16, !tbaa !4\l  br label %for.inc.4\l}"];
	Node0x564c93b756f0 -> Node0x564c93b753b0;
	Node0x564c93b753b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.4:                                        \l  %indvars.iv.next.4 = or i64 %indvars.iv, 5\l  %arrayidx.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.4\l  %25 = load float, float* %arrayidx.5, align 4, !tbaa !4\l  %cmp6.5 = fcmp olt float %25, 0.000000e+00\l  br i1 %cmp6.5, label %if.then.5, label %for.inc.5\l|{<s0>T|<s1>F}}"];
	Node0x564c93b753b0:s0 -> Node0x564c93b761a0;
	Node0x564c93b753b0:s1 -> Node0x564c93b761f0;
	Node0x564c93b761a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then.5:                                        \l  %arrayidx8.5 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.4\l  %26 = load float, float* %arrayidx8.5, align 4, !tbaa !4\l  %cmp11.5 = fcmp ogt float %26, %25\l  br i1 %cmp11.5, label %if.then12.5, label %for.inc.5\l|{<s0>T|<s1>F}}"];
	Node0x564c93b761a0:s0 -> Node0x564c93b76530;
	Node0x564c93b761a0:s1 -> Node0x564c93b761f0;
	Node0x564c93b76530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{if.then12.5:                                      \l  %arrayidx14.5 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.4\l  %27 = load float, float* %arrayidx14.5, align 4, !tbaa !4\l  %arrayidx16.5 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.4\l  %28 = load float, float* %arrayidx16.5, align 4, !tbaa !4\l  %mul.5 = fmul float %27, %28\l  %arrayidx18.5 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.4\l  %29 = load float, float* %arrayidx18.5, align 4, !tbaa !4\l  %add.5 = fadd float %29, %mul.5\l  store float %add.5, float* %arrayidx18.5, align 4, !tbaa !4\l  br label %for.inc.5\l}"];
	Node0x564c93b76530 -> Node0x564c93b761f0;
	Node0x564c93b761f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.5:                                        \l  %indvars.iv.next.5 = or i64 %indvars.iv, 6\l  %arrayidx.6 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.5\l  %30 = load float, float* %arrayidx.6, align 8, !tbaa !4\l  %cmp6.6 = fcmp olt float %30, 0.000000e+00\l  br i1 %cmp6.6, label %if.then.6, label %for.inc.6\l|{<s0>T|<s1>F}}"];
	Node0x564c93b761f0:s0 -> Node0x564c93b73800;
	Node0x564c93b761f0:s1 -> Node0x564c93b73850;
	Node0x564c93b73800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then.6:                                        \l  %arrayidx8.6 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.5\l  %31 = load float, float* %arrayidx8.6, align 8, !tbaa !4\l  %cmp11.6 = fcmp ogt float %31, %30\l  br i1 %cmp11.6, label %if.then12.6, label %for.inc.6\l|{<s0>T|<s1>F}}"];
	Node0x564c93b73800:s0 -> Node0x564c93b73b90;
	Node0x564c93b73800:s1 -> Node0x564c93b73850;
	Node0x564c93b73b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{if.then12.6:                                      \l  %arrayidx14.6 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.5\l  %32 = load float, float* %arrayidx14.6, align 8, !tbaa !4\l  %arrayidx16.6 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.5\l  %33 = load float, float* %arrayidx16.6, align 8, !tbaa !4\l  %mul.6 = fmul float %32, %33\l  %arrayidx18.6 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.5\l  %34 = load float, float* %arrayidx18.6, align 8, !tbaa !4\l  %add.6 = fadd float %34, %mul.6\l  store float %add.6, float* %arrayidx18.6, align 8, !tbaa !4\l  br label %for.inc.6\l}"];
	Node0x564c93b73b90 -> Node0x564c93b73850;
	Node0x564c93b73850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.6:                                        \l  %indvars.iv.next.6 = or i64 %indvars.iv, 7\l  %arrayidx.7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.6\l  %35 = load float, float* %arrayidx.7, align 4, !tbaa !4\l  %cmp6.7 = fcmp olt float %35, 0.000000e+00\l  br i1 %cmp6.7, label %if.then.7, label %for.inc.7\l|{<s0>T|<s1>F}}"];
	Node0x564c93b73850:s0 -> Node0x564c93b78460;
	Node0x564c93b73850:s1 -> Node0x564c93b710c0;
	Node0x564c93b78460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then.7:                                        \l  %arrayidx8.7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.6\l  %36 = load float, float* %arrayidx8.7, align 4, !tbaa !4\l  %cmp11.7 = fcmp ogt float %36, %35\l  br i1 %cmp11.7, label %if.then12.7, label %for.inc.7\l|{<s0>T|<s1>F}}"];
	Node0x564c93b78460:s0 -> Node0x564c93b78770;
	Node0x564c93b78460:s1 -> Node0x564c93b710c0;
	Node0x564c93b78770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{if.then12.7:                                      \l  %arrayidx14.7 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.6\l  %37 = load float, float* %arrayidx14.7, align 4, !tbaa !4\l  %arrayidx16.7 = getelementptr inbounds [32000 x float], [32000 x float]* @e,\l... i64 0, i64 %indvars.iv.next.6\l  %38 = load float, float* %arrayidx16.7, align 4, !tbaa !4\l  %mul.7 = fmul float %37, %38\l  %arrayidx18.7 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.6\l  %39 = load float, float* %arrayidx18.7, align 4, !tbaa !4\l  %add.7 = fadd float %39, %mul.7\l  store float %add.7, float* %arrayidx18.7, align 4, !tbaa !4\l  br label %for.inc.7\l}"];
	Node0x564c93b78770 -> Node0x564c93b710c0;
	Node0x564c93b710c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.7:                                        \l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  %exitcond.7.not = icmp eq i64 %indvars.iv.next.7, 32000\l  br i1 %exitcond.7.not, label %for.cond.cleanup4, label %for.body5,\l... !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x564c93b710c0:s0 -> Node0x564c93b70510;
	Node0x564c93b710c0:s1 -> Node0x564c93b70620;
}
