digraph "CFG for 's122' function" {
	label="CFG for 's122' function";

	Node0x564c939a06a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{entry:\l  %arg_info = getelementptr inbounds %struct.args_t, %struct.args_t*\l... %func_args, i64 0, i32 2\l  %0 = bitcast i8** %arg_info to %struct.anon**\l  %1 = load %struct.anon*, %struct.anon** %0, align 8, !tbaa !2\l  %a = getelementptr inbounds %struct.anon, %struct.anon* %1, i64 0, i32 0\l  %2 = load i32, i32* %a, align 4, !tbaa !9\l  %b = getelementptr inbounds %struct.anon, %struct.anon* %1, i64 0, i32 1\l  %3 = load i32, i32* %b, align 4, !tbaa !12\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s122, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  %cmp330 = icmp slt i32 %2, 32001\l  %4 = add i32 %2, -1\l  %5 = sext i32 %4 to i64\l  %6 = sext i32 %3 to i64\l  %7 = add i32 %2, %3\l  %8 = add i32 %7, -1\l  %9 = icmp sgt i32 %8, 32000\l  %smax = select i1 %9, i32 %8, i32 32000\l  %10 = sub i32 %smax, %2\l  br label %for.body\l}"];
	Node0x564c939a06a0 -> Node0x564c939a14c0;
	Node0x564c939a1a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call14 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call15 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s122, i64 0, i64 0)) #11\l  ret float %call15\l}"];
	Node0x564c939a14c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{for.body:                                         \l  %nl.033 = phi i32 [ 0, %entry ], [ %inc, %for.cond.cleanup4 ]\l  br i1 %cmp330, label %for.body5.preheader, label %for.cond.cleanup4\l|{<s0>T|<s1>F}}"];
	Node0x564c939a14c0:s0 -> Node0x564c939a2180;
	Node0x564c939a14c0:s1 -> Node0x564c939a2070;
	Node0x564c939a2180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.body5.preheader:                              \l  %11 = udiv i32 %10, %3\l  %12 = add i32 %11, 1\l  %xtraiter = and i32 %12, 7\l  %13 = icmp ult i32 %11, 7\l  br i1 %13, label %for.cond.cleanup4.loopexit.unr-lcssa, label\l... %for.body5.preheader.new\l|{<s0>T|<s1>F}}"];
	Node0x564c939a2180:s0 -> Node0x564c939a25d0;
	Node0x564c939a2180:s1 -> Node0x564c939a2690;
	Node0x564c939a2690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{for.body5.preheader.new:                          \l  %unroll_iter = and i32 %12, -8\l  br label %for.body5\l}"];
	Node0x564c939a2690 -> Node0x564c939481d0;
	Node0x564c939a25d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond.cleanup4.loopexit.unr-lcssa:             \l  %indvars.iv34.unr = phi i64 [ 0, %for.body5.preheader ], [\l... %indvars.iv.next35.7, %for.body5 ]\l  %indvars.iv.unr = phi i64 [ %5, %for.body5.preheader ], [\l... %indvars.iv.next.7, %for.body5 ]\l  %lcmp.mod.not = icmp eq i32 %xtraiter, 0\l  br i1 %lcmp.mod.not, label %for.cond.cleanup4, label %for.body5.epil\l|{<s0>T|<s1>F}}"];
	Node0x564c939a25d0:s0 -> Node0x564c939a2070;
	Node0x564c939a25d0:s1 -> Node0x564c939a3750;
	Node0x564c939a3750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body5.epil:                                   \l  %indvars.iv34.epil = phi i64 [ %indvars.iv.next35.epil, %for.body5.epil ], [\l... %indvars.iv34.unr, %for.cond.cleanup4.loopexit.unr-lcssa ]\l  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body5.epil ], [\l... %indvars.iv.unr, %for.cond.cleanup4.loopexit.unr-lcssa ]\l  %epil.iter = phi i32 [ %epil.iter.sub, %for.body5.epil ], [ %xtraiter,\l... %for.cond.cleanup4.loopexit.unr-lcssa ]\l  %indvars.iv.next35.epil = add nuw nsw i64 %indvars.iv34.epil, 1\l  %14 = sub nsw i64 31999, %indvars.iv34.epil\l  %arrayidx.epil = getelementptr inbounds [32000 x float], [32000 x float]*\l... @b, i64 0, i64 %14\l  %15 = load float, float* %arrayidx.epil, align 4, !tbaa !13\l  %arrayidx8.epil = getelementptr inbounds [32000 x float], [32000 x float]*\l... @a, i64 0, i64 %indvars.iv.epil\l  %16 = load float, float* %arrayidx8.epil, align 4, !tbaa !13\l  %add9.epil = fadd float %15, %16\l  store float %add9.epil, float* %arrayidx8.epil, align 4, !tbaa !13\l  %indvars.iv.next.epil = add i64 %indvars.iv.epil, %6\l  %epil.iter.sub = add i32 %epil.iter, -1\l  %epil.iter.cmp.not = icmp eq i32 %epil.iter.sub, 0\l  br i1 %epil.iter.cmp.not, label %for.cond.cleanup4, label %for.body5.epil,\l... !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x564c939a3750:s0 -> Node0x564c939a2070;
	Node0x564c939a3750:s1 -> Node0x564c939a3750;
	Node0x564c939a2070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{for.cond.cleanup4:                                \l  %call11 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc = add nuw nsw i32 %nl.033, 1\l  %exitcond.not = icmp eq i32 %inc, 100000\l  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x564c939a2070:s0 -> Node0x564c939a1a30;
	Node0x564c939a2070:s1 -> Node0x564c939a14c0;
	Node0x564c939481d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{for.body5:                                        \l  %indvars.iv34 = phi i64 [ 0, %for.body5.preheader.new ], [\l... %indvars.iv.next35.7, %for.body5 ]\l  %indvars.iv = phi i64 [ %5, %for.body5.preheader.new ], [\l... %indvars.iv.next.7, %for.body5 ]\l  %niter = phi i32 [ %unroll_iter, %for.body5.preheader.new ], [\l... %niter.nsub.7, %for.body5 ]\l  %17 = sub nsw i64 31999, %indvars.iv34\l  %arrayidx = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64\l... 0, i64 %17\l  %18 = load float, float* %arrayidx, align 4, !tbaa !13\l  %arrayidx8 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv\l  %19 = load float, float* %arrayidx8, align 4, !tbaa !13\l  %add9 = fadd float %18, %19\l  store float %add9, float* %arrayidx8, align 4, !tbaa !13\l  %indvars.iv.next = add i64 %indvars.iv, %6\l  %20 = sub nsw i64 31998, %indvars.iv34\l  %arrayidx.1 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %20\l  %21 = load float, float* %arrayidx.1, align 8, !tbaa !13\l  %arrayidx8.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next\l  %22 = load float, float* %arrayidx8.1, align 4, !tbaa !13\l  %add9.1 = fadd float %21, %22\l  store float %add9.1, float* %arrayidx8.1, align 4, !tbaa !13\l  %indvars.iv.next.1 = add i64 %indvars.iv.next, %6\l  %23 = sub nsw i64 31997, %indvars.iv34\l  %arrayidx.2 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %23\l  %24 = load float, float* %arrayidx.2, align 4, !tbaa !13\l  %arrayidx8.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.1\l  %25 = load float, float* %arrayidx8.2, align 4, !tbaa !13\l  %add9.2 = fadd float %24, %25\l  store float %add9.2, float* %arrayidx8.2, align 4, !tbaa !13\l  %indvars.iv.next.2 = add i64 %indvars.iv.next.1, %6\l  %26 = sub nsw i64 31996, %indvars.iv34\l  %arrayidx.3 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %26\l  %27 = load float, float* %arrayidx.3, align 16, !tbaa !13\l  %arrayidx8.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.2\l  %28 = load float, float* %arrayidx8.3, align 4, !tbaa !13\l  %add9.3 = fadd float %27, %28\l  store float %add9.3, float* %arrayidx8.3, align 4, !tbaa !13\l  %indvars.iv.next.3 = add i64 %indvars.iv.next.2, %6\l  %29 = sub nsw i64 31995, %indvars.iv34\l  %arrayidx.4 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %29\l  %30 = load float, float* %arrayidx.4, align 4, !tbaa !13\l  %arrayidx8.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.3\l  %31 = load float, float* %arrayidx8.4, align 4, !tbaa !13\l  %add9.4 = fadd float %30, %31\l  store float %add9.4, float* %arrayidx8.4, align 4, !tbaa !13\l  %indvars.iv.next.4 = add i64 %indvars.iv.next.3, %6\l  %32 = sub nsw i64 31994, %indvars.iv34\l  %arrayidx.5 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %32\l  %33 = load float, float* %arrayidx.5, align 8, !tbaa !13\l  %arrayidx8.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.4\l  %34 = load float, float* %arrayidx8.5, align 4, !tbaa !13\l  %add9.5 = fadd float %33, %34\l  store float %add9.5, float* %arrayidx8.5, align 4, !tbaa !13\l  %indvars.iv.next.5 = add i64 %indvars.iv.next.4, %6\l  %indvars.iv.next35.6 = or i64 %indvars.iv34, 7\l  %35 = sub nsw i64 31993, %indvars.iv34\l  %arrayidx.6 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %35\l  %36 = load float, float* %arrayidx.6, align 4, !tbaa !13\l  %arrayidx8.6 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.5\l  %37 = load float, float* %arrayidx8.6, align 4, !tbaa !13\l  %add9.6 = fadd float %36, %37\l  store float %add9.6, float* %arrayidx8.6, align 4, !tbaa !13\l  %indvars.iv.next.6 = add i64 %indvars.iv.next.5, %6\l  %indvars.iv.next35.7 = add nuw nsw i64 %indvars.iv34, 8\l  %38 = sub nsw i64 31999, %indvars.iv.next35.6\l  %arrayidx.7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %38\l  %39 = load float, float* %arrayidx.7, align 32, !tbaa !13\l  %arrayidx8.7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.6\l  %40 = load float, float* %arrayidx8.7, align 4, !tbaa !13\l  %add9.7 = fadd float %39, %40\l  store float %add9.7, float* %arrayidx8.7, align 4, !tbaa !13\l  %indvars.iv.next.7 = add i64 %indvars.iv.next.6, %6\l  %niter.nsub.7 = add i32 %niter, -8\l  %niter.ncmp.7.not = icmp eq i32 %niter.nsub.7, 0\l  br i1 %niter.ncmp.7.not, label %for.cond.cleanup4.loopexit.unr-lcssa, label\l... %for.body5, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x564c939481d0:s0 -> Node0x564c939a25d0;
	Node0x564c939481d0:s1 -> Node0x564c939481d0;
}
