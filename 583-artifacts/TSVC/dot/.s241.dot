digraph "CFG for 's241' function" {
	label="CFG for 's241' function";

	Node0x564c93a1a210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s241, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c93a1a210 -> Node0x564c93a1e010;
	Node0x564c93a1e010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond2.preheader:                              \l  %nl.043 = phi i32 [ 0, %entry ], [ %inc25, %for.cond.cleanup4 ]\l  br label %for.body5\l}"];
	Node0x564c93a1e010 -> Node0x564c93a1e240;
	Node0x564c93a1e360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call27 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call28 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s241, i64 0, i64 0)) #11\l  ret float %call28\l}"];
	Node0x564c93a1e130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond.cleanup4:                                \l  %call23 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc25 = add nuw nsw i32 %nl.043, 1\l  %exitcond.not = icmp eq i32 %inc25, 200000\l  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !2\l|{<s0>T|<s1>F}}"];
	Node0x564c93a1e130:s0 -> Node0x564c93a1e360;
	Node0x564c93a1e130:s1 -> Node0x564c93a1e010;
	Node0x564c93a1e240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body5:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next.7,\l... %for.body5.7 ]\l  %arrayidx = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64\l... 0, i64 %indvars.iv\l  %0 = load float, float* %arrayidx, align 32, !tbaa !4\l  %arrayidx7 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv\l  %1 = load float, float* %arrayidx7, align 32, !tbaa !4\l  %mul = fmul float %0, %1\l  %arrayidx9 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv\l  %2 = load float, float* %arrayidx9, align 32, !tbaa !4\l  %mul10 = fmul float %mul, %2\l  %arrayidx12 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv\l  store float %mul10, float* %arrayidx12, align 32, !tbaa !4\l  %indvars.iv.next = or i64 %indvars.iv, 1\l  %arrayidx16 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next\l  %3 = load float, float* %arrayidx16, align 4, !tbaa !4\l  %mul17 = fmul float %mul10, %3\l  %mul20 = fmul float %2, %mul17\l  store float %mul20, float* %arrayidx, align 32, !tbaa !4\l  %arrayidx.1 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next\l  %4 = load float, float* %arrayidx.1, align 4, !tbaa !4\l  %arrayidx7.1 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next\l  %5 = load float, float* %arrayidx7.1, align 4, !tbaa !4\l  %mul.1 = fmul float %4, %5\l  %arrayidx9.1 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next\l  %6 = load float, float* %arrayidx9.1, align 4, !tbaa !4\l  %mul10.1 = fmul float %mul.1, %6\l  store float %mul10.1, float* %arrayidx16, align 4, !tbaa !4\l  %indvars.iv.next.1 = or i64 %indvars.iv, 2\l  %arrayidx16.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.1\l  %7 = load float, float* %arrayidx16.1, align 8, !tbaa !4\l  %mul17.1 = fmul float %mul10.1, %7\l  %mul20.1 = fmul float %6, %mul17.1\l  store float %mul20.1, float* %arrayidx.1, align 4, !tbaa !4\l  %arrayidx.2 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.1\l  %8 = load float, float* %arrayidx.2, align 8, !tbaa !4\l  %arrayidx7.2 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.1\l  %9 = load float, float* %arrayidx7.2, align 8, !tbaa !4\l  %mul.2 = fmul float %8, %9\l  %arrayidx9.2 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.1\l  %10 = load float, float* %arrayidx9.2, align 8, !tbaa !4\l  %mul10.2 = fmul float %mul.2, %10\l  store float %mul10.2, float* %arrayidx16.1, align 8, !tbaa !4\l  %indvars.iv.next.2 = or i64 %indvars.iv, 3\l  %arrayidx16.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.2\l  %11 = load float, float* %arrayidx16.2, align 4, !tbaa !4\l  %mul17.2 = fmul float %mul10.2, %11\l  %mul20.2 = fmul float %10, %mul17.2\l  store float %mul20.2, float* %arrayidx.2, align 8, !tbaa !4\l  %arrayidx.3 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.2\l  %12 = load float, float* %arrayidx.3, align 4, !tbaa !4\l  %arrayidx7.3 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.2\l  %13 = load float, float* %arrayidx7.3, align 4, !tbaa !4\l  %mul.3 = fmul float %12, %13\l  %arrayidx9.3 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.2\l  %14 = load float, float* %arrayidx9.3, align 4, !tbaa !4\l  %mul10.3 = fmul float %mul.3, %14\l  store float %mul10.3, float* %arrayidx16.2, align 4, !tbaa !4\l  %indvars.iv.next.3 = or i64 %indvars.iv, 4\l  %arrayidx16.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.3\l  %15 = load float, float* %arrayidx16.3, align 16, !tbaa !4\l  %mul17.3 = fmul float %mul10.3, %15\l  %mul20.3 = fmul float %14, %mul17.3\l  store float %mul20.3, float* %arrayidx.3, align 4, !tbaa !4\l  %arrayidx.4 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.3\l  %16 = load float, float* %arrayidx.4, align 16, !tbaa !4\l  %arrayidx7.4 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.3\l  %17 = load float, float* %arrayidx7.4, align 16, !tbaa !4\l  %mul.4 = fmul float %16, %17\l  %arrayidx9.4 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.3\l  %18 = load float, float* %arrayidx9.4, align 16, !tbaa !4\l  %mul10.4 = fmul float %mul.4, %18\l  store float %mul10.4, float* %arrayidx16.3, align 16, !tbaa !4\l  %indvars.iv.next.4 = or i64 %indvars.iv, 5\l  %arrayidx16.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.4\l  %19 = load float, float* %arrayidx16.4, align 4, !tbaa !4\l  %mul17.4 = fmul float %mul10.4, %19\l  %mul20.4 = fmul float %18, %mul17.4\l  store float %mul20.4, float* %arrayidx.4, align 16, !tbaa !4\l  %arrayidx.5 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.4\l  %20 = load float, float* %arrayidx.5, align 4, !tbaa !4\l  %arrayidx7.5 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.4\l  %21 = load float, float* %arrayidx7.5, align 4, !tbaa !4\l  %mul.5 = fmul float %20, %21\l  %arrayidx9.5 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.4\l  %22 = load float, float* %arrayidx9.5, align 4, !tbaa !4\l  %mul10.5 = fmul float %mul.5, %22\l  store float %mul10.5, float* %arrayidx16.4, align 4, !tbaa !4\l  %indvars.iv.next.5 = or i64 %indvars.iv, 6\l  %arrayidx16.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.5\l  %23 = load float, float* %arrayidx16.5, align 8, !tbaa !4\l  %mul17.5 = fmul float %mul10.5, %23\l  %mul20.5 = fmul float %22, %mul17.5\l  store float %mul20.5, float* %arrayidx.5, align 4, !tbaa !4\l  %arrayidx.6 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.5\l  %24 = load float, float* %arrayidx.6, align 8, !tbaa !4\l  %arrayidx7.6 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.5\l  %25 = load float, float* %arrayidx7.6, align 8, !tbaa !4\l  %mul.6 = fmul float %24, %25\l  %arrayidx9.6 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.5\l  %26 = load float, float* %arrayidx9.6, align 8, !tbaa !4\l  %mul10.6 = fmul float %mul.6, %26\l  store float %mul10.6, float* %arrayidx16.5, align 8, !tbaa !4\l  %indvars.iv.next.6 = or i64 %indvars.iv, 7\l  %arrayidx16.6 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.6\l  %27 = load float, float* %arrayidx16.6, align 4, !tbaa !4\l  %mul17.6 = fmul float %mul10.6, %27\l  %mul20.6 = fmul float %26, %mul17.6\l  store float %mul20.6, float* %arrayidx.6, align 8, !tbaa !4\l  %exitcond.6.not = icmp eq i64 %indvars.iv.next.6, 31999\l  br i1 %exitcond.6.not, label %for.cond.cleanup4, label %for.body5.7,\l... !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x564c93a1e240:s0 -> Node0x564c93a1e130;
	Node0x564c93a1e240:s1 -> Node0x564c93a1eda0;
	Node0x564c93a1eda0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body5.7:                                      \l  %arrayidx.7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.6\l  %28 = load float, float* %arrayidx.7, align 4, !tbaa !4\l  %arrayidx7.7 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.6\l  %29 = load float, float* %arrayidx7.7, align 4, !tbaa !4\l  %mul.7 = fmul float %28, %29\l  %arrayidx9.7 = getelementptr inbounds [32000 x float], [32000 x float]* @d,\l... i64 0, i64 %indvars.iv.next.6\l  %30 = load float, float* %arrayidx9.7, align 4, !tbaa !4\l  %mul10.7 = fmul float %mul.7, %30\l  store float %mul10.7, float* %arrayidx16.6, align 4, !tbaa !4\l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  %arrayidx16.7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.7\l  %31 = load float, float* %arrayidx16.7, align 32, !tbaa !4\l  %mul17.7 = fmul float %mul10.7, %31\l  %mul20.7 = fmul float %30, %mul17.7\l  store float %mul20.7, float* %arrayidx.7, align 4, !tbaa !4\l  br label %for.body5, !llvm.loop !10\l}"];
	Node0x564c93a1eda0 -> Node0x564c93a1e240;
}
