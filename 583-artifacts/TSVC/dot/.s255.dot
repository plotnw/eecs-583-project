digraph "CFG for 's255' function" {
	label="CFG for 's255' function";

	Node0x564c93ae2a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s255, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.body\l}"];
	Node0x564c93ae2a40 -> Node0x564c93ae2ee0;
	Node0x564c93ae2fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call15 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call16 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s255, i64 0, i64 0)) #11\l  ret float %call16\l}"];
	Node0x564c93ae2ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.body:                                         \l  %nl.032 = phi i32 [ 0, %entry ], [ %inc13, %for.cond.cleanup4 ]\l  %0 = load float, float* getelementptr inbounds ([32000 x float], [32000 x\l... float]* @b, i64 0, i64 31998), align 8, !tbaa !2\l  %x.031.pre = load float, float* getelementptr inbounds ([32000 x float],\l... [32000 x float]* @b, i64 0, i64 31999), align 4, !tbaa !2\l  br label %for.body5\l}"];
	Node0x564c93ae2ee0 -> Node0x564c93ae2960;
	Node0x564c93ae3420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{for.cond.cleanup4:                                \l  %call11 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc13 = add nuw nsw i32 %nl.032, 1\l  %exitcond.not = icmp eq i32 %inc13, 100000\l  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x564c93ae3420:s0 -> Node0x564c93ae2fa0;
	Node0x564c93ae3420:s1 -> Node0x564c93ae2ee0;
	Node0x564c93ae2960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body5:                                        \l  %x.031 = phi float [ %x.031.pre, %for.body ], [ %8, %for.body5 ]\l  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next.7, %for.body5 ]\l  %y.029 = phi float [ %0, %for.body ], [ %7, %for.body5 ]\l  %arrayidx = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64\l... 0, i64 %indvars.iv\l  %1 = load float, float* %arrayidx, align 32, !tbaa !2\l  %add = fadd float %x.031, %1\l  %add6 = fadd float %y.029, %add\l  %mul = fmul float %add6, 0x3FD54FDF40000000\l  %arrayidx8 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv\l  store float %mul, float* %arrayidx8, align 32, !tbaa !2\l  %indvars.iv.next = or i64 %indvars.iv, 1\l  %arrayidx.1 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next\l  %2 = load float, float* %arrayidx.1, align 4, !tbaa !2\l  %add.1 = fadd float %1, %2\l  %add6.1 = fadd float %x.031, %add.1\l  %mul.1 = fmul float %add6.1, 0x3FD54FDF40000000\l  %arrayidx8.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next\l  store float %mul.1, float* %arrayidx8.1, align 4, !tbaa !2\l  %indvars.iv.next.1 = or i64 %indvars.iv, 2\l  %arrayidx.2 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.1\l  %3 = load float, float* %arrayidx.2, align 8, !tbaa !2\l  %add.2 = fadd float %2, %3\l  %add6.2 = fadd float %1, %add.2\l  %mul.2 = fmul float %add6.2, 0x3FD54FDF40000000\l  %arrayidx8.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.1\l  store float %mul.2, float* %arrayidx8.2, align 8, !tbaa !2\l  %indvars.iv.next.2 = or i64 %indvars.iv, 3\l  %arrayidx.3 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.2\l  %4 = load float, float* %arrayidx.3, align 4, !tbaa !2\l  %add.3 = fadd float %3, %4\l  %add6.3 = fadd float %2, %add.3\l  %mul.3 = fmul float %add6.3, 0x3FD54FDF40000000\l  %arrayidx8.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.2\l  store float %mul.3, float* %arrayidx8.3, align 4, !tbaa !2\l  %indvars.iv.next.3 = or i64 %indvars.iv, 4\l  %arrayidx.4 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.3\l  %5 = load float, float* %arrayidx.4, align 16, !tbaa !2\l  %add.4 = fadd float %4, %5\l  %add6.4 = fadd float %3, %add.4\l  %mul.4 = fmul float %add6.4, 0x3FD54FDF40000000\l  %arrayidx8.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.3\l  store float %mul.4, float* %arrayidx8.4, align 16, !tbaa !2\l  %indvars.iv.next.4 = or i64 %indvars.iv, 5\l  %arrayidx.5 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.4\l  %6 = load float, float* %arrayidx.5, align 4, !tbaa !2\l  %add.5 = fadd float %5, %6\l  %add6.5 = fadd float %4, %add.5\l  %mul.5 = fmul float %add6.5, 0x3FD54FDF40000000\l  %arrayidx8.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.4\l  store float %mul.5, float* %arrayidx8.5, align 4, !tbaa !2\l  %indvars.iv.next.5 = or i64 %indvars.iv, 6\l  %arrayidx.6 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.5\l  %7 = load float, float* %arrayidx.6, align 8, !tbaa !2\l  %add.6 = fadd float %6, %7\l  %add6.6 = fadd float %5, %add.6\l  %mul.6 = fmul float %add6.6, 0x3FD54FDF40000000\l  %arrayidx8.6 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.5\l  store float %mul.6, float* %arrayidx8.6, align 8, !tbaa !2\l  %indvars.iv.next.6 = or i64 %indvars.iv, 7\l  %arrayidx.7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.6\l  %8 = load float, float* %arrayidx.7, align 4, !tbaa !2\l  %add.7 = fadd float %7, %8\l  %add6.7 = fadd float %6, %add.7\l  %mul.7 = fmul float %add6.7, 0x3FD54FDF40000000\l  %arrayidx8.7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.6\l  store float %mul.7, float* %arrayidx8.7, align 4, !tbaa !2\l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  %exitcond.7.not = icmp eq i64 %indvars.iv.next.7, 32000\l  br i1 %exitcond.7.not, label %for.cond.cleanup4, label %for.body5,\l... !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x564c93ae2960:s0 -> Node0x564c93ae3420;
	Node0x564c93ae2960:s1 -> Node0x564c93ae2960;
}
