digraph "CFG for 's2111' function" {
	label="CFG for 's2111' function";

	Node0x564c93a999f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @__func__.s2111, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c93a999f0 -> Node0x564c93a99e90;
	Node0x564c93a99e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond2.preheader:                              \l  %nl.046 = phi i32 [ 0, %entry ], [ %inc27, %for.cond.cleanup4 ]\l  br label %for.cond6.preheader\l}"];
	Node0x564c93a99e90 -> Node0x564c93a9a0c0;
	Node0x564c93a9a1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call29 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call30 = tail call float @calc_checksum(i8* getelementptr inbounds ([6 x\l... i8], [6 x i8]* @__func__.s2111, i64 0, i64 0)) #11\l  ret float %call30\l}"];
	Node0x564c93a9a0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.cond6.preheader:                              \l  %indvars.iv48 = phi i64 [ 1, %for.cond2.preheader ], [ %indvars.iv.next49,\l... %for.cond.cleanup8 ]\l  %0 = add nsw i64 %indvars.iv48, -1\l  %arrayidx11.phi.trans.insert = getelementptr inbounds [256 x [256 x float]],\l... [256 x [256 x float]]* @aa, i64 0, i64 %indvars.iv48, i64 0\l  %.pre = load float, float* %arrayidx11.phi.trans.insert, align 64, !tbaa !2\l  br label %for.body9\l}"];
	Node0x564c93a9a0c0 -> Node0x564c93a9abe0;
	Node0x564c93a99fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond.cleanup4:                                \l  %call25 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc27 = add nuw nsw i32 %nl.046, 1\l  %exitcond51.not = icmp eq i32 %inc27, 39000\l  br i1 %exitcond51.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x564c93a99fb0:s0 -> Node0x564c93a9a1d0;
	Node0x564c93a99fb0:s1 -> Node0x564c93a99e90;
	Node0x564c93a9a880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.cond.cleanup8:                                \l  %indvars.iv.next49 = add nuw nsw i64 %indvars.iv48, 1\l  %exitcond.not = icmp eq i64 %indvars.iv.next49, 256\l  br i1 %exitcond.not, label %for.cond.cleanup4, label %for.cond6.preheader,\l... !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x564c93a9a880:s0 -> Node0x564c93a99fb0;
	Node0x564c93a9a880:s1 -> Node0x564c93a9a0c0;
	Node0x564c93a9abe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body9:                                        \l  %1 = phi float [ %.pre, %for.cond6.preheader ], [ %conv17.7, %for.body9.7 ]\l  %indvars.iv = phi i64 [ 1, %for.cond6.preheader ], [ %indvars.iv.next.7,\l... %for.body9.7 ]\l  %arrayidx16 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %0, i64 %indvars.iv\l  %2 = load float, float* %arrayidx16, align 4, !tbaa !2\l  %add = fadd float %1, %2\l  %conv = fpext float %add to double\l  %div = fdiv double %conv, 1.900000e+00\l  %conv17 = fptrunc double %div to float\l  %arrayidx21 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv48, i64 %indvars.iv\l  store float %conv17, float* %arrayidx21, align 4, !tbaa !2\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %arrayidx16.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %0, i64 %indvars.iv.next\l  %3 = load float, float* %arrayidx16.1, align 4, !tbaa !2\l  %add.1 = fadd float %3, %conv17\l  %conv.1 = fpext float %add.1 to double\l  %div.1 = fdiv double %conv.1, 1.900000e+00\l  %conv17.1 = fptrunc double %div.1 to float\l  %arrayidx21.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv48, i64 %indvars.iv.next\l  store float %conv17.1, float* %arrayidx21.1, align 4, !tbaa !2\l  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2\l  %arrayidx16.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %0, i64 %indvars.iv.next.1\l  %4 = load float, float* %arrayidx16.2, align 4, !tbaa !2\l  %add.2 = fadd float %4, %conv17.1\l  %conv.2 = fpext float %add.2 to double\l  %div.2 = fdiv double %conv.2, 1.900000e+00\l  %conv17.2 = fptrunc double %div.2 to float\l  %arrayidx21.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv48, i64 %indvars.iv.next.1\l  store float %conv17.2, float* %arrayidx21.2, align 4, !tbaa !2\l  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv, 3\l  %arrayidx16.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %0, i64 %indvars.iv.next.2\l  %5 = load float, float* %arrayidx16.3, align 4, !tbaa !2\l  %add.3 = fadd float %5, %conv17.2\l  %conv.3 = fpext float %add.3 to double\l  %div.3 = fdiv double %conv.3, 1.900000e+00\l  %conv17.3 = fptrunc double %div.3 to float\l  %arrayidx21.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv48, i64 %indvars.iv.next.2\l  store float %conv17.3, float* %arrayidx21.3, align 4, !tbaa !2\l  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4\l  %arrayidx16.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %0, i64 %indvars.iv.next.3\l  %6 = load float, float* %arrayidx16.4, align 4, !tbaa !2\l  %add.4 = fadd float %6, %conv17.3\l  %conv.4 = fpext float %add.4 to double\l  %div.4 = fdiv double %conv.4, 1.900000e+00\l  %conv17.4 = fptrunc double %div.4 to float\l  %arrayidx21.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv48, i64 %indvars.iv.next.3\l  store float %conv17.4, float* %arrayidx21.4, align 4, !tbaa !2\l  %indvars.iv.next.4 = add nuw nsw i64 %indvars.iv, 5\l  %arrayidx16.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %0, i64 %indvars.iv.next.4\l  %7 = load float, float* %arrayidx16.5, align 4, !tbaa !2\l  %add.5 = fadd float %7, %conv17.4\l  %conv.5 = fpext float %add.5 to double\l  %div.5 = fdiv double %conv.5, 1.900000e+00\l  %conv17.5 = fptrunc double %div.5 to float\l  %arrayidx21.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv48, i64 %indvars.iv.next.4\l  store float %conv17.5, float* %arrayidx21.5, align 4, !tbaa !2\l  %indvars.iv.next.5 = add nuw nsw i64 %indvars.iv, 6\l  %arrayidx16.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %0, i64 %indvars.iv.next.5\l  %8 = load float, float* %arrayidx16.6, align 4, !tbaa !2\l  %add.6 = fadd float %8, %conv17.5\l  %conv.6 = fpext float %add.6 to double\l  %div.6 = fdiv double %conv.6, 1.900000e+00\l  %conv17.6 = fptrunc double %div.6 to float\l  %arrayidx21.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv48, i64 %indvars.iv.next.5\l  store float %conv17.6, float* %arrayidx21.6, align 4, !tbaa !2\l  %indvars.iv.next.6 = add nuw nsw i64 %indvars.iv, 7\l  %exitcond.6.not = icmp eq i64 %indvars.iv.next.6, 256\l  br i1 %exitcond.6.not, label %for.cond.cleanup8, label %for.body9.7,\l... !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x564c93a9abe0:s0 -> Node0x564c93a9a880;
	Node0x564c93a9abe0:s1 -> Node0x564c93a9b380;
	Node0x564c93a9b380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body9.7:                                      \l  %arrayidx16.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %0, i64 %indvars.iv.next.6\l  %9 = load float, float* %arrayidx16.7, align 4, !tbaa !2\l  %add.7 = fadd float %9, %conv17.6\l  %conv.7 = fpext float %add.7 to double\l  %div.7 = fdiv double %conv.7, 1.900000e+00\l  %conv17.7 = fptrunc double %div.7 to float\l  %arrayidx21.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv48, i64 %indvars.iv.next.6\l  store float %conv17.7, float* %arrayidx21.7, align 4, !tbaa !2\l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  br label %for.body9, !llvm.loop !11\l}"];
	Node0x564c93a9b380 -> Node0x564c93a9abe0;
}
