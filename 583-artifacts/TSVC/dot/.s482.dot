digraph "CFG for 's482' function" {
	label="CFG for 's482' function";

	Node0x564c93c8a710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s482, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c93c8a710 -> Node0x564c93c8abb0;
	Node0x564c93c8abb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{for.cond2.preheader:                              \l  %nl.033 = phi i32 [ 0, %entry ], [ %inc17, %cleanup ]\l  br label %for.body5\l}"];
	Node0x564c93c8abb0 -> Node0x564c93c8ad80;
	Node0x564c93c8ae70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call20 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call21 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s482, i64 0, i64 0)) #11\l  ret float %call21\l}"];
	Node0x564c93c8a670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.cond2:                                        \l  %indvars.iv.next = or i64 %indvars.iv, 1\l  %arrayidx.1 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next\l  %0 = load float, float* %arrayidx.1, align 4, !tbaa !2\l  %arrayidx7.1 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next\l  %1 = load float, float* %arrayidx7.1, align 4, !tbaa !2\l  %mul.1 = fmul float %0, %1\l  %arrayidx9.1 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next\l  %2 = load float, float* %arrayidx9.1, align 4, !tbaa !2\l  %add.1 = fadd float %2, %mul.1\l  store float %add.1, float* %arrayidx9.1, align 4, !tbaa !2\l  %cmp14.1 = fcmp ogt float %1, %0\l  br i1 %cmp14.1, label %cleanup, label %for.cond2.1\l|{<s0>T|<s1>F}}"];
	Node0x564c93c8a670:s0 -> Node0x564c93c8aca0;
	Node0x564c93c8a670:s1 -> Node0x564c93c8bc40;
	Node0x564c93c8ad80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body5:                                        \l  %indvars.iv = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next.7,\l... %for.cond2.7 ]\l  %arrayidx = getelementptr inbounds [32000 x float], [32000 x float]* @b, i64\l... 0, i64 %indvars.iv\l  %3 = load float, float* %arrayidx, align 32, !tbaa !2\l  %arrayidx7 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv\l  %4 = load float, float* %arrayidx7, align 32, !tbaa !2\l  %mul = fmul float %3, %4\l  %arrayidx9 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv\l  %5 = load float, float* %arrayidx9, align 32, !tbaa !2\l  %add = fadd float %5, %mul\l  store float %add, float* %arrayidx9, align 32, !tbaa !2\l  %cmp14 = fcmp ogt float %4, %3\l  br i1 %cmp14, label %cleanup, label %for.cond2\l|{<s0>T|<s1>F}}"];
	Node0x564c93c8ad80:s0 -> Node0x564c93c8aca0;
	Node0x564c93c8ad80:s1 -> Node0x564c93c8a670;
	Node0x564c93c8aca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{cleanup:                                          \l  %call15 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc17 = add nuw nsw i32 %nl.033, 1\l  %exitcond.not = icmp eq i32 %inc17, 100000\l  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x564c93c8aca0:s0 -> Node0x564c93c8ae70;
	Node0x564c93c8aca0:s1 -> Node0x564c93c8abb0;
	Node0x564c93c8bc40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.cond2.1:                                      \l  %indvars.iv.next.1 = or i64 %indvars.iv, 2\l  %arrayidx.2 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.1\l  %6 = load float, float* %arrayidx.2, align 8, !tbaa !2\l  %arrayidx7.2 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.1\l  %7 = load float, float* %arrayidx7.2, align 8, !tbaa !2\l  %mul.2 = fmul float %6, %7\l  %arrayidx9.2 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.1\l  %8 = load float, float* %arrayidx9.2, align 8, !tbaa !2\l  %add.2 = fadd float %8, %mul.2\l  store float %add.2, float* %arrayidx9.2, align 8, !tbaa !2\l  %cmp14.2 = fcmp ogt float %7, %6\l  br i1 %cmp14.2, label %cleanup, label %for.cond2.2\l|{<s0>T|<s1>F}}"];
	Node0x564c93c8bc40:s0 -> Node0x564c93c8aca0;
	Node0x564c93c8bc40:s1 -> Node0x564c93c8c590;
	Node0x564c93c8c590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.cond2.2:                                      \l  %indvars.iv.next.2 = or i64 %indvars.iv, 3\l  %arrayidx.3 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.2\l  %9 = load float, float* %arrayidx.3, align 4, !tbaa !2\l  %arrayidx7.3 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.2\l  %10 = load float, float* %arrayidx7.3, align 4, !tbaa !2\l  %mul.3 = fmul float %9, %10\l  %arrayidx9.3 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.2\l  %11 = load float, float* %arrayidx9.3, align 4, !tbaa !2\l  %add.3 = fadd float %11, %mul.3\l  store float %add.3, float* %arrayidx9.3, align 4, !tbaa !2\l  %cmp14.3 = fcmp ogt float %10, %9\l  br i1 %cmp14.3, label %cleanup, label %for.cond2.3\l|{<s0>T|<s1>F}}"];
	Node0x564c93c8c590:s0 -> Node0x564c93c8aca0;
	Node0x564c93c8c590:s1 -> Node0x564c93c8dec0;
	Node0x564c93c8dec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{for.cond2.3:                                      \l  %indvars.iv.next.3 = or i64 %indvars.iv, 4\l  %arrayidx.4 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.3\l  %12 = load float, float* %arrayidx.4, align 16, !tbaa !2\l  %arrayidx7.4 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.3\l  %13 = load float, float* %arrayidx7.4, align 16, !tbaa !2\l  %mul.4 = fmul float %12, %13\l  %arrayidx9.4 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.3\l  %14 = load float, float* %arrayidx9.4, align 16, !tbaa !2\l  %add.4 = fadd float %14, %mul.4\l  store float %add.4, float* %arrayidx9.4, align 16, !tbaa !2\l  %cmp14.4 = fcmp ogt float %13, %12\l  br i1 %cmp14.4, label %cleanup, label %for.cond2.4\l|{<s0>T|<s1>F}}"];
	Node0x564c93c8dec0:s0 -> Node0x564c93c8aca0;
	Node0x564c93c8dec0:s1 -> Node0x564c93c8ea70;
	Node0x564c93c8ea70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{for.cond2.4:                                      \l  %indvars.iv.next.4 = or i64 %indvars.iv, 5\l  %arrayidx.5 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.4\l  %15 = load float, float* %arrayidx.5, align 4, !tbaa !2\l  %arrayidx7.5 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.4\l  %16 = load float, float* %arrayidx7.5, align 4, !tbaa !2\l  %mul.5 = fmul float %15, %16\l  %arrayidx9.5 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.4\l  %17 = load float, float* %arrayidx9.5, align 4, !tbaa !2\l  %add.5 = fadd float %17, %mul.5\l  store float %add.5, float* %arrayidx9.5, align 4, !tbaa !2\l  %cmp14.5 = fcmp ogt float %16, %15\l  br i1 %cmp14.5, label %cleanup, label %for.cond2.5\l|{<s0>T|<s1>F}}"];
	Node0x564c93c8ea70:s0 -> Node0x564c93c8aca0;
	Node0x564c93c8ea70:s1 -> Node0x564c93c8f290;
	Node0x564c93c8f290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{for.cond2.5:                                      \l  %indvars.iv.next.5 = or i64 %indvars.iv, 6\l  %arrayidx.6 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.5\l  %18 = load float, float* %arrayidx.6, align 8, !tbaa !2\l  %arrayidx7.6 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.5\l  %19 = load float, float* %arrayidx7.6, align 8, !tbaa !2\l  %mul.6 = fmul float %18, %19\l  %arrayidx9.6 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.5\l  %20 = load float, float* %arrayidx9.6, align 8, !tbaa !2\l  %add.6 = fadd float %20, %mul.6\l  store float %add.6, float* %arrayidx9.6, align 8, !tbaa !2\l  %cmp14.6 = fcmp ogt float %19, %18\l  br i1 %cmp14.6, label %cleanup, label %for.cond2.6\l|{<s0>T|<s1>F}}"];
	Node0x564c93c8f290:s0 -> Node0x564c93c8aca0;
	Node0x564c93c8f290:s1 -> Node0x564c93c8fb40;
	Node0x564c93c8fb40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{for.cond2.6:                                      \l  %indvars.iv.next.6 = or i64 %indvars.iv, 7\l  %arrayidx.7 = getelementptr inbounds [32000 x float], [32000 x float]* @b,\l... i64 0, i64 %indvars.iv.next.6\l  %21 = load float, float* %arrayidx.7, align 4, !tbaa !2\l  %arrayidx7.7 = getelementptr inbounds [32000 x float], [32000 x float]* @c,\l... i64 0, i64 %indvars.iv.next.6\l  %22 = load float, float* %arrayidx7.7, align 4, !tbaa !2\l  %mul.7 = fmul float %21, %22\l  %arrayidx9.7 = getelementptr inbounds [32000 x float], [32000 x float]* @a,\l... i64 0, i64 %indvars.iv.next.6\l  %23 = load float, float* %arrayidx9.7, align 4, !tbaa !2\l  %add.7 = fadd float %23, %mul.7\l  store float %add.7, float* %arrayidx9.7, align 4, !tbaa !2\l  %cmp14.7 = fcmp ogt float %22, %21\l  br i1 %cmp14.7, label %cleanup, label %for.cond2.7\l|{<s0>T|<s1>F}}"];
	Node0x564c93c8fb40:s0 -> Node0x564c93c8aca0;
	Node0x564c93c8fb40:s1 -> Node0x564c93c8be80;
	Node0x564c93c8be80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{for.cond2.7:                                      \l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  %exitcond.7.not = icmp eq i64 %indvars.iv.next.7, 32000\l  br i1 %exitcond.7.not, label %cleanup, label %for.body5, !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x564c93c8be80:s0 -> Node0x564c93c8aca0;
	Node0x564c93c8be80:s1 -> Node0x564c93c8ad80;
}
