digraph "CFG for 's125' function" {
	label="CFG for 's125' function";

	Node0x564c939c4670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{entry:\l  %call = tail call i32 @initialise_arrays(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s125, i64 0, i64 0)) #11\l  %t1 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 0\l  %call1 = tail call i32 @gettimeofday(%struct.timeval* %t1, i8* null) #11\l  br label %for.cond2.preheader\l}"];
	Node0x564c939c4670 -> Node0x564c939c4b10;
	Node0x564c939c4b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond2.preheader:                              \l  %nl.051 = phi i32 [ 0, %entry ], [ %inc28, %for.cond.cleanup4 ]\l  br label %for.cond6.preheader\l}"];
	Node0x564c939c4b10 -> Node0x564c939c4d40;
	Node0x564c939c4eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{for.cond.cleanup:                                 \l  %t2 = getelementptr inbounds %struct.args_t, %struct.args_t* %func_args, i64\l... 0, i32 1\l  %call30 = tail call i32 @gettimeofday(%struct.timeval* nonnull %t2, i8*\l... null) #11\l  %call31 = tail call float @calc_checksum(i8* getelementptr inbounds ([5 x\l... i8], [5 x i8]* @__func__.s125, i64 0, i64 0)) #11\l  ret float %call31\l}"];
	Node0x564c939c4d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.cond6.preheader:                              \l  %indvars.iv54 = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next55,\l... %for.cond.cleanup8 ]\l  %k.049 = phi i64 [ -1, %for.cond2.preheader ], [ %indvars.iv.next53.7,\l... %for.cond.cleanup8 ]\l  %sext = shl i64 %k.049, 32\l  %0 = ashr exact i64 %sext, 32\l  br label %for.body9\l}"];
	Node0x564c939c4d40 -> Node0x564c939c5a20;
	Node0x564c939c4c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond.cleanup4:                                \l  %call26 = tail call i32 @dummy(float* getelementptr inbounds ([32000 x\l... float], [32000 x float]* @a, i64 0, i64 0), float* getelementptr inbounds\l... ([32000 x float], [32000 x float]* @b, i64 0, i64 0), float* getelementptr\l... inbounds ([32000 x float], [32000 x float]* @c, i64 0, i64 0), float*\l... getelementptr inbounds ([32000 x float], [32000 x float]* @d, i64 0, i64 0),\l... float* getelementptr inbounds ([32000 x float], [32000 x float]* @e, i64 0,\l... i64 0), [256 x float]* getelementptr inbounds ([256 x [256 x float]], [256 x\l... [256 x float]]* @aa, i64 0, i64 0), [256 x float]* getelementptr inbounds\l... ([256 x [256 x float]], [256 x [256 x float]]* @bb, i64 0, i64 0), [256 x\l... float]* getelementptr inbounds ([256 x [256 x float]], [256 x [256 x float]]*\l... @cc, i64 0, i64 0), float 0.000000e+00) #11\l  %inc28 = add nuw nsw i32 %nl.051, 1\l  %exitcond56.not = icmp eq i32 %inc28, 39000\l  br i1 %exitcond56.not, label %for.cond.cleanup, label %for.cond2.preheader,\l... !llvm.loop !2\l|{<s0>T|<s1>F}}"];
	Node0x564c939c4c30:s0 -> Node0x564c939c4eb0;
	Node0x564c939c4c30:s1 -> Node0x564c939c4b10;
	Node0x564c939c5560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.cond.cleanup8:                                \l  %indvars.iv.next55 = add nuw nsw i64 %indvars.iv54, 1\l  %exitcond.not = icmp eq i64 %indvars.iv.next55, 256\l  br i1 %exitcond.not, label %for.cond.cleanup4, label %for.cond6.preheader,\l... !llvm.loop !4\l|{<s0>T|<s1>F}}"];
	Node0x564c939c5560:s0 -> Node0x564c939c4c30;
	Node0x564c939c5560:s1 -> Node0x564c939c4d40;
	Node0x564c939c5a20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body9:                                        \l  %indvars.iv52 = phi i64 [ %0, %for.cond6.preheader ], [\l... %indvars.iv.next53.7, %for.body9 ]\l  %indvars.iv = phi i64 [ 0, %for.cond6.preheader ], [ %indvars.iv.next.7,\l... %for.body9 ]\l  %indvars.iv.next53 = add nsw i64 %indvars.iv52, 1\l  %arrayidx11 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv54, i64 %indvars.iv\l  %1 = load float, float* %arrayidx11, align 32, !tbaa !5\l  %arrayidx15 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv54, i64 %indvars.iv\l  %2 = load float, float* %arrayidx15, align 32, !tbaa !5\l  %arrayidx19 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv54, i64 %indvars.iv\l  %3 = load float, float* %arrayidx19, align 32, !tbaa !5\l  %mul = fmul float %2, %3\l  %add = fadd float %1, %mul\l  %arrayidx21 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %indvars.iv.next53\l  store float %add, float* %arrayidx21, align 4, !tbaa !5\l  %indvars.iv.next = or i64 %indvars.iv, 1\l  %indvars.iv.next53.1 = add nsw i64 %indvars.iv52, 2\l  %arrayidx11.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv54, i64 %indvars.iv.next\l  %4 = load float, float* %arrayidx11.1, align 4, !tbaa !5\l  %arrayidx15.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv54, i64 %indvars.iv.next\l  %5 = load float, float* %arrayidx15.1, align 4, !tbaa !5\l  %arrayidx19.1 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv54, i64 %indvars.iv.next\l  %6 = load float, float* %arrayidx19.1, align 4, !tbaa !5\l  %mul.1 = fmul float %5, %6\l  %add.1 = fadd float %4, %mul.1\l  %arrayidx21.1 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %indvars.iv.next53.1\l  store float %add.1, float* %arrayidx21.1, align 4, !tbaa !5\l  %indvars.iv.next.1 = or i64 %indvars.iv, 2\l  %indvars.iv.next53.2 = add nsw i64 %indvars.iv52, 3\l  %arrayidx11.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv54, i64 %indvars.iv.next.1\l  %7 = load float, float* %arrayidx11.2, align 8, !tbaa !5\l  %arrayidx15.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv54, i64 %indvars.iv.next.1\l  %8 = load float, float* %arrayidx15.2, align 8, !tbaa !5\l  %arrayidx19.2 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv54, i64 %indvars.iv.next.1\l  %9 = load float, float* %arrayidx19.2, align 8, !tbaa !5\l  %mul.2 = fmul float %8, %9\l  %add.2 = fadd float %7, %mul.2\l  %arrayidx21.2 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %indvars.iv.next53.2\l  store float %add.2, float* %arrayidx21.2, align 4, !tbaa !5\l  %indvars.iv.next.2 = or i64 %indvars.iv, 3\l  %indvars.iv.next53.3 = add nsw i64 %indvars.iv52, 4\l  %arrayidx11.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv54, i64 %indvars.iv.next.2\l  %10 = load float, float* %arrayidx11.3, align 4, !tbaa !5\l  %arrayidx15.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv54, i64 %indvars.iv.next.2\l  %11 = load float, float* %arrayidx15.3, align 4, !tbaa !5\l  %arrayidx19.3 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv54, i64 %indvars.iv.next.2\l  %12 = load float, float* %arrayidx19.3, align 4, !tbaa !5\l  %mul.3 = fmul float %11, %12\l  %add.3 = fadd float %10, %mul.3\l  %arrayidx21.3 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %indvars.iv.next53.3\l  store float %add.3, float* %arrayidx21.3, align 4, !tbaa !5\l  %indvars.iv.next.3 = or i64 %indvars.iv, 4\l  %indvars.iv.next53.4 = add nsw i64 %indvars.iv52, 5\l  %arrayidx11.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv54, i64 %indvars.iv.next.3\l  %13 = load float, float* %arrayidx11.4, align 16, !tbaa !5\l  %arrayidx15.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv54, i64 %indvars.iv.next.3\l  %14 = load float, float* %arrayidx15.4, align 16, !tbaa !5\l  %arrayidx19.4 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv54, i64 %indvars.iv.next.3\l  %15 = load float, float* %arrayidx19.4, align 16, !tbaa !5\l  %mul.4 = fmul float %14, %15\l  %add.4 = fadd float %13, %mul.4\l  %arrayidx21.4 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %indvars.iv.next53.4\l  store float %add.4, float* %arrayidx21.4, align 4, !tbaa !5\l  %indvars.iv.next.4 = or i64 %indvars.iv, 5\l  %indvars.iv.next53.5 = add nsw i64 %indvars.iv52, 6\l  %arrayidx11.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv54, i64 %indvars.iv.next.4\l  %16 = load float, float* %arrayidx11.5, align 4, !tbaa !5\l  %arrayidx15.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv54, i64 %indvars.iv.next.4\l  %17 = load float, float* %arrayidx15.5, align 4, !tbaa !5\l  %arrayidx19.5 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv54, i64 %indvars.iv.next.4\l  %18 = load float, float* %arrayidx19.5, align 4, !tbaa !5\l  %mul.5 = fmul float %17, %18\l  %add.5 = fadd float %16, %mul.5\l  %arrayidx21.5 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %indvars.iv.next53.5\l  store float %add.5, float* %arrayidx21.5, align 4, !tbaa !5\l  %indvars.iv.next.5 = or i64 %indvars.iv, 6\l  %indvars.iv.next53.6 = add nsw i64 %indvars.iv52, 7\l  %arrayidx11.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv54, i64 %indvars.iv.next.5\l  %19 = load float, float* %arrayidx11.6, align 8, !tbaa !5\l  %arrayidx15.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv54, i64 %indvars.iv.next.5\l  %20 = load float, float* %arrayidx15.6, align 8, !tbaa !5\l  %arrayidx19.6 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv54, i64 %indvars.iv.next.5\l  %21 = load float, float* %arrayidx19.6, align 8, !tbaa !5\l  %mul.6 = fmul float %20, %21\l  %add.6 = fadd float %19, %mul.6\l  %arrayidx21.6 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %indvars.iv.next53.6\l  store float %add.6, float* %arrayidx21.6, align 4, !tbaa !5\l  %indvars.iv.next.6 = or i64 %indvars.iv, 7\l  %indvars.iv.next53.7 = add nsw i64 %indvars.iv52, 8\l  %arrayidx11.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @aa, i64 0, i64 %indvars.iv54, i64 %indvars.iv.next.6\l  %22 = load float, float* %arrayidx11.7, align 4, !tbaa !5\l  %arrayidx15.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @bb, i64 0, i64 %indvars.iv54, i64 %indvars.iv.next.6\l  %23 = load float, float* %arrayidx15.7, align 4, !tbaa !5\l  %arrayidx19.7 = getelementptr inbounds [256 x [256 x float]], [256 x [256 x\l... float]]* @cc, i64 0, i64 %indvars.iv54, i64 %indvars.iv.next.6\l  %24 = load float, float* %arrayidx19.7, align 4, !tbaa !5\l  %mul.7 = fmul float %23, %24\l  %add.7 = fadd float %22, %mul.7\l  %arrayidx21.7 = getelementptr inbounds [65536 x float], [65536 x float]*\l... @flat_2d_array, i64 0, i64 %indvars.iv.next53.7\l  store float %add.7, float* %arrayidx21.7, align 4, !tbaa !5\l  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8\l  %exitcond.7.not = icmp eq i64 %indvars.iv.next.7, 256\l  br i1 %exitcond.7.not, label %for.cond.cleanup8, label %for.body9,\l... !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x564c939c5a20:s0 -> Node0x564c939c5560;
	Node0x564c939c5a20:s1 -> Node0x564c939c5a20;
}
